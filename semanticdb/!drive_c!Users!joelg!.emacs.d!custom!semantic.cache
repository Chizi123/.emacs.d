;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("setup-environment" package nil nil [1 29])
            ("setq" code nil nil [31 62])
            ("setq" code nil nil [64 240])
            ("winner-mode" code nil nil [242 257])
            ("column-number-mode" code nil nil [259 281])
            ("load-theme" code nil nil [283 306]))          
      :file "setup-environment.el"
      :pointmax 307
      :fsize 701
      :lastmodtime '(23536 3823 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("setup-files" package nil nil [1 23])
            ("when" code nil nil [40 108])
            ("setq" code nil nil [109 141]))          
      :file "setup-files.el"
      :pointmax 142
      :fsize 147
      :lastmodtime '(23537 11060 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("setup-external" package nil nil [1 26]))          
      :file "setup-external.el"
      :pointmax 27
      :fsize 27
      :lastmodtime '(23534 46723 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "setup-applications.el"
      :fsize 1050
      :lastmodtime '(23535 15277 0 0))
    (semanticdb-table "semanticdb-table"
      :file "setup-communication.el"
      :fsize 32
      :lastmodtime '(23534 46818 0 0))
    (semanticdb-table "semanticdb-table"
      :file "setup-convenience.el"
      :fsize 2253
      :lastmodtime '(23535 16050 0 0))
    (semanticdb-table "semanticdb-table"
      :file "setup-data.el"
      :fsize 23
      :lastmodtime '(23534 46591 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("setup-development" package nil nil [1 29])
            ("add-hook" code nil nil [31 83])
            ("add-hook" code nil nil [84 142])
            ("add-hook" code nil nil [143 189])
            ("setq" code nil nil [260 294]))          
      :file "setup-development.el"
      :pointmax 295
      :fsize 302
      :lastmodtime '(23541 905 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("setup-editing" package nil nil [1 25])
            ("setq" code nil nil [63 313])
            ("setq" code nil nil [315 345])
            ("set-terminal-coding-system" code nil nil [347 382])
            ("set-keyboard-coding-system" code nil nil [383 418])
            ("set-language-environment" code nil nil [419 453])
            ("prefer-coding-system" code nil nil [454 483])
            ("setq-default" code nil nil [485 518])
            ("delete-selection-mode" code nil nil [519 542])
            ("global-set-key" code nil nil [543 591])
            ("setq" code nil nil [622 752])
            ("global-set-key" code nil nil [787 834])
            ("add-hook" code nil nil [878 1546])
            ("prelude-move-beginning-of-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [1549 2271])
            ("global-set-key" code nil nil [2273 2333])
            ("kill-ring-save" function (:arguments ("before" "slick-copy" "activate" "compile")) nil [2335 2660])
            ("kill-region" function (:arguments ("before" "slick-cut" "activate" "compile")) nil [2662 2956])
            ("kill-line" function (:arguments ("before" "check-position" "activate")) nil [3057 3452])
            ("yank-indent-modes" variable (:default-value (quote (LaTeX-mode TeX-mode))) nil [3549 3740])
            ("yank-indent-blacklisted-modes" variable (:default-value (quote (python-mode slim-mode haml-mode))) nil [3742 3867])
            ("yank-advised-indent-threshold" variable (:default-value 1000) nil [3869 3989])
            ("yank-advised-indent-function" function (:arguments ("beg" "end")) nil [3991 4184])
            ("yank" function (:arguments ("after" "yank-indent" "activate")) nil [4186 4641])
            ("yank-pop" function (:arguments ("after" "yank-pop-indent" "activate")) nil [4643 5111])
            ("prelude-duplicate-current-line-or-region" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [5132 5756])
            ("indent-buffer" function (:user-visible-flag t) nil [5777 5900])
            ("prelude-indent-sensitive-modes" variable (:default-value (quote (coffee-mode python-mode slim-mode haml-mode yaml-mode))) nil [5924 6089])
            ("indent-region-or-buffer" function (:user-visible-flag t) nil [6091 6550])
            ("global-set-key" code nil nil [6552 6607])
            ("prelude-get-positions-of-line-or-region" function nil nil [6683 7045])
            ("kill-default-buffer" function (:user-visible-flag t) nil [7047 7258])
            ("global-set-key" code nil nil [7260 7311])
            ("prelude-smart-open-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [7331 7675])
            ("prelude-smart-open-line-above" function (:user-visible-flag t) nil [7677 7955])
            ("global-set-key" code nil nil [7957 8010])
            ("global-set-key" code nil nil [8011 8050]))          
      :file "setup-editing.el"
      :pointmax 8051
      :fsize 8276
      :lastmodtime '(23534 46502 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "setup-faces.el"
      :fsize 24
      :lastmodtime '(23534 46722 0 0))
    (semanticdb-table "semanticdb-table"
      :file "setup-help.el"
      :fsize 23
      :lastmodtime '(23534 46722 0 0))
    (semanticdb-table "semanticdb-table"
      :file "setup-programming.el"
      :fsize 32
      :lastmodtime '(23534 46110 0 0))
    (semanticdb-table "semanticdb-table"
      :file "setup-text.el"
      :fsize 23
      :lastmodtime '(23534 46746 0 0))
    (semanticdb-table "semanticdb-table"
      :file "setup-local.el"
      :fsize 24
      :lastmodtime '(23534 46721 0 0)))
  :file "!drive_c!Users!joelg!.emacs.d!custom!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
