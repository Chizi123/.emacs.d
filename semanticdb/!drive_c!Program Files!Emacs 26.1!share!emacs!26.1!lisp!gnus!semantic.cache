;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1222 1235])
            ("time-date" include nil nil [1238 1258])
            ("gnus-completing-read-function" variable (:default-value (quote gnus-emacs-completing-read)) nil [1260 1753])
            ("gnus-completion-styles" variable (:default-value (append (when (and (assq (quote substring) completion-styles-alist) (not (memq (quote substring) completion-styles))) (list (quote substring))) completion-styles)) nil [1755 2068])
            ("nnmail-pathname-coding-system" variable nil nil [2125 2163])
            ("nnmail-active-file-coding-system" variable nil nil [2164 2205])
            ("gnus-emphasize-whitespace-regexp" variable nil nil [2259 2300])
            ("gnus-original-article-buffer" variable nil nil [2301 2338])
            ("gnus-user-agent" variable nil nil [2339 2363])
            ("gnus-get-buffer-window" function (:prototype-flag t) nil [2365 2410])
            ("nnheader-narrow-to-headers" function (:prototype-flag t) nil [2411 2460])
            ("nnheader-replace-chars-in-string" function (:prototype-flag t) nil [2461 2516])
            ("mail-header-remove-comments" function (:prototype-flag t) nil [2517 2569])
            ("gnus-replace-in-string" function (:arguments ("string" "regexp" "newtext" "literal")) nil [2571 2977])
            ("gnus-eval-in-buffer-window" function (:arguments ("buffer" "forms")) nil [2979 3524])
            ("put" code nil nil [3526 3583])
            ("put" code nil nil [3584 3648])
            ("gnus-intern-safe" function (:arguments ("string" "hashtable")) nil [3650 3858])
            ("gnus-goto-char" function (:arguments ("point")) nil [3860 3925])
            ("gnus-buffer-exists-p" function (:arguments ("buffer")) nil [3927 4087])
            ("gnus-delete-first" function (:arguments ("elt" "list")) nil [4089 4424])
            ("gnus-delete-line" function (:arguments ("n")) nil [4477 4597])
            ("gnus-extract-address-components" function (:arguments ("from")) nil [4599 6403])
            ("declare-function" code nil nil [6405 6480])
            ("gnus-fetch-field" function (:arguments ("field")) nil [6482 6742])
            ("gnus-fetch-original-field" function (:arguments ("field")) nil [6744 6933])
            ("gnus-goto-colon" function nil nil [6936 7137])
            ("declare-function" code nil nil [7139 7214])
            ("declare-function" code nil nil [7215 7286])
            ("declare-function" code nil nil [7287 7357])
            ("declare-function" code nil nil [7414 7513])
            ("gnus-decode-newsgroups" function (:arguments ("newsgroups" "group" "method")) nil [7515 7840])
            ("gnus-remove-text-with-property" function (:arguments ("prop")) nil [7842 8301])
            ("gnus-find-text-property-region" function (:arguments ("start" "end" "prop")) nil [8303 8929])
            ("gnus-newsgroup-directory-form" function (:arguments ("newsgroup")) nil [8931 9319])
            ("gnus-newsgroup-savable-name" function (:arguments ("group")) nil [9321 9500])
            ("gnus-string>" function (:arguments ("s1" "s2")) nil [9502 9579])
            ("gnus-string<" function (:arguments ("s1" "s2")) nil [9581 9984])
            ("gnus-file-newer-than" function (:arguments ("file" "date")) nil [10007 10203])
            ("gnus-local-set-keys" function (:arguments ("plist")) nil [10225 10370])
            ("gnus-define-keys" function (:arguments ("keymap" "plist")) nil [10372 10515])
            ("gnus-define-keys-safe" function (:arguments ("keymap" "plist")) nil [10517 10708])
            ("put" code nil nil [10710 10757])
            ("put" code nil nil [10758 10810])
            ("put" code nil nil [10811 10861])
            ("gnus-define-keymap" function (:arguments ("keymap" "plist")) nil [10863 11000])
            ("put" code nil nil [11002 11051])
            ("gnus-define-keys-1" function (:arguments ("keymap" "plist" "safe")) nil [11053 11697])
            ("gnus-y-or-n-p" function (:arguments ("prompt")) nil [11699 11780])
            ("gnus-yes-or-no-p" function (:arguments ("prompt")) nil [11781 11868])
            ("gnus-seconds-today" function nil nil [12100 12277])
            ("gnus-seconds-month" function nil nil [12279 12507])
            ("gnus-seconds-year" function nil nil [12509 12817])
            ("gnus-date-get-time" function (:arguments ("date")) nil [12819 13258])
            ("gnus-dd-mmm" function (:arguments ("messy-date")) nil [13260 13459])
            ("gnus-time-iso8601" function (:arguments ("time")) nil [13461 13595])
            ("gnus-date-iso8601" function (:arguments ("date")) nil [13597 13759])
            ("gnus-mode-string-quote" function (:arguments ("string")) nil [13761 13878])
            ("gnus-make-hashtable" function (:arguments ("hashsize")) nil [13992 14119])
            ("gnus-create-hash-size" function (:arguments ("min")) nil [14534 14636])
            ("gnus-verbose" variable (:default-value 6) nil [14638 14994])
            ("gnus-add-timestamp-to-message" variable nil nil [14996 15599])
            ("gnus-message-with-timestamp-1" function (:arguments ("format-string" "args")) nil [15622 16759])
            ("gnus-action-message-log" variable nil nil [16762 16798])
            ("gnus-message-with-timestamp" function (:arguments ("format-string" "args")) nil [16800 17076])
            ("gnus-message" function (:arguments ("level" "args")) nil [17078 17854])
            ("gnus-final-warning" function nil nil [17856 18097])
            ("gnus-error" function (:arguments ("level" "args")) nil [18099 18457])
            ("gnus-split-references" function (:arguments ("references")) nil [18459 18802])
            ("gnus-extract-references" function (:arguments ("references")) nil [18804 19126])
            ("gnus-parent-id" function (:arguments ("references" "n")) nil [19128 19622])
            ("gnus-buffer-live-p" function (:arguments ("buffer")) nil [19624 19753])
            ("gnus-horizontal-recenter" function nil nil [19755 20639])
            ("gnus-read-event-char" function (:arguments ("prompt")) nil [20641 20795])
            ("gnus-copy-file" function
               (:user-visible-flag t
                :arguments ("file" "to"))
                nil [20797 21091])
            ("gnus-work-buffer" variable (:default-value " *gnus work*") nil [21093 21133])
            ("declare-function" code nil nil [21135 21190])
            ("declare-function" code nil nil [21220 21268])
            ("gnus-set-work-buffer" function nil nil [21270 21560])
            ("gnus-group-real-name" function (:arguments ("group")) nil [21562 21762])
            ("gnus-group-server" function (:arguments ("group")) nil [21764 22194])
            ("gnus-make-sort-function" function (:arguments ("funs")) nil [22196 22644])
            ("gnus-make-sort-function-1" function (:arguments ("funs")) nil [22646 23251])
            ("gnus-turn-off-edit-menu" function (:arguments ("type")) nil [23253 23442])
            ("gnus-bind-print-variables" function (:arguments ("forms")) nil [23444 24082])
            ("gnus-prin1" function (:arguments ("form")) nil [24084 24347])
            ("gnus-prin1-to-string" function (:arguments ("form")) nil [24349 24593])
            ("gnus-pp" function (:arguments ("form" "stream")) nil [24595 24878])
            ("gnus-pp-to-string" function (:arguments ("form")) nil [24880 25125])
            ("gnus-make-directory" function (:arguments ("directory")) nil [25127 25420])
            ("gnus-write-buffer" function (:arguments ("file")) nil [25422 25767])
            ("gnus-delete-file" function (:arguments ("file")) nil [25769 25883])
            ("gnus-delete-duplicates" function (:arguments ("list")) nil [25885 26109])
            ("gnus-delete-directory" function (:arguments ("directory")) nil [26111 26651])
            ("gnus-strip-whitespace" function (:arguments ("string")) nil [26653 26839])
            ("gnus-put-text-property-excluding-newlines" function (:arguments ("beg" "end" "prop" "val")) nil [26841 27279])
            ("gnus-put-overlay-excluding-newlines" function (:arguments ("beg" "end" "prop" "val")) nil [27281 27731])
            ("gnus-put-text-property-excluding-characters-with-faces" function (:arguments ("beg" "end" "prop" "val")) nil [27733 28327])
            ("gnus-get-text-property-excluding-characters-with-faces" function (:arguments ("pos" "prop")) nil [28329 28732])
            ("gnus-faces-at" function (:arguments ("position")) nil [28734 28989])
            ("gnus-atomic-be-safe" variable (:default-value t) nil [29321 29424])
            ("gnus-atomic-progn" function (:arguments ("forms")) nil [29426 29987])
            ("put" code nil nil [29989 30037])
            ("gnus-atomic-progn-assign" function (:arguments ("protect" "forms")) nil [30039 31306])
            ("put" code nil nil [31308 31363])
            ("gnus-atomic-setq" function (:arguments ("pairs")) nil [31429 31965])
            ("rmail" include nil nil [32067 32083])
            ("rmail-update-summary" function (:prototype-flag t) nil [32084 32127])
            ("mm-text-coding-system" variable nil nil [32129 32159])
            ("declare-function" code nil nil [32161 32272])
            ("declare-function" code nil nil [32273 32327])
            ("declare-function" code nil nil [32328 32390])
            ("declare-function" code nil nil [32391 32460])
            ("declare-function" code nil nil [32461 32511])
            ("declare-function" code nil nil [32512 32582])
            ("declare-function" code nil nil [32626 32679])
            ("declare-function" code nil nil [32680 32739])
            ("declare-function" code nil nil [32740 32797])
            ("gnus-output-to-rmail" function (:arguments ("filename" "ask")) nil [32799 36740])
            ("gnus-output-to-mail" function (:arguments ("filename" "ask")) nil [36742 38654])
            ("gnus-convert-article-to-rmail" function nil nil [38656 39077])
            ("gnus-map-function" function (:arguments ("funs" "arg")) nil [39079 39290])
            ("gnus-run-hooks" function (:arguments ("funcs")) nil [39292 39445])
            ("gnus-run-hook-with-args" function (:arguments ("hook" "args")) nil [39447 39635])
            ("gnus-run-mode-hooks" function (:arguments ("funcs")) nil [39637 39785])
            ("gnus-group-buffer" variable nil nil [39800 39826])
            ("gnus-alive-p" function nil nil [39849 40068])
            ("gnus-remove-if" function (:arguments ("predicate" "sequence" "hash-table-p")) nil [40070 40713])
            ("gnus-remove-if-not" function (:arguments ("predicate" "sequence" "hash-table-p")) nil [40715 41362])
            ("gnus-grep-in-list" function (:arguments ("word" "list")) nil [41364 41588])
            ("gnus-alist-pull" function (:arguments ("key" "alist" "assoc-p")) nil [41590 41840])
            ("gnus-globalify-regexp" function (:arguments ("re")) nil [41842 42051])
            ("gnus-set-window-start" function (:arguments ("point")) nil [42053 42277])
            ("gnus-annotation-in-region-p" function (:arguments ("b" "e")) nil [42279 42451])
            ("gnus-or" function (:arguments ("elems")) nil [42453 42615])
            ("gnus-and" function (:arguments ("elems")) nil [42617 42790])
            ("declare-function" code nil nil [42821 42870])
            ("gnus-write-active-file" function (:arguments ("file" "hashtb" "full-names")) nil [42872 43705])
            ("gnus-with-output-to-file" function (:arguments ("file" "body")) nil [43759 44547])
            ("put" code nil nil [44549 44604])
            ("put" code nil nil [44605 44667])
            ("gnus-add-text-properties-when" function (:arguments ("property" "value" "start" "end" "properties" "object")) nil [44669 45190])
            ("gnus-remove-text-properties-when" function (:arguments ("property" "value" "start" "end" "properties" "object")) nil [45192 45685])
            ("gnus-string-remove-all-properties" function (:arguments ("string")) nil [45687 45858])
            ("gnus-string-equal" function (:arguments ("x" "y")) nil [46027 46232])
            ("gnus-use-byte-compile" variable (:default-value t) nil [46234 46460])
            ("gnus-byte-compile" function (:arguments ("form")) nil [46462 46800])
            ("gnus-remassoc" function (:arguments ("key" "alist")) nil [46802 47274])
            ("gnus-update-alist-soft" function (:arguments ("key" "value" "alist")) nil [47276 47423])
            ("gnus-create-info-command" function (:arguments ("node")) nil [47425 47709])
            ("gnus-not-ignore" function (:arguments ("args")) nil [47711 47751])
            ("gnus-directory-sep-char-regexp" variable (:default-value "/") nil [47753 47944])
            ("gnus-url-unhex" function (:arguments ("x")) nil [47946 48058])
            ("gnus-url-unhex-string" function (:arguments ("str" "allow-newlines")) nil [48085 48908])
            ("gnus-make-predicate" function (:arguments ("spec")) nil [48910 49183])
            ("gnus-make-predicate-1" function (:arguments ("spec")) nil [49185 49441])
            ("gnus-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [49443 49843])
            ("gnus-emacs-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [49845 50195])
            ("ido-completing-read" function (:prototype-flag t) nil [50197 50234])
            ("gnus-ido-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [50235 50513])
            ("declare-function" code nil nil [50516 50645])
            ("iswitchb-temp-buflist" variable nil nil [50646 50676])
            ("iswitchb-mode" variable nil nil [50677 50699])
            ("gnus-iswitchb-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [50701 51837])
            ("put" code nil nil [51839 51894])
            ("put" code nil nil [51895 51952])
            ("gnus-parse-without-error" function (:arguments ("body")) nil [51954 52280])
            ("gnus-cache-file-contents" function (:arguments ("file" "variable" "function")) nil [52282 52741])
            ("gnus-multiple-choice" function (:arguments ("prompt" "choice" "idx")) nil [52743 54295])
            ("gnus-frame-or-window-display-name" function (:arguments ("object")) nil [54297 54743])
            ("tool-bar-mode" variable nil nil [54745 54767])
            ("gnus-tool-bar-update" function (:arguments ("ignore")) nil [54769 55189])
            ("gnus-mapcar" function (:arguments ("function" "seq1" "seqs2_n")) nil [55264 56566])
            ("gnus-emacs-version" function nil nil [56568 57099])
            ("gnus-rename-file" function (:arguments ("old-path" "new-path" "trim")) nil [57101 57866])
            ("gnus-set-file-modes" function (:arguments ("filename" "mode")) nil [57868 57996])
            ("declare-function" code nil nil [57998 58067])
            ("gnus-rescale-image" function (:arguments ("image" "size")) nil [58069 58872])
            ("gnus-recursive-directory-files" function (:arguments ("dir")) nil [58874 59500])
            ("gnus-list-memq-of-list" function (:arguments ("elements" "list")) nil [59502 59730])
            ("gnus-test-list" function (:arguments ("list" "predicate")) nil [59732 60013])
            ("gnus-subsetp" function (:arguments ("list1" "list2")) nil [60015 60326])
            ("gnus-setdiff" function (:arguments ("list1" "list2")) nil [60328 60598])
            ("gnus-image-type-available-p" function (:arguments ("type")) nil [60622 60728])
            ("gnus-create-image" function (:arguments ("file" "type" "data-p" "props")) nil [60730 61068])
            ("gnus-put-image" function (:arguments ("glyph" "string" "category")) nil [61070 61371])
            ("gnus-remove-image" function (:arguments ("image" "category")) nil [61373 62154])
            ("gnus-kill-all-overlays" function nil nil [62156 62423])
            ("gnus-util" package nil nil [62425 62445]))          
      :file "gnus-util.el"
      :pointmax 62474
      :fsize 62473
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 16759 . 16760) (symbol 15602 . 15619) (open-paren 15601 . 15602) (close-paren 1235 . 1236) (symbol 1202 . 1219) (open-paren 1201 . 1202)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [880 895])
            ("gnus-win" include nil nil [896 915])
            ("gnus-int" include nil nil [916 935])
            ("gnus-spec" include nil nil [936 956])
            ("gnus-range" include nil nil [957 978])
            ("gnus-util" include nil nil [979 999])
            ("gnus-cloud" include nil nil [1000 1021])
            ("message-make-date" function (:prototype-flag t) nil [1022 1061])
            ("gnus-agent-read-servers-validate" function (:prototype-flag t) nil [1062 1119])
            ("gnus-agent-save-local" function (:prototype-flag t) nil [1120 1166])
            ("gnus-agent-possibly-alter-active" function (:prototype-flag t) nil [1167 1224])
            ("cl" include nil nil [1247 1260])
            ("gnus-agent-covered-methods" variable nil nil [1263 1298])
            ("gnus-agent-file-loading-local" variable nil nil [1299 1337])
            ("gnus-agent-file-loading-cache" variable nil nil [1338 1376])
            ("gnus-startup-file" variable (:default-value (nnheader-concat gnus-home-directory ".newsrc")) nil [1378 1569])
            ("gnus-backup-startup-file" variable (:default-value (quote never)) nil [1571 1901])
            ("gnus-save-startup-file-via-temp-buffer" variable (:default-value t) nil [1903 2336])
            ("gnus-init-file" variable (:default-value (nnheader-concat gnus-home-directory ".gnus")) nil [2338 2566])
            ("gnus-site-init-file" variable (:default-value (condition-case nil (concat (file-name-directory (directory-file-name installation-directory)) "site-lisp/gnus-init") (error nil))) nil [2568 2959])
            ("gnus-use-dribble-file" variable (:default-value t) nil [2961 3232])
            ("gnus-dribble-directory" variable nil nil [3234 3480])
            ("gnus-check-new-newsgroups" variable (:default-value (quote ask-server)) nil [3482 5058])
            ("gnus-check-bogus-newsgroups" variable nil nil [5060 5382])
            ("gnus-read-active-file" variable (:default-value (quote some)) nil [5384 6146])
            ("gnus-level-subscribed" variable
               (:constant-flag t
                :default-value 5)
                nil [6148 6257])
            ("gnus-level-unsubscribed" variable
               (:constant-flag t
                :default-value 7)
                nil [6259 6697])
            ("gnus-level-zombie" variable
               (:constant-flag t
                :default-value 8)
                nil [6699 6775])
            ("gnus-level-killed" variable
               (:constant-flag t
                :default-value 9)
                nil [6777 6846])
            ("gnus-level-default-subscribed" variable (:default-value 3) nil [6848 6996])
            ("gnus-level-default-unsubscribed" variable (:default-value 6) nil [6998 7152])
            ("gnus-activate-level" variable (:default-value (1+ gnus-level-subscribed)) nil [7154 7442])
            ("gnus-activate-foreign-newsgroups" variable (:default-value 4) nil [7444 8144])
            ("gnus-read-newsrc-file" variable (:default-value t) nil [8146 8566])
            ("gnus-save-newsrc-file" variable (:default-value t) nil [8568 8969])
            ("gnus-save-killed-list" variable (:default-value t) nil [8971 9783])
            ("gnus-ignored-newsgroups" variable (:default-value (mapconcat (quote identity) (quote ("^to\\." "^[0-9. 	]+\\( \\|$\\)" "^[\"][\"#'()]")) "\\|")) nil [9785 10287])
            ("gnus-subscribe-newsgroup-method" variable (:default-value (quote gnus-subscribe-zombies)) nil [10289 11329])
            ("define-obsolete-variable-alias" code nil nil [11331 11440])
            ("gnus-subscribe-newsgroup-functions" variable nil nil [11441 11658])
            ("gnus-subscribe-options-newsgroup-method" variable (:default-value (quote gnus-subscribe-alphabetically)) nil [11660 12486])
            ("gnus-subscribe-hierarchical-interactive" variable nil nil [12488 12933])
            ("gnus-auto-subscribed-categories" variable (:default-value (quote (mail post-mail))) nil [12935 13321])
            ("gnus-auto-subscribed-groups" variable (:default-value "^nnml\\|^nnfolder\\|^nnmbox\\|^nnmh\\|^nnbabyl\\|^nnmaildir\\|^nnimap") nil [13323 13825])
            ("gnus-options-subscribe" variable nil nil [13827 14297])
            ("gnus-options-not-subscribe" variable nil nil [14299 14599])
            ("gnus-modtime-botch" variable nil nil [14601 14807])
            ("gnus-check-bogus-groups-hook" variable nil nil [14809 14939])
            ("gnus-startup-hook" variable nil nil [14941 15103])
            ("gnus-before-startup-hook" variable nil nil [15105 15311])
            ("gnus-before-resume-hook" variable nil nil [15313 15573])
            ("gnus-started-hook" variable nil nil [15575 15694])
            ("gnus-setup-news-hook" variable nil nil [15696 15844])
            ("gnus-get-top-new-news-hook" variable nil nil [15846 16007])
            ("gnus-get-new-news-hook" variable nil nil [16009 16139])
            ("gnus-after-getting-new-news-hook" variable (:default-value (quote (gnus-display-time-event-handler))) nil [16141 16355])
            ("gnus-read-newsrc-el-hook" variable nil nil [16357 16487])
            ("gnus-save-newsrc-hook" variable nil nil [16489 16619])
            ("gnus-save-quick-newsrc-hook" variable nil nil [16621 16807])
            ("gnus-save-standard-newsrc-hook" variable nil nil [16809 17001])
            ("gnus-group-mode-hook" variable nil nil [17003 17142])
            ("gnus-always-read-dribble-file" variable nil nil [17144 17271])
            ("gnus-ding-file-coding-system" variable (:default-value mm-universal-coding-system) nil [17383 17480])
            ("gnus-newsrc-file-version" variable nil nil [17482 17519])
            ("gnus-override-subscribe-method" variable nil nil [17520 17563])
            ("gnus-dribble-buffer" variable nil nil [17564 17596])
            ("gnus-newsrc-options" variable nil nil [17597 17667])
            ("gnus-newsrc-options-n" variable nil nil [17669 17785])
            ("gnus-newsrc-last-checked-date" variable nil nil [17787 17881])
            ("gnus-current-startup-file" variable nil nil [17883 17960])
            ("gnus-group-line-format" variable nil nil [17988 18019])
            ("gnus-init-inhibit" variable nil nil [18072 18102])
            ("gnus-read-init-file" function (:arguments ("inhibit-next")) nil [18103 18617])
            ("gnus-subscribe-hierarchical-interactive" function (:arguments ("groups")) nil [18653 21252])
            ("gnus-subscribe-randomly" function (:arguments ("newsgroup")) nil [21254 21398])
            ("gnus-subscribe-alphabetically" function (:arguments ("newgroup")) nil [21400 21751])
            ("gnus-subscribe-hierarchically" function (:arguments ("newgroup")) nil [21753 22635])
            ("gnus-subscribe-interactively" function (:arguments ("group")) nil [22637 22956])
            ("gnus-subscribe-zombies" function (:arguments ("group")) nil [22958 23072])
            ("gnus-subscribe-killed" function (:arguments ("group")) nil [23074 23182])
            ("gnus-subscribe-newsgroup" function (:arguments ("newsgroup" "next")) nil [23184 23814])
            ("gnus-read-active-file-p" function nil nil [23816 23978])
            ("gnus-current-headers" variable nil nil [24048 24077])
            ("gnus-thread-indent-array" variable nil nil [24078 24111])
            ("gnus-newsgroup-name" variable nil nil [24112 24140])
            ("gnus-newsgroup-headers" variable nil nil [24141 24172])
            ("gnus-group-list-mode" variable nil nil [24173 24202])
            ("gnus-group-mark-positions" variable nil nil [24203 24237])
            ("gnus-newsgroup-data" variable nil nil [24238 24266])
            ("gnus-newsgroup-unreads" variable nil nil [24267 24298])
            ("nnoo-state-alist" variable nil nil [24299 24324])
            ("gnus-current-select-method" variable nil nil [24325 24360])
            ("mail-sources" variable nil nil [24361 24382])
            ("nnmail-scan-directory-mail-source-once" variable nil nil [24383 24430])
            ("nnmail-split-history" variable nil nil [24431 24460])
            ("nnmail-spool-file" variable nil nil [24461 24487])
            ("gnus-close-all-servers" function (:user-visible-flag t) nil [24489 24638])
            ("gnus-clear-system" function nil nil [24640 26556])
            ("gnus-no-server-1" function
               (:user-visible-flag t
                :arguments ("arg" "slave"))
                nil [26558 27187])
            ("gnus-1" function
               (:user-visible-flag t
                :arguments ("arg" "dont-connect" "slave"))
                nil [27189 29181])
            ("gnus-start-draft-setup" function (:user-visible-flag t) nil [29183 29718])
            ("gnus-dribble-ignore" variable nil nil [29748 29780])
            ("gnus-dribble-eval-file" variable nil nil [29781 29816])
            ("gnus-dribble-file-name" function nil nil [29818 30114])
            ("gnus-dribble-enter" function (:arguments ("string" "regexp")) nil [30116 31034])
            ("gnus-dribble-touch" function nil nil [31036 31121])
            ("gnus-dribble-read-file" function nil nil [31123 33110])
            ("gnus-dribble-eval-file" function nil nil [33112 33340])
            ("gnus-dribble-delete-file" function nil nil [33342 33689])
            ("gnus-dribble-save" function nil nil [33691 33888])
            ("gnus-dribble-clear" function nil nil [33890 34117])
            ("gnus-setup-news" function (:arguments ("rawfile" "level" "dont-connect")) nil [34164 37737])
            ("gnus-call-subscribe-functions" function (:arguments ("method" "group")) nil [37739 38143])
            ("gnus-find-new-newsgroups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [38145 41069])
            ("gnus-matches-options-n" function (:arguments ("group")) nil [41071 42243])
            ("gnus-ask-server-for-new-groups" function nil nil [42245 44736])
            ("gnus-subscribe-group" function (:arguments ("group" "previous" "method")) nil [44738 45034])
            ("gnus-group-change-level" function (:arguments ("entry" "level" "oldlevel" "previous" "fromkilled")) nil [45959 49994])
            ("gnus-check-bogus-newsgroups" function (:arguments ("confirm")) nil [49996 52170])
            ("gnus-check-duplicate-killed-groups" function (:user-visible-flag t) nil [52172 52476])
            ("gnus-cache-active-hashtb" variable nil nil [52545 52578])
            ("gnus-cache-possibly-alter-active" function (:arguments ("group" "active")) nil [52600 53035])
            ("gnus-activate-group" function (:arguments ("group" "scan" "dont-check" "method" "dont-sub-check")) nil [53038 55134])
            ("gnus-get-unread-articles-in-group" function (:arguments ("info" "active" "update")) nil [55136 58558])
            ("gnus-get-unread-articles" function (:arguments ("level" "dont-connect" "one-level")) nil [58696 65342])
            ("gnus-method-rank" function (:arguments ("type" "method")) nil [65344 65861])
            ("gnus-read-active-for-groups" function (:arguments ("method" "infos" "early-data")) nil [65863 67209])
            ("gnus-make-hashtable-from-newsrc-alist" function nil nil [67314 68602])
            ("gnus-make-hashtable-from-killed" function nil nil [68604 69019])
            ("gnus-parse-active" function nil nil [69021 69391])
            ("gnus-make-articles-unread" function (:arguments ("group" "articles")) nil [69393 70175])
            ("gnus-make-ascending-articles-unread" function (:arguments ("group" "articles")) nil [70177 73494])
            ("gnus-update-active-hashtb-from-killed" function nil nil [73538 73906])
            ("gnus-get-killed-groups" function nil nil [73908 74810])
            ("gnus-read-active-file" function (:arguments ("force" "not-native")) nil [74859 76197])
            ("gnus-read-active-file-1" function (:arguments ("method" "force")) nil [76199 77762])
            ("gnus-read-active-file-2" function (:arguments ("groups" "method")) nil [77764 78338])
            ("gnus-active-to-gnus-format" function (:arguments ("method" "hashtb" "ignore-errors" "real-active")) nil [78410 81633])
            ("gnus-groups-to-gnus-format" function (:arguments ("method" "hashtb" "real-active")) nil [81635 83359])
            ("gnus-read-newsrc-file" function (:arguments ("force")) nil [83361 85091])
            ("gnus-clean-old-newsrc" function (:arguments ("force")) nil [85093 85171])
            ("gnus-convert-old-newsrc" function nil nil [85173 88948])
            ("gnus-convert-mark-converter-prompt" function (:arguments ("converter" "no-prompt")) nil [88950 89303])
            ("gnus-convert-converter-needs-prompt" function (:arguments ("converter")) nil [89305 89503])
            ("gnus-convert-old-ticks" function (:arguments ("converting-to")) nil [89505 89983])
            ("gnus-load" function (:arguments ("file")) nil [89985 90492])
            ("gnus-read-newsrc-el-file" function (:arguments ("file")) nil [90494 91648])
            ("gnus-read-old-newsrc-el-file" function (:arguments ("file")) nil [91692 93654])
            ("gnus-make-newsrc-file" function (:arguments ("file")) nil [93656 94029])
            ("gnus-newsrc-to-gnus-format" function nil nil [94031 100546])
            ("gnus-newsrc-parse-options" function (:arguments ("options")) nil [101184 102766])
            ("defalias" code nil nil [102788 102911])
            ("gnus-save-newsrc-file-last-timestamp" variable nil nil [102914 102963])
            ("gnus-save-newsrc-file" function (:arguments ("force")) nil [102964 108147])
            ("gnus-gnus-to-quick-newsrc-format" function (:arguments ("minimal" "name" "specific-variables")) nil [108149 109828])
            ("gnus-strip-killed-list" function nil nil [109830 110125])
            ("gnus-gnus-to-newsrc-format" function (:arguments ("foreign-ok")) nil [110127 112599])
            ("gnus-slave-mode" variable nil nil [112633 112661])
            ("gnus-slave-mode" function nil nil [112663 112956])
            ("gnus-slave-save-newsrc" function nil nil [112958 113373])
            ("gnus-master-read-slave-newsrc" function nil nil [113375 114580])
            ("gnus-read-all-descriptions-files" function nil nil [114616 114929])
            ("gnus-read-descriptions-file" function (:arguments ("method")) nil [114931 117631])
            ("gnus-group-get-description" function (:arguments ("group")) nil [117633 117935])
            ("gnus-declare-backend" function (:arguments ("name" "abilities")) nil [117952 118217])
            ("gnus-set-default-directory" function nil nil [118219 118578])
            ("gnus-display-time-event-handler" function nil nil [118580 118750])
            ("gnus-check-reasonable-setup" function nil nil [118752 119404])
            ("gnus-start" package nil nil [119406 119427]))          
      :file "gnus-start.el"
      :pointmax 119457
      :fsize 119456
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 102911 . 102912) (symbol 102769 . 102785) (open-paren 102768 . 102769) (close-paren 53035 . 53036) (symbol 52580 . 52597) (open-paren 52579 . 52580) (close-paren 1260 . 1261) (symbol 1227 . 1244) (open-paren 1226 . 1227)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("run-hooks" code nil nil [973 1000])
            ("cl" include nil nil [1021 1034])
            ("wid-edit" include nil nil [1036 1055])
            ("mm-util" include nil nil [1056 1074])
            ("nnheader" include nil nil [1075 1094])
            ("gnus-ham-process-destinations" variable nil nil [1161 1199])
            ("gnus-parameter-ham-marks-alist" variable nil nil [1200 1239])
            ("gnus-parameter-spam-marks-alist" variable nil nil [1240 1280])
            ("gnus-spam-autodetect" variable nil nil [1281 1310])
            ("gnus-spam-autodetect-methods" variable nil nil [1311 1348])
            ("gnus-spam-newsgroup-contents" variable nil nil [1349 1386])
            ("gnus-spam-process-destinations" variable nil nil [1387 1426])
            ("gnus-spam-resend-to" variable nil nil [1427 1455])
            ("gnus-ham-resend-to" variable nil nil [1456 1483])
            ("gnus-spam-process-newsgroups" variable nil nil [1484 1521])
            ("gnus" customgroup (:user-visible-flag t) nil [1524 1648])
            ("gnus-start" customgroup (:user-visible-flag t) nil [1650 1729])
            ("gnus-format" customgroup (:user-visible-flag t) nil [1731 1808])
            ("gnus-charset" customgroup (:user-visible-flag t) nil [1810 1944])
            ("gnus-cache" customgroup (:user-visible-flag t) nil [1946 2056])
            ("gnus-registry" customgroup (:user-visible-flag t) nil [2058 2123])
            ("gnus-start-server" customgroup (:user-visible-flag t) nil [2125 2209])
            ("gnus-group" customgroup (:user-visible-flag t) nil [2245 2350])
            ("gnus-group-foreign" customgroup (:user-visible-flag t) nil [2352 2474])
            ("gnus-group-new" customgroup (:user-visible-flag t) nil [2476 2568])
            ("gnus-group-levels" customgroup (:user-visible-flag t) nil [2570 2687])
            ("gnus-group-select" customgroup (:user-visible-flag t) nil [2689 2816])
            ("gnus-group-listing" customgroup (:user-visible-flag t) nil [2818 2958])
            ("gnus-group-visual" customgroup (:user-visible-flag t) nil [2960 3118])
            ("gnus-group-various" customgroup (:user-visible-flag t) nil [3120 3256])
            ("gnus-summary" customgroup (:user-visible-flag t) nil [3290 3401])
            ("gnus-summary-exit" customgroup (:user-visible-flag t) nil [3403 3547])
            ("gnus-summary-marks" customgroup (:user-visible-flag t) nil [3549 3690])
            ("gnus-thread" customgroup (:user-visible-flag t) nil [3692 3828])
            ("gnus-summary-format" customgroup (:user-visible-flag t) nil [3830 3980])
            ("gnus-summary-choose" customgroup (:user-visible-flag t) nil [3982 4113])
            ("gnus-summary-maneuvering" customgroup (:user-visible-flag t) nil [4115 4261])
            ("gnus-picon" customgroup (:user-visible-flag t) nil [4263 4364])
            ("gnus-summary-mail" customgroup (:user-visible-flag t) nil [4366 4499])
            ("gnus-summary-sort" customgroup (:user-visible-flag t) nil [4501 4648])
            ("gnus-summary-visual" customgroup (:user-visible-flag t) nil [4650 4833])
            ("gnus-summary-various" customgroup (:user-visible-flag t) nil [4835 4984])
            ("gnus-summary-pick" customgroup (:user-visible-flag t) nil [4986 5148])
            ("gnus-summary-tree" customgroup (:user-visible-flag t) nil [5150 5325])
            ("gnus-extract-view" customgroup (:user-visible-flag t) nil [5352 5483])
            ("gnus-score" customgroup (:user-visible-flag t) nil [5513 5587])
            ("gnus-score-kill" customgroup (:user-visible-flag t) nil [5589 5656])
            ("gnus-score-adapt" customgroup (:user-visible-flag t) nil [5658 5736])
            ("gnus-score-default" customgroup (:user-visible-flag t) nil [5738 5828])
            ("gnus-score-expire" customgroup (:user-visible-flag t) nil [5830 5909])
            ("gnus-score-decay" customgroup (:user-visible-flag t) nil [5911 5989])
            ("gnus-score-files" customgroup (:user-visible-flag t) nil [5991 6095])
            ("gnus-score-various" customgroup (:user-visible-flag t) nil [6097 6192])
            ("gnus-visual" customgroup (:user-visible-flag t) nil [6203 6302])
            ("gnus-agent" customgroup (:user-visible-flag t) nil [6304 6374])
            ("gnus-files" customgroup (:user-visible-flag t) nil [6376 6440])
            ("gnus-dribble-file" customgroup (:user-visible-flag t) nil [6442 6558])
            ("gnus-newsrc" customgroup (:user-visible-flag t) nil [6560 6631])
            ("gnus-server" customgroup (:user-visible-flag t) nil [6633 6741])
            ("gnus-server-visual" customgroup (:user-visible-flag t) nil [6743 6869])
            ("gnus-message" customgroup
               (:user-visible-flag t
                :value (quote ((message custom-group))))
                nil [6871 6980])
            ("gnus-meta" customgroup (:user-visible-flag t) nil [6982 7184])
            ("gnus-various" customgroup (:user-visible-flag t) nil [7186 7301])
            ("gnus-exit" customgroup (:user-visible-flag t) nil [7303 7406])
            ("gnus-fun" customgroup (:user-visible-flag t) nil [7408 7523])
            ("gnus-version-number" variable
               (:constant-flag t
                :default-value "5.13")
                nil [7525 7607])
            ("gnus-version" variable
               (:constant-flag t
                :default-value (format "Gnus v%s" gnus-version-number))
                nil [7609 7717])
            ("gnus-inhibit-startup-message" variable nil nil [7719 7952])
            ("gnus-mode-line-image-cache" variable (:default-value t) nil [7954 7991])
            ("if" code nil nil [8013 8817])
            ("gnus-group-news-1" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleTurquoise" :bold t)) (((class color) (background light)) (:foreground "ForestGreen" :bold t)) (t nil)))
                :type "face")
                nil [8920 9190])
            ("put" code nil nil [9223 9283])
            ("put" code nil nil [9284 9335])
            ("gnus-group-news-1-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleTurquoise")) (((class color) (background light)) (:foreground "ForestGreen")) (t nil)))
                :type "face")
                nil [9337 9603])
            ("put" code nil nil [9636 9708])
            ("put" code nil nil [9709 9766])
            ("gnus-group-news-2" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "turquoise" :bold t)) (((class color) (background light)) (:foreground "CadetBlue4" :bold t)) (t nil)))
                :type "face")
                nil [9768 10033])
            ("put" code nil nil [10066 10126])
            ("put" code nil nil [10127 10178])
            ("gnus-group-news-2-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "turquoise")) (((class color) (background light)) (:foreground "CadetBlue4")) (t nil)))
                :type "face")
                nil [10180 10441])
            ("put" code nil nil [10474 10546])
            ("put" code nil nil [10547 10604])
            ("gnus-group-news-3" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [10606 10822])
            ("put" code nil nil [10855 10915])
            ("put" code nil nil [10916 10967])
            ("gnus-group-news-3-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [10969 11183])
            ("put" code nil nil [11216 11288])
            ("put" code nil nil [11289 11346])
            ("gnus-group-news-4" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [11348 11564])
            ("put" code nil nil [11597 11657])
            ("put" code nil nil [11658 11709])
            ("gnus-group-news-4-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [11711 11925])
            ("put" code nil nil [11958 12030])
            ("put" code nil nil [12031 12088])
            ("gnus-group-news-5" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [12090 12306])
            ("put" code nil nil [12339 12399])
            ("put" code nil nil [12400 12451])
            ("gnus-group-news-5-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [12453 12667])
            ("put" code nil nil [12700 12772])
            ("put" code nil nil [12773 12830])
            ("gnus-group-news-6" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [12832 13048])
            ("put" code nil nil [13081 13141])
            ("put" code nil nil [13142 13193])
            ("gnus-group-news-6-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [13195 13409])
            ("put" code nil nil [13442 13514])
            ("put" code nil nil [13515 13572])
            ("gnus-group-news-low" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkTurquoise" :bold t)) (((class color) (background light)) (:foreground "DarkGreen" :bold t)) (t nil)))
                :type "face")
                nil [13574 13846])
            ("put" code nil nil [13879 13943])
            ("put" code nil nil [13944 13997])
            ("gnus-group-news-low-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkTurquoise")) (((class color) (background light)) (:foreground "DarkGreen")) (t nil)))
                :type "face")
                nil [13999 14267])
            ("put" code nil nil [14300 14376])
            ("put" code nil nil [14377 14436])
            ("gnus-group-mail-1" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "#e1ffe1" :bold t)) (((class color) (background light)) (:foreground "DeepPink3" :bold t)) (t (:bold t))))
                :type "face")
                nil [14438 14707])
            ("put" code nil nil [14740 14800])
            ("put" code nil nil [14801 14852])
            ("gnus-group-mail-1-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "#e1ffe1")) (((class color) (background light)) (:foreground "DeepPink3")) (t (:italic t :bold t))))
                :type "face")
                nil [14854 15129])
            ("put" code nil nil [15162 15234])
            ("put" code nil nil [15235 15292])
            ("gnus-group-mail-2" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkSeaGreen1" :bold t)) (((class color) (background light)) (:foreground "HotPink3" :bold t)) (t (:bold t))))
                :type "face")
                nil [15294 15568])
            ("put" code nil nil [15601 15661])
            ("put" code nil nil [15662 15713])
            ("gnus-group-mail-2-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkSeaGreen1")) (((class color) (background light)) (:foreground "HotPink3")) (t (:bold t))))
                :type "face")
                nil [15715 15985])
            ("put" code nil nil [16018 16090])
            ("put" code nil nil [16091 16148])
            ("gnus-group-mail-3" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine1" :bold t)) (((class color) (background light)) (:foreground "magenta4" :bold t)) (t (:bold t))))
                :type "face")
                nil [16150 16422])
            ("put" code nil nil [16455 16515])
            ("put" code nil nil [16516 16567])
            ("gnus-group-mail-3-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine1")) (((class color) (background light)) (:foreground "magenta4")) (t nil)))
                :type "face")
                nil [16569 16830])
            ("put" code nil nil [16863 16935])
            ("put" code nil nil [16936 16993])
            ("gnus-group-mail-low" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine2" :bold t)) (((class color) (background light)) (:foreground "DeepPink4" :bold t)) (t (:bold t))))
                :type "face")
                nil [16995 17272])
            ("put" code nil nil [17305 17369])
            ("put" code nil nil [17370 17423])
            ("gnus-group-mail-low-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine2")) (((class color) (background light)) (:foreground "DeepPink4")) (t (:bold t))))
                :type "face")
                nil [17425 17698])
            ("put" code nil nil [17731 17807])
            ("put" code nil nil [17808 17867])
            ("gnus-summary-selected" variable
               (:default-value (quote ((t (:underline t))))
                :type "face")
                nil [17893 18006])
            ("put" code nil nil [18039 18107])
            ("put" code nil nil [18108 18163])
            ("gnus-summary-cancelled" variable
               (:default-value (quote ((((class color)) (:foreground "yellow" :background "black"))))
                :type "face")
                nil [18165 18328])
            ("put" code nil nil [18361 18431])
            ("put" code nil nil [18432 18488])
            ("gnus-summary-high-ticked" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "pink" :bold t)) (((class color) (background light)) (:foreground "firebrick" :bold t)) (t (:bold t))))
                :type "face")
                nil [18490 18786])
            ("put" code nil nil [18819 18893])
            ("put" code nil nil [18894 18952])
            ("gnus-summary-low-ticked" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "pink" :italic t)) (((class color) (background light)) (:foreground "firebrick" :italic t)) (t (:italic t))))
                :type "face")
                nil [18954 19254])
            ("put" code nil nil [19287 19359])
            ("put" code nil nil [19360 19417])
            ("gnus-summary-normal-ticked" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "pink")) (((class color) (background light)) (:foreground "firebrick")) (t nil)))
                :type "face")
                nil [19419 19696])
            ("put" code nil nil [19729 19807])
            ("put" code nil nil [19808 19868])
            ("gnus-summary-high-ancient" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SkyBlue" :bold t)) (((class color) (background light)) (:foreground "RoyalBlue" :bold t)) (t (:bold t))))
                :type "face")
                nil [19870 20171])
            ("put" code nil nil [20204 20280])
            ("put" code nil nil [20281 20340])
            ("gnus-summary-low-ancient" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SkyBlue" :italic t)) (((class color) (background light)) (:foreground "RoyalBlue" :italic t)) (t (:italic t))))
                :type "face")
                nil [20342 20647])
            ("put" code nil nil [20680 20754])
            ("put" code nil nil [20755 20813])
            ("gnus-summary-normal-ancient" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SkyBlue")) (((class color) (background light)) (:foreground "RoyalBlue")) (t nil)))
                :type "face")
                nil [20815 21097])
            ("put" code nil nil [21130 21210])
            ("put" code nil nil [21211 21272])
            ("gnus-summary-high-undownloaded" variable
               (:default-value (quote ((((class color) (background light)) (:bold t :foreground "cyan4")) (((class color) (background dark)) (:bold t :foreground "LightGray")) (t (:inverse-video t :bold t))))
                :type "face")
                nil [21274 21591])
            ("put" code nil nil [21624 21710])
            ("put" code nil nil [21711 21775])
            ("gnus-summary-low-undownloaded" variable
               (:default-value (quote ((((class color) (background light)) (:italic t :foreground "cyan4" :bold nil)) (((class color) (background dark)) (:italic t :foreground "LightGray" :bold nil)) (t (:inverse-video t :italic t))))
                :type "face")
                nil [21777 22118])
            ("put" code nil nil [22151 22235])
            ("put" code nil nil [22236 22299])
            ("gnus-summary-normal-undownloaded" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "cyan4" :bold nil)) (((class color) (background dark)) (:foreground "LightGray" :bold nil)) (t (:inverse-video t))))
                :type "face")
                nil [22301 22618])
            ("put" code nil nil [22651 22741])
            ("put" code nil nil [22742 22808])
            ("gnus-summary-high-unread" variable
               (:default-value (quote ((t (:bold t))))
                :type "face")
                nil [22810 22940])
            ("put" code nil nil [22973 23047])
            ("put" code nil nil [23048 23106])
            ("gnus-summary-low-unread" variable
               (:default-value (quote ((t (:italic t))))
                :type "face")
                nil [23108 23238])
            ("put" code nil nil [23271 23343])
            ("put" code nil nil [23344 23401])
            ("gnus-summary-normal-unread" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [23403 23530])
            ("put" code nil nil [23563 23641])
            ("put" code nil nil [23642 23702])
            ("gnus-summary-high-read" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen" :bold t)) (((class color) (background light)) (:foreground "DarkGreen" :bold t)) (t (:bold t))))
                :type "face")
                nil [23704 24009])
            ("put" code nil nil [24042 24112])
            ("put" code nil nil [24113 24169])
            ("gnus-summary-low-read" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen" :italic t)) (((class color) (background light)) (:foreground "DarkGreen" :italic t)) (t (:italic t))))
                :type "face")
                nil [24171 24480])
            ("put" code nil nil [24513 24581])
            ("put" code nil nil [24582 24637])
            ("gnus-summary-normal-read" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen")) (((class color) (background light)) (:foreground "DarkGreen")) (t nil)))
                :type "face")
                nil [24639 24917])
            ("put" code nil nil [24950 25024])
            ("put" code nil nil [25025 25083])
            ("gnus-buffers" variable nil nil [25112 25174])
            ("gnus-get-buffer-create" function (:arguments ("name")) nil [25176 25365])
            ("gnus-add-buffer" function nil nil [25367 25511])
            ("gnus-kill-buffer" function (:arguments ("buffer")) nil [25513 25724])
            ("gnus-prune-buffers" function nil nil [25726 25870])
            ("gnus-buffers" function nil nil [25872 26197])
            ("gnus-group-buffer" variable (:default-value "*Group*") nil [26219 26290])
            ("gnus-splash" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "#cccccc")) (((class color) (background light)) (:foreground "#888888")) (t nil)))
                :type "face")
                nil [26292 26534])
            ("put" code nil nil [26567 26615])
            ("put" code nil nil [26616 26661])
            ("gnus-splash" function nil nil [26663 26913])
            ("gnus-indent-rigidly" function (:arguments ("start" "end" "arg")) nil [26915 27321])
            ("gnus-logo-color-alist" variable (:default-value (quote ((flame "#cc3300" "#ff2200") (pine "#c0cc93" "#f8ffb8") (moss "#a1cc93" "#d2ffb8") (irish "#04cc90" "#05ff97") (sky "#049acc" "#05deff") (tin "#6886cc" "#82b6ff") (velvet "#7c68cc" "#8c82ff") (grape "#b264cc" "#cf7df") (labia "#cc64c2" "#fd7dff") (berry "#cc6485" "#ff7db5") (dino "#724214" "#1e3f03") (oort "#cccccc" "#888888") (storm "#666699" "#99ccff") (pdino "#9999cc" "#99ccff") (purp "#9999cc" "#666699") (no "#ff0000" "#ffff00") (neutral "#b4b4b4" "#878787") (ma "#2020e0" "#8080ff") (september "#bf9900" "#ffcc00")))) nil [27369 28039])
            ("gnus-logo-color-style" variable (:default-value (quote ma)) nil [28041 28237])
            ("gnus-logo-colors" variable (:default-value (cdr (assq gnus-logo-color-style gnus-logo-color-alist))) nil [28239 28358])
            ("declare-function" code nil nil [28360 28429])
            ("gnus-group-startup-message" function (:arguments ("x" "y")) nil [28431 31984])
            ("gnus-splash-svg-color-symbols" function (:arguments ("list")) nil [31986 32698])
            ("eval-when" code nil nil [32700 32920])
            ("gnus-util" include nil nil [32940 32960])
            ("nnheader" include nil nil [32961 32980])
            ("gnus-parameters" variable nil nil [32982 33462])
            ("gnus-parameters-case-fold-search" variable (:default-value (quote default)) nil [33464 33904])
            ("gnus-group-parameters-more" variable nil nil [33906 33945])
            ("gnus-define-group-parameter" function (:arguments ("param" "rest")) nil [33947 36737])
            ("gnus-home-directory" variable (:default-value "~/") nil [36739 37208])
            ("gnus-directory" variable (:default-value (or (getenv "SAVEDIR") (nnheader-concat gnus-home-directory "News/"))) nil [37210 37682])
            ("gnus-default-directory" variable nil nil [37684 37845])
            ("gnus-default-nntp-server" variable nil nil [37905 38274])
            ("gnus-nntpserver-file" variable (:default-value "/etc/nntpserver") nil [38276 38439])
            ("gnus-getenv-nntpserver" function nil nil [38441 38814])
            ("gnus-select-method" variable (:default-value (list (quote nntp) (or (gnus-getenv-nntpserver) (when (and gnus-default-nntp-server (not (string= gnus-default-nntp-server ""))) gnus-default-nntp-server) "news"))) nil [39035 40083])
            ("gnus-message-archive-method" variable (:default-value "archive") nil [40085 40397])
            ("gnus-update-message-archive-method" variable nil nil [40399 41142])
            ("gnus-message-archive-group" variable (:default-value (quote ((format-time-string "sent.%Y-%m")))) nil [41144 42347])
            ("gnus-secondary-servers" variable nil nil [42349 42617])
            ("make-obsolete-variable" code nil nil [42618 42693])
            ("gnus-secondary-select-methods" variable nil nil [42695 43113])
            ("gnus-local-domain" variable nil nil [43115 43440])
            ("make-obsolete-variable" code nil nil [43441 43501])
            ("gnus-refer-article-method" variable (:default-value (quote current)) nil [43531 44415])
            ("gnus-use-cross-reference" variable (:default-value t) nil [44417 44812])
            ("gnus-process-mark" variable (:default-value 35) nil [44814 44940])
            ("gnus-large-newsgroup" variable (:default-value 200) nil [44942 45335])
            ("gnus-use-long-file-name" variable (:default-value (not (memq system-type (quote (usg-unix-v))))) nil [45337 46336])
            ("gnus-kill-files-directory" variable (:default-value gnus-directory) nil [46338 46542])
            ("gnus-save-score" variable nil nil [46544 46683])
            ("gnus-use-undo" variable (:default-value t) nil [46685 46807])
            ("gnus-use-adaptive-scoring" variable nil nil [46809 47180])
            ("gnus-use-cache" variable (:default-value (quote passive)) nil [47182 47567])
            ("gnus-use-trees" variable nil nil [47569 47682])
            ("gnus-keep-backlog" variable (:default-value 20) nil [47684 48067])
            ("gnus-suppress-duplicates" variable nil nil [48069 48223])
            ("gnus-use-scoring" variable (:default-value t) nil [48225 48324])
            ("gnus-summary-prepare-exit-hook" variable (:default-value (quote (gnus-summary-expire-articles))) nil [48326 48562])
            ("gnus-novice-user" variable (:default-value t) nil [48564 48760])
            ("gnus-expert-user" variable nil nil [48762 49014])
            ("gnus-interactive-catchup" variable (:default-value t) nil [49016 49167])
            ("gnus-interactive-exit" variable (:default-value t) nil [49169 49410])
            ("gnus-extract-address-components" variable (:default-value (quote gnus-extract-address-components)) nil [49412 49935])
            ("gnus-shell-command-separator" variable (:default-value ";") nil [49937 50062])
            ("gnus-valid-select-methods" variable (:default-value (quote (("nntp" post address prompt-address physical-address cloud) ("nnspool" post address) ("nnvirtual" post-mail virtual prompt-address) ("nnmbox" mail respool address) ("nnml" post-mail respool address) ("nnmh" mail respool address) ("nndir" post-mail prompt-address physical-address) ("nneething" none address prompt-address physical-address) ("nndoc" none address prompt-address) ("nnbabyl" mail address respool) ("nndraft" post-mail) ("nnfolder" mail respool address) ("nngateway" post-mail address prompt-address physical-address) ("nnweb" none) ("nnrss" none global) ("nnagent" post-mail) ("nnimap" post-mail address prompt-address physical-address respool server-marks cloud) ("nnmaildir" mail respool address server-marks) ("nnnil" none)))) nil [50064 51850])
            ("gnus-redefine-select-method-widget" function nil nil [51852 52458])
            ("gnus-redefine-select-method-widget" code nil nil [52460 52496])
            ("gnus-updated-mode-lines" variable (:default-value (quote (group article summary tree))) nil [52498 52988])
            ("gnus-mode-non-string-length" variable (:default-value 30) nil [52990 53256])
            ("define-widget" code nil nil [53306 53371])
            ("gnus-define-group-parameter" code nil nil [53373 54533])
            ("gnus-define-group-parameter" code nil nil [54535 55140])
            ("gnus-define-group-parameter" code nil nil [55142 55688])
            ("gnus-define-group-parameter" code nil nil [55690 56356])
            ("gnus-define-group-parameter" code nil nil [56358 57164])
            ("gnus-define-group-parameter" code nil nil [57166 58323])
            ("gnus-define-group-parameter" code nil nil [58325 58917])
            ("gnus-define-group-parameter" code nil nil [58919 59566])
            ("gnus-define-group-parameter" code nil nil [59606 60334])
            ("gnus-install-group-spam-parameters" variable (:default-value t) nil [60417 60661])
            ("when" code nil nil [60663 78941])
            ("gnus-group-uncollapsed-levels" variable (:default-value 1) nil [78943 79112])
            ("gnus-group-use-permanent-levels" variable nil nil [79114 79270])
            ("gnus-load-hook" variable nil nil [79283 79385])
            ("gnus-apply-kill-hook" variable (:default-value (quote (gnus-apply-kill-file))) nil [79387 80158])
            ("gnus-group-change-level-function" variable nil nil [80160 80391])
            ("gnus-visual" variable (:default-value (quote (summary-highlight group-highlight article-highlight mouse-face summary-menu group-menu article-menu tree-highlight menu highlight browse-menu server-menu page-marker tree-menu binary-menu pick-menu))) nil [80413 81824])
            ("gnus-visual" variable nil nil [81852 81872])
            ("gnus-visual-p" function (:arguments ("type" "class")) nil [81925 82218])
            ("gnus-mouse-face" variable (:default-value (condition-case nil (if (gnus-visual-p (quote mouse-face) (quote highlight)) (if (boundp (quote gnus-mouse-face)) (or gnus-mouse-face (quote highlight)) (quote highlight)) (quote default)) (error (quote highlight)))) nil [82220 82610])
            ("gnus-article-save-directory" variable (:default-value gnus-directory) nil [82612 82789])
            ("gnus-plugged" variable (:default-value t) nil [82791 82850])
            ("gnus-agent-cache" variable (:default-value t) nil [82852 83160])
            ("gnus-default-charset" variable (:default-value (quote undecided)) nil [83162 83472])
            ("gnus-agent" variable (:default-value t) nil [83508 83833])
            ("gnus-other-frame-function" variable (:default-value (quote gnus)) nil [83835 84116])
            ("gnus-other-frame-resume-function" variable (:default-value (quote gnus-group-get-new-news)) nil [84118 84486])
            ("gnus-other-frame-parameters" variable nil nil [84488 84726])
            ("gnus-user-agent" variable (:default-value (quote (emacs gnus type))) nil [84728 85546])
            ("when" code nil nil [85598 86237])
            ("gnus-agent-gcc-header" variable (:default-value "X-Gnus-Agent-Gcc") nil [86265 86314])
            ("gnus-agent-meta-information-header" variable (:default-value "X-Gnus-Agent-Meta-Information") nil [86315 86390])
            ("gnus-agent-method-p-cache" variable nil nil [86391 86552])
            ("gnus-agent-target-move-group-header" variable (:default-value "X-Gnus-Agent-Move-To") nil [86553 86620])
            ("gnus-draft-meta-information-header" variable (:default-value "X-Draft-From") nil [86621 86679])
            ("gnus-group-get-parameter-function" variable (:default-value (quote gnus-group-get-parameter)) nil [86680 86748])
            ("gnus-original-article-buffer" variable (:default-value " *Original Article*") nil [86749 86808])
            ("gnus-newsgroup-name" variable nil nil [86809 86841])
            ("gnus-ephemeral-servers" variable nil nil [86842 86877])
            ("gnus-server-method-cache" variable nil nil [86878 86915])
            ("gnus-extended-servers" variable nil nil [86916 86950])
            ("gnus-carpal" variable nil nil [87045 87069])
            ("make-obsolete-variable" code nil nil [87070 87124])
            ("gnus-agent-fetching" variable nil nil [87126 87202])
            ("gnus-agent-covered-methods" variable nil nil [87204 87327])
            ("gnus-command-method" variable nil nil [87329 87432])
            ("gnus-current-select-method" variable nil nil [87434 87523])
            ("gnus-tree-buffer" variable (:default-value "*Tree*") nil [87525 87609])
            ("gnus-method-history" variable nil nil [87671 87703])
            ("gnus-mail-method-history" variable nil nil [87770 87807])
            ("gnus-group-history" variable nil nil [87868 87899])
            ("gnus-server-alist" variable nil nil [87901 87962])
            ("gnus-cache-directory" variable (:default-value (nnheader-concat gnus-directory "cache/")) nil [87964 88136])
            ("gnus-predefined-server-alist" variable (:default-value (\` (("cache" nnspool "cache" (nnspool-spool-directory (\, gnus-cache-directory)) (nnspool-nov-directory (\, gnus-cache-directory)) (nnspool-active-file (\, (nnheader-concat gnus-cache-directory "active"))))))) nil [88138 88443])
            ("gnus-article-mark-lists" variable
               (:constant-flag t
                :default-value (quote ((marked . tick) (replied . reply) (expirable . expire) (killed . killed) (bookmarks . bookmark) (dormant . dormant) (scored . score) (saved . save) (cached . cache) (downloadable . download) (unsendable . unsend) (forwarded . forward) (seen . seen) (unexist . unexist))))
                nil [88445 88777])
            ("gnus-article-special-mark-lists" variable
               (:constant-flag t
                :default-value (quote ((seen range) (unexist range) (killed range) (bookmark tuple) (uid tuple) (active tuple) (score tuple))))
                nil [88779 88952])
            ("gnus-article-unpropagated-mark-lists" variable
               (:constant-flag t
                :default-value (quote (seen cache download unsend score bookmark unexist)))
                nil [89328 89673])
            ("gnus-headers-retrieved-by" variable nil nil [89675 89713])
            ("gnus-article-reply" variable nil nil [89714 89745])
            ("gnus-override-method" variable nil nil [89746 89779])
            ("gnus-opened-servers" variable nil nil [89780 89812])
            ("gnus-current-kill-article" variable nil nil [89814 89852])
            ("gnus-have-read-active-file" variable nil nil [89854 89893])
            ("gnus-maintainer" variable
               (:constant-flag t
                :default-value "submit@debbugs.gnu.org (The Gnus Bugfixing Girls + Boys)")
                nil [89895 90028])
            ("gnus-bug-package" variable
               (:constant-flag t
                :default-value "emacs,gnus")
                nil [90030 90118])
            ("gnus-info-nodes" variable (:default-value (quote ((gnus-group-mode "(gnus)Group Buffer") (gnus-summary-mode "(gnus)Summary Buffer") (gnus-article-mode "(gnus)Article Buffer") (gnus-server-mode "(gnus)Server Buffer") (gnus-browse-mode "(gnus)Browse Foreign Server") (gnus-tree-mode "(gnus)Tree Display")))) nil [90120 90471])
            ("gnus-summary-buffer" variable (:default-value "*Summary*") nil [90473 90513])
            ("gnus-article-buffer" variable (:default-value "*Article*") nil [90514 90554])
            ("gnus-server-buffer" variable (:default-value "*Server*") nil [90555 90593])
            ("gnus-slave" variable nil nil [90595 90659])
            ("gnus-batch-mode" variable nil nil [90661 90744])
            ("gnus-variable-list" variable (:default-value (quote (gnus-newsrc-options gnus-newsrc-options-n gnus-newsrc-last-checked-date gnus-newsrc-alist gnus-server-alist gnus-killed-list gnus-zombie-list gnus-topic-topology gnus-topic-alist gnus-cloud-sequence gnus-cloud-covered-servers gnus-cloud-file-timestamps))) nil [90746 91104])
            ("gnus-newsrc-alist" variable nil nil [91106 91245])
            ("gnus-registry-alist" variable nil nil [91247 91364])
            ("gnus-newsrc-hashtb" variable nil nil [91366 91435])
            ("gnus-killed-list" variable nil nil [91437 91497])
            ("gnus-killed-hashtb" variable nil nil [91499 91579])
            ("gnus-zombie-list" variable nil nil [91581 91646])
            ("gnus-description-hashtb" variable nil nil [91648 91716])
            ("gnus-list-of-killed-groups" variable nil nil [91718 91824])
            ("gnus-active-hashtb" variable nil nil [91826 91891])
            ("gnus-moderated-hashtb" variable nil nil [91893 91966])
            ("gnus-prev-winconf" variable nil nil [91998 92028])
            ("gnus-reffed-article-number" variable nil nil [92030 92069])
            ("gnus-dead-summary" variable nil nil [92071 92101])
            ("gnus-invalid-group-regexp" variable (:default-value "[: `'\"/]\\|^$") nil [92103 92190])
            ("gnus-other-frame-object" variable nil nil [92192 92292])
            ("mapc" code nil nil [92504 102174])
            ("gnus-summary-line-format" variable (:default-value "%U%R%z%I%(%[%4L: %-23,23f%]%) %s
") nil [102204 105895])
            ("gnus-suppress-keymap" function (:arguments ("keymap")) nil [105927 106110])
            ("gnus-article-mode-map" variable (:default-value (let ((keymap (make-sparse-keymap))) (gnus-suppress-keymap keymap) keymap)) nil [106112 106227])
            ("gnus-summary-mode-map" variable (:default-value (let ((keymap (make-keymap))) (gnus-suppress-keymap keymap) keymap)) nil [106228 106336])
            ("gnus-group-mode-map" variable (:default-value (let ((keymap (make-keymap))) (gnus-suppress-keymap keymap) keymap)) nil [106337 106443])
            ("defalias" code nil nil [106624 106680])
            ("defalias" code nil nil [106681 106735])
            ("gnus-header-from" function (:arguments ("header")) nil [106769 106830])
            ("gnus-gethash" function (:arguments ("string" "hashtable")) nil [106832 106968])
            ("gnus-gethash-safe" function (:arguments ("string" "hashtable")) nil [106970 107180])
            ("gnus-sethash" function (:arguments ("string" "value" "hashtable")) nil [107182 107339])
            ("put" code nil nil [107340 107395])
            ("gnus-group-unread" function (:arguments ("group")) nil [107397 107550])
            ("gnus-group-entry" function (:arguments ("group")) nil [107552 107667])
            ("gnus-active" function (:arguments ("group")) nil [107669 107773])
            ("gnus-set-active" function (:arguments ("group" "active")) nil [107775 107897])
            ("gnus-info-group" function (:arguments ("info")) nil [107923 107973])
            ("gnus-info-rank" function (:arguments ("info")) nil [107974 108023])
            ("gnus-info-read" function (:arguments ("info")) nil [108024 108073])
            ("gnus-info-marks" function (:arguments ("info")) nil [108074 108124])
            ("gnus-info-method" function (:arguments ("info")) nil [108125 108176])
            ("gnus-info-params" function (:arguments ("info")) nil [108177 108228])
            ("gnus-info-level" function (:arguments ("info")) nil [108230 108352])
            ("gnus-info-score" function (:arguments ("info")) nil [108353 108469])
            ("gnus-info-set-group" function (:arguments ("info" "group")) nil [108471 108539])
            ("gnus-info-set-rank" function (:arguments ("info" "rank")) nil [108540 108616])
            ("gnus-info-set-read" function (:arguments ("info" "read")) nil [108617 108693])
            ("gnus-info-set-marks" function (:arguments ("info" "marks" "extend")) nil [108694 108850])
            ("gnus-info-set-method" function (:arguments ("info" "method" "extend")) nil [108851 109011])
            ("gnus-info-set-params" function (:arguments ("info" "params" "extend")) nil [109012 109172])
            ("gnus-info-set-entry" function (:arguments ("info" "entry" "number")) nil [109174 109395])
            ("gnus-info-set-level" function (:arguments ("info" "level")) nil [109397 109556])
            ("gnus-info-set-score" function (:arguments ("info" "score")) nil [109557 109734])
            ("gnus-get-info" function (:arguments ("group")) nil [109736 109820])
            ("gnus-set-info" function (:arguments ("group" "info")) nil [109822 109926])
            ("gnus-shutdown-alist" variable nil nil [109952 109984])
            ("gnus-add-shutdown" function (:arguments ("function" "symbols")) nil [109986 110144])
            ("gnus-shutdown" function (:arguments ("symbol")) nil [110146 110328])
            ("gnus-find-subscribed-addresses" function nil nil [110368 111019])
            ("gnus-string-or" function (:arguments ("strings")) nil [111021 111217])
            ("gnus-string-or-1" function (:arguments ("strings")) nil [111219 111420])
            ("gnus-version" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [111422 111630])
            ("gnus-continuum-version" function (:arguments ("version")) nil [111632 112678])
            ("gnus-info-find-node" function
               (:user-visible-flag t
                :arguments ("nodename"))
                nil [112680 113000])
            ("gnus-current-prefix-symbol" variable nil nil [113032 113098])
            ("gnus-current-prefix-symbols" variable nil nil [113100 113176])
            ("gnus-interactive" function (:arguments ("string" "params")) nil [113178 115505])
            ("gnus-symbolic-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [115507 116146])
            ("gnus-check-backend-function" function (:arguments ("func" "group")) nil [116177 116566])
            ("gnus-group-read-only-p" function (:arguments ("group")) nil [116568 116914])
            ("gnus-virtual-group-p" function (:arguments ("group")) nil [116916 117103])
            ("gnus-news-group-p" function (:arguments ("group" "article")) nil [117105 117780])
            ("gnus-use-long-file-name" function (:arguments ("symbol")) nil [117832 118163])
            ("gnus-generate-new-group-name" function (:arguments ("leaf")) nil [118202 118397])
            ("gnus-ephemeral-group-p" function (:arguments ("group")) nil [118399 118530])
            ("gnus-group-quit-config" function (:arguments ("group")) nil [118532 118657])
            ("gnus-kill-ephemeral-group" function (:arguments ("group")) nil [118659 118799])
            ("gnus-simplify-mode-line" function nil nil [118801 119139])
            ("gnus-server-add-address" function (:arguments ("method")) nil [119166 119596])
            ("gnus-method-to-server" function (:arguments ("method" "nocache" "no-enter-cache")) nil [119598 120725])
            ("gnus-server-to-method" function (:arguments ("server")) nil [120727 122543])
            ("gnus-server-get-method" function (:arguments ("group" "method")) nil [122545 123028])
            ("gnus-method-equal" function (:arguments ("ss1" "ss2")) nil [123030 123290])
            ("gnus-methods-equal-p" function (:arguments ("m1" "m2")) nil [123292 123588])
            ("gnus-sloppily-equal-method-parameters" function (:arguments ("m1" "m2")) nil [123590 124434])
            ("gnus-method-ephemeral-p" function (:arguments ("method")) nil [124436 124642])
            ("gnus-methods-sloppily-equal" function (:arguments ("m1" "m2")) nil [124644 124875])
            ("gnus-server-equal" function (:arguments ("m1" "m2")) nil [124877 125190])
            ("gnus-servers-using-backend" function (:arguments ("backend")) nil [125192 125443])
            ("gnus-archive-server-wanted-p" function nil nil [125445 125856])
            ("gnus-method-to-server-name" function (:arguments ("method")) nil [125858 126191])
            ("gnus-method-to-full-server-name" function (:arguments ("method")) nil [126193 126291])
            ("gnus-group-prefixed-name" function (:arguments ("group" "method" "full")) nil [126293 126802])
            ("gnus-group-full-name" function (:arguments ("group" "method")) nil [126804 126969])
            ("gnus-group-guess-full-name-from-command-method" function (:arguments ("group")) nil [126971 127201])
            ("gnus-group-real-prefix" function (:arguments ("group")) nil [127203 127404])
            ("gnus-group-short-name" function (:arguments ("group")) nil [127406 127608])
            ("gnus-group-prefixed-p" function (:arguments ("group")) nil [127610 127744])
            ("declare-function" code nil nil [127746 127810])
            ("gnus-summary-buffer-name" function (:arguments ("group")) nil [127812 127956])
            ("gnus-group-method" function (:arguments ("group")) nil [127958 128874])
            ("gnus-native-method-p" function (:arguments ("method")) nil [128876 129019])
            ("gnus-secondary-method-p" function (:arguments ("method")) nil [129021 129403])
            ("gnus-method-simplify" function (:arguments ("method")) nil [129405 129691])
            ("gnus-groups-from-server" function (:arguments ("server")) nil [129693 130015])
            ("gnus-group-foreign-p" function (:arguments ("group")) nil [130017 130182])
            ("gnus-group-native-p" function (:arguments ("group")) nil [130184 130296])
            ("gnus-group-secondary-p" function (:arguments ("group")) nil [130298 130446])
            ("gnus-parameters-get-parameter" function (:arguments ("group")) nil [130448 130937])
            ("gnus-expand-group-parameter" function (:arguments ("match" "value" "group")) nil [130939 131310])
            ("gnus-expand-group-parameters" function (:arguments ("match" "parameters" "group")) nil [131312 132432])
            ("gnus-group-fast-parameter" function (:arguments ("group" "symbol" "allow-list")) nil [132434 134312])
            ("gnus-group-find-parameter" function (:arguments ("group" "symbol" "allow-list")) nil [134314 134922])
            ("gnus-group-get-parameter" function (:arguments ("group" "symbol" "allow-list")) nil [134924 135388])
            ("gnus-group-parameter-value" function (:arguments ("params" "symbol" "allow-list" "present-p")) nil [135390 136050])
            ("gnus-group-add-parameter" function (:arguments ("group" "param")) nil [136052 136406])
            ("gnus-group-set-parameter" function (:arguments ("group" "name" "value")) nil [136408 137109])
            ("gnus-group-remove-parameter" function (:arguments ("group" "name")) nil [137111 137521])
            ("gnus-group-add-score" function (:arguments ("group" "score")) nil [137523 137783])
            ("gnus-short-group-name" function (:arguments ("group" "levels")) nil [137785 139399])
            ("gnus-narrow-to-body" function nil nil [139401 139599])
            ("gnus-apply-kill-file" function nil nil [139636 139931])
            ("gnus-kill-save-kill-buffer" function nil nil [139933 140196])
            ("gnus-kill-file-name" variable (:default-value "KILL") nil [140198 140335])
            ("gnus-newsgroup-kill-file" function (:arguments ("newsgroup")) nil [140337 141124])
            ("gnus-member-of-valid" function (:arguments ("symbol" "group")) nil [141146 141362])
            ("gnus-method-option-p" function (:arguments ("method" "option")) nil [141364 141631])
            ("gnus-similar-server-opened" function (:arguments ("method")) nil [141633 142182])
            ("gnus-server-extend-method" function (:arguments ("group" "method")) nil [142184 142941])
            ("gnus-server-status" function (:arguments ("method")) nil [142943 143056])
            ("gnus-group-name-to-method" function (:arguments ("group")) nil [143058 143421])
            ("gnus-server-string" function (:arguments ("server")) nil [143423 143726])
            ("gnus-same-method-different-name" function (:arguments ("method")) nil [143728 144207])
            ("gnus-find-method-for-group" function (:arguments ("group" "info")) nil [144209 145288])
            ("gnus-methods-using" function (:arguments ("feature")) nil [145290 145545])
            ("message-y-or-n-p" function (:prototype-flag t) nil [145547 145600])
            ("gnus-read-group" function (:arguments ("prompt" "default")) nil [145602 146740])
            ("gnus-read-method" function (:arguments ("prompt")) nil [146742 147868])
            ("gnus-agent-method-p" function (:arguments ("method-or-server")) nil [147891 148369])
            ("gnus-online" function (:arguments ("method")) nil [148371 148525])
            ("gnus-slave-no-server" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [148568 148731])
            ("gnus-no-server" function
               (:user-visible-flag t
                :arguments ("arg" "slave"))
                nil [148748 149168])
            ("gnus-slave" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [149185 149289])
            ("gnus-delete-gnus-frame" function nil nil [149291 149593])
            ("gnus-other-frame" function
               (:user-visible-flag t
                :arguments ("arg" "display"))
                nil [149610 151712])
            ("gnus" function
               (:user-visible-flag t
                :arguments ("arg" "dont-connect" "slave"))
                nil [151729 152394])
            ("declare-function" code nil nil [152396 152504])
            ("gnus-list-debbugs" function (:user-visible-flag t) nil [152506 152638])
            ("gnus" package nil nil [152640 152655]))          
      :file "gnus.el"
      :pointmax 152679
      :fsize 152678
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 102174 . 102175) (symbol 92368 . 92384) (open-paren 92367 . 92368) (close-paren 8817 . 8818) (symbol 7994 . 8010) (open-paren 7993 . 7994) (close-paren 1034 . 1035) (symbol 1003 . 1020) (open-paren 1002 . 1003)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [910 923])
            ("gnus" include nil nil [926 941])
            ("gnus-util" include nil nil [942 962])
            ("gnus-windows" customgroup (:user-visible-flag t) nil [964 1032])
            ("gnus-use-full-window" variable (:default-value t) nil [1034 1153])
            ("gnus-window-min-width" variable (:default-value 2) nil [1155 1265])
            ("gnus-window-min-height" variable (:default-value 1) nil [1267 1379])
            ("gnus-always-force-window-configuration" variable nil nil [1381 1536])
            ("gnus-use-frames-on-any-display" variable nil nil [1538 1818])
            ("gnus-buffer-configuration" variable (:default-value (quote ((group (vertical 1.0 (group 1.0 point))) (summary (vertical 1.0 (summary 1.0 point))) (article (cond (gnus-use-trees (quote (vertical 1.0 (summary 0.25 point) (tree 0.25) (article 1.0)))) (t (quote (vertical 1.0 (summary 0.25 point) (article 1.0)))))) (server (vertical 1.0 (server 1.0 point))) (browse (vertical 1.0 (browse 1.0 point))) (message (vertical 1.0 (message 1.0 point))) (pick (vertical 1.0 (article 1.0 point))) (info (vertical 1.0 (info 1.0 point))) (summary-faq (vertical 1.0 (summary 0.25) (faq 1.0 point))) (only-article (vertical 1.0 (article 1.0 point))) (edit-article (vertical 1.0 (article 1.0 point))) (edit-form (vertical 1.0 (group 0.5) (edit-form 1.0 point))) (edit-score (vertical 1.0 (summary 0.25) (edit-score 1.0 point))) (edit-server (vertical 1.0 (server 0.5) (edit-form 1.0 point))) (post (vertical 1.0 (post 1.0 point))) (reply (vertical 1.0 (article 0.5) (message 1.0 point))) (forward (vertical 1.0 (message 1.0 point))) (reply-yank (vertical 1.0 (message 1.0 point))) (mail-bounce (vertical 1.0 (article 0.5) (message 1.0 point))) (pipe (vertical 1.0 (summary 0.25 point) ("*Shell Command Output*" 1.0))) (bug (vertical 1.0 (if gnus-bug-create-help-buffer (quote ("*Gnus Help Bug*" 0.5))) ("*Gnus Bug*" 1.0 point))) (score-trace (vertical 1.0 (summary 0.5 point) ("*Score Trace*" 1.0))) (score-words (vertical 1.0 (summary 0.5 point) ("*Score Words*" 1.0))) (split-trace (vertical 1.0 (summary 0.5 point) ("*Split Trace*" 1.0))) (category (vertical 1.0 (category 1.0))) (compose-bounce (vertical 1.0 (article 0.5) (message 1.0 point))) (display-term (vertical 1.0 ("*display*" 1.0))) (mml-preview (vertical 1.0 (message 0.5) (mml-preview 1.0 point)))))) nil [1820 4254])
            ("gnus-window-to-buffer" variable (:default-value (quote ((group . gnus-group-buffer) (summary . gnus-summary-buffer) (article . gnus-article-buffer) (server . gnus-server-buffer) (browse . "*Gnus Browse Server*") (edit-group . gnus-group-edit-buffer) (edit-form . gnus-edit-form-buffer) (edit-server . gnus-server-edit-buffer) (edit-score . gnus-score-edit-buffer) (message . gnus-message-buffer) (mail . gnus-message-buffer) (post-news . gnus-message-buffer) (faq . gnus-faq-buffer) (tree . gnus-tree-buffer) (score-trace . "*Score Trace*") (split-trace . "*Split Trace*") (info . gnus-info-buffer) (category . gnus-category-buffer) (article-copy . gnus-article-copy) (draft . gnus-draft-buffer) (mml-preview . mml-preview-buffer)))) nil [4256 5114])
            ("gnus-configure-windows-hook" variable nil nil [5116 5258])
            ("gnus-current-window-configuration" variable nil nil [5285 5379])
            ("gnus-created-frames" variable nil nil [5381 5413])
            ("gnus-window-frame-focus" variable nil nil [5414 5450])
            ("gnus-kill-gnus-frames" function nil nil [5452 5843])
            ("gnus-add-configuration" function (:arguments ("conf")) nil [5860 6096])
            ("gnus-frame-list" variable nil nil [6098 6126])
            ("gnus-window-to-buffer-helper" function (:arguments ("obj")) nil [6128 6288])
            ("gnus-configure-frame" function (:arguments ("split" "window")) nil [6290 11350])
            ("gnus-frame-split-p" variable nil nil [11352 11383])
            ("gnus-configure-windows" function (:arguments ("setting" "force")) nil [11385 13549])
            ("gnus-delete-windows-in-gnusey-frames" function nil nil [13551 14055])
            ("gnus-all-windows-visible-p" function (:arguments ("split")) nil [14057 15376])
            ("gnus-window-top-edge" function (:arguments ("window")) nil [15378 15498])
            ("gnus-remove-some-windows" function nil nil [15500 16079])
            ("gnus-get-buffer-window" function (:arguments ("buffer" "frame")) nil [16081 16455])
            ("gnus-win" package nil nil [16457 16476]))          
      :file "gnus-win.el"
      :pointmax 16504
      :fsize 16503
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 923 . 924) (symbol 892 . 909) (open-paren 891 . 892)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [907 920])
            ("gnus" include nil nil [923 938])
            ("message" include nil nil [939 957])
            ("gnus-range" include nil nil [958 979])
            ("gnus-run-hook-with-args" function (:prototype-flag t) nil [981 1028])
            ("gnus-agent-expire" function (:prototype-flag t) nil [1029 1071])
            ("gnus-agent-regenerate-group" function (:prototype-flag t) nil [1072 1124])
            ("gnus-agent-read-servers-validate-native" function (:prototype-flag t) nil [1125 1189])
            ("gnus-agent-possibly-synchronize-flags-server" function (:prototype-flag t) nil [1190 1259])
            ("gnus-open-server-hook" variable nil nil [1261 1400])
            ("gnus-after-set-mark-hook" variable nil nil [1402 1548])
            ("gnus-before-update-mark-hook" variable nil nil [1550 1705])
            ("gnus-server-unopen-status" variable nil nil [1707 2177])
            ("gnus-nntp-server" variable nil nil [2179 2338])
            ("make-obsolete-variable" code nil nil [2339 2408])
            ("gnus-internal-registry-spool-current-method" variable nil nil [2410 2508])
            ("gnus-server-opened" function (:arguments ("gnus-command-method")) nil [2511 2932])
            ("gnus-status-message" function (:arguments ("gnus-command-method")) nil [2934 3407])
            ("gnus-start-news-server" function (:arguments ("confirm")) nil [3443 5884])
            ("gnus-check-group" function (:arguments ("group")) nil [5886 6102])
            ("gnus-check-server" function (:arguments ("method" "silent")) nil [6104 7126])
            ("gnus-get-function" function (:arguments ("method" "function" "noerror")) nil [7128 8253])
            ("gnus-method-denied-p" function (:arguments ("method")) nil [8307 8408])
            ("gnus-backend-trace" variable nil nil [8410 8441])
            ("gnus-backend-trace-elapsed" variable nil nil [8442 8481])
            ("gnus-backend-trace" function (:arguments ("type" "form")) nil [8483 8923])
            ("gnus-open-server" function (:arguments ("gnus-command-method")) nil [8925 11934])
            ("gnus-close-server" function (:arguments ("gnus-command-method")) nil [11936 12244])
            ("gnus-request-list" function (:arguments ("gnus-command-method")) nil [12246 12559])
            ("gnus-finish-retrieve-group-infos" function (:arguments ("gnus-command-method" "infos" "data")) nil [12561 13065])
            ("gnus-retrieve-group-data-early" function (:arguments ("gnus-command-method" "infos")) nil [13067 13434])
            ("gnus-request-list-newsgroups" function (:arguments ("gnus-command-method")) nil [13436 13775])
            ("gnus-request-newgroups" function (:arguments ("date" "gnus-command-method")) nil [13777 14160])
            ("gnus-request-regenerate" function (:arguments ("gnus-command-method")) nil [14162 14489])
            ("gnus-request-compact-group" function (:arguments ("group")) nil [14491 14796])
            ("gnus-request-compact" function (:arguments ("gnus-command-method")) nil [14798 15119])
            ("gnus-request-group" function (:arguments ("group" "dont-check" "gnus-command-method" "info")) nil [15121 15668])
            ("gnus-request-group-description" function (:arguments ("group")) nil [15670 16032])
            ("gnus-request-group-scan" function (:arguments ("group" "info")) nil [16034 16402])
            ("gnus-close-group" function (:arguments ("group")) nil [16404 16675])
            ("gnus-retrieve-headers" function (:arguments ("articles" "group" "fetch-old")) nil [16677 17392])
            ("gnus-retrieve-articles" function (:arguments ("articles" "group")) nil [17394 17690])
            ("gnus-retrieve-groups" function (:arguments ("groups" "gnus-command-method")) nil [17692 18038])
            ("gnus-request-type" function (:arguments ("group" "article")) nil [18040 18438])
            ("gnus-request-update-group-status" function (:arguments ("group" "status")) nil [18440 18932])
            ("gnus-request-set-mark" function (:arguments ("group" "action")) nil [18934 19416])
            ("gnus-request-update-mark" function (:arguments ("group" "article" "mark")) nil [19418 19929])
            ("gnus-request-article" function (:arguments ("article" "group" "buffer")) nil [19931 20359])
            ("gnus-request-thread" function (:arguments ("header" "group")) nil [20361 20670])
            ("gnus-select-group-with-message-id" function (:arguments ("group" "message-id")) nil [20672 22448])
            ("gnus-simplify-group-name" function (:arguments ("group")) nil [22450 22698])
            ("gnus-warp-to-article" function (:user-visible-flag t) nil [22700 23306])
            ("gnus-request-head" function (:arguments ("article" "group")) nil [23308 24400])
            ("gnus-request-body" function (:arguments ("article" "group")) nil [24402 25400])
            ("gnus-request-post" function (:arguments ("gnus-command-method")) nil [25402 25716])
            ("gnus-request-expunge-group" function (:arguments ("group" "gnus-command-method")) nil [25718 26114])
            ("gnus-request-scan" function (:arguments ("group" "gnus-command-method")) nil [26116 26779])
            ("gnus-request-update-info" function (:arguments ("info" "gnus-command-method")) nil [26781 27212])
            ("gnus-request-marks" function (:arguments ("info" "gnus-command-method")) nil [27214 28174])
            ("gnus-request-expire-articles" function (:arguments ("articles" "group" "force")) nil [28176 28963])
            ("gnus-request-move-article" function (:arguments ("article" "group" "server" "accept-function" "last" "move-is-internal")) nil [28965 29508])
            ("gnus-request-accept-article" function (:arguments ("group" "gnus-command-method" "last" "no-encode")) nil [29510 30725])
            ("gnus-request-replace-article" function (:arguments ("article" "group" "buffer" "no-encode")) nil [30727 31358])
            ("gnus-request-restore-buffer" function (:arguments ("article" "group")) nil [31360 31692])
            ("gnus-request-create-group" function (:arguments ("group" "gnus-command-method" "args")) nil [31694 32122])
            ("gnus-request-delete-group" function (:arguments ("group" "force")) nil [32124 32508])
            ("gnus-request-rename-group" function (:arguments ("group" "new-name")) nil [32510 32936])
            ("gnus-close-backends" function nil nil [32938 33311])
            ("gnus-asynchronous-p" function (:arguments ("gnus-command-method")) nil [33313 33484])
            ("gnus-remove-denial" function (:arguments ("gnus-command-method")) nil [33486 33907])
            ("gnus-int" package nil nil [33909 33928]))          
      :file "gnus-int.el"
      :pointmax 33956
      :fsize 33955
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 920 . 921) (symbol 889 . 906) (open-paren 888 . 889)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [902 915])
            ("gnus-newsrc-file-version" variable nil nil [917 950])
            ("gnus" include nil nil [952 967])
            ("gnus-summary-mark-positions" variable nil nil [994 1034])
            ("gnus-group-mark-positions" variable nil nil [1035 1073])
            ("gnus-group-indentation" variable nil nil [1074 1108])
            ("gnus-tmp-unread" variable nil nil [1538 1562])
            ("gnus-tmp-replied" variable nil nil [1563 1588])
            ("gnus-tmp-score-char" variable nil nil [1589 1617])
            ("gnus-tmp-indentation" variable nil nil [1618 1647])
            ("gnus-tmp-opening-bracket" variable nil nil [1648 1681])
            ("gnus-tmp-lines" variable nil nil [1682 1705])
            ("gnus-tmp-name" variable nil nil [1706 1728])
            ("gnus-tmp-closing-bracket" variable nil nil [1729 1762])
            ("gnus-tmp-subject-or-nil" variable nil nil [1763 1795])
            ("gnus-tmp-subject" variable nil nil [1796 1821])
            ("gnus-tmp-marked" variable nil nil [1822 1846])
            ("gnus-tmp-marked-mark" variable nil nil [1847 1876])
            ("gnus-tmp-subscribed" variable nil nil [1877 1905])
            ("gnus-tmp-process-marked" variable nil nil [1906 1938])
            ("gnus-tmp-number-of-unread" variable nil nil [1939 1973])
            ("gnus-tmp-group-name" variable nil nil [1974 2002])
            ("gnus-tmp-group" variable nil nil [2003 2026])
            ("gnus-tmp-article-number" variable nil nil [2027 2059])
            ("gnus-tmp-unread-and-unselected" variable nil nil [2060 2099])
            ("gnus-tmp-news-method" variable nil nil [2100 2129])
            ("gnus-tmp-news-server" variable nil nil [2130 2159])
            ("gnus-mouse-face" variable nil nil [2160 2184])
            ("gnus-tmp-header" variable nil nil [2185 2209])
            ("gnus-tmp-from" variable nil nil [2210 2232])
            ("declare-function" code nil nil [2234 2342])
            ("gnus-lrm-string-p" function (:arguments ("string")) nil [2344 2521])
            ("gnus-lrm-string" variable (:default-value (if (ignore-errors (string 8206)) (propertize (string 8206) (quote invisible) t) "")) nil [2523 2637])
            ("gnus-summary-line-format-spec" variable nil nil [2639 2681])
            ("gnus-summary-dummy-line-format-spec" variable nil nil [2682 2730])
            ("gnus-group-line-format-spec" variable nil nil [2731 2771])
            ("gnus-format-specs" variable (:default-value (\` ((version \, emacs-version) (gnus-version \, (gnus-continuum-version))))) nil [2773 2905])
            ("gnus-default-format-specs" variable (:default-value gnus-format-specs) nil [2907 2959])
            ("gnus-article-mode-line-format-spec" variable nil nil [2961 3008])
            ("gnus-summary-mode-line-format-spec" variable nil nil [3009 3056])
            ("gnus-group-mode-line-format-spec" variable nil nil [3057 3102])
            ("gnus-update-format" function
               (:user-visible-flag t
                :arguments ("var"))
                nil [3173 4203])
            ("gnus-update-format-specifications" function (:arguments ("force" "types")) nil [4205 6229])
            ("gnus-mouse-face-0" variable (:default-value (quote highlight)) nil [6231 6335])
            ("gnus-mouse-face-1" variable (:default-value (quote highlight)) nil [6337 6442])
            ("gnus-mouse-face-2" variable (:default-value (quote highlight)) nil [6444 6549])
            ("gnus-mouse-face-3" variable (:default-value (quote highlight)) nil [6551 6656])
            ("gnus-mouse-face-4" variable (:default-value (quote highlight)) nil [6658 6763])
            ("gnus-mouse-face-function" function (:arguments ("form" "type")) nil [6765 7003])
            ("gnus-face-0" variable (:default-value (quote bold)) nil [7005 7098])
            ("gnus-face-1" variable (:default-value (quote italic)) nil [7100 7196])
            ("gnus-face-2" variable (:default-value (quote bold-italic)) nil [7198 7299])
            ("gnus-face-3" variable (:default-value (quote bold)) nil [7301 7395])
            ("gnus-face-4" variable (:default-value (quote bold)) nil [7397 7491])
            ("gnus-face-face-function" function (:arguments ("form" "type")) nil [7493 7945])
            ("gnus-balloon-face-function" function (:arguments ("form" "type")) nil [7947 8113])
            ("gnus-spec-tab" function (:arguments ("column")) nil [8115 8524])
            ("gnus-correct-length" function (:arguments ("string")) nil [8526 8645])
            ("gnus-correct-substring" function (:arguments ("string" "start" "end")) nil [8647 9224])
            ("gnus-tilde-max-form" function (:arguments ("el" "max-width")) nil [9226 9967])
            ("gnus-tilde-cut-form" function (:arguments ("el" "cut-width")) nil [9969 10490])
            ("gnus-tilde-ignore-form" function (:arguments ("el" "ignore-value")) nil [10492 10745])
            ("gnus-pad-form" function (:arguments ("el" "pad-width")) nil [10747 11448])
            ("gnus-parse-format" function (:arguments ("format" "spec-alist" "insert")) nil [11450 12205])
            ("gnus-parse-complex-format" function (:arguments ("format" "spec-alist")) nil [12207 13866])
            ("gnus-complex-form-to-spec" function (:arguments ("form" "spec-alist")) nil [13868 14346])
            ("gnus-parse-simple-format" function (:arguments ("format" "spec-alist" "insert")) nil [14348 19902])
            ("gnus-eval-format" function (:arguments ("format" "alist" "props")) nil [19904 20192])
            ("gnus-set-format" function (:arguments ("type" "insertable")) nil [20194 20470])
            ("gnus-summary-line-format-spec" function nil nil [20477 20984])
            ("gnus-spec" package nil nil [20986 21006]))          
      :file "gnus-spec.el"
      :pointmax 21081
      :fsize 21085
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 915 . 916) (symbol 884 . 901) (open-paren 883 . 884)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [910 923])
            ("gnus-range-normalize" function (:arguments ("range")) nil [956 1136])
            ("gnus-last-element" function (:arguments ("list")) nil [1138 1264])
            ("gnus-copy-sequence" function (:arguments ("list")) nil [1266 1542])
            ("gnus-set-difference" function (:arguments ("list1" "list2")) nil [1544 1889])
            ("gnus-range-nconcat" function (:arguments ("ranges")) nil [1891 2954])
            ("gnus-range-difference" function (:arguments ("range1" "range2")) nil [2956 4538])
            ("gnus-sorted-difference" function (:arguments ("list1" "list2")) nil [4557 5059])
            ("gnus-sorted-ndifference" function (:arguments ("list1" "list2")) nil [5076 5587])
            ("gnus-sorted-complement" function (:arguments ("list1" "list2")) nil [5604 6200])
            ("gnus-intersection" function (:arguments ("list1" "list2")) nil [6217 6418])
            ("gnus-sorted-intersection" function (:arguments ("list1" "list2")) nil [6435 6865])
            ("gnus-sorted-range-intersection" function (:arguments ("range1" "range2")) nil [6882 8907])
            ("defalias" code nil nil [8924 8991])
            ("gnus-sorted-nintersection" function (:arguments ("list1" "list2")) nil [9008 9540])
            ("gnus-sorted-union" function (:arguments ("list1" "list2")) nil [9557 10199])
            ("gnus-sorted-nunion" function (:arguments ("list1" "list2")) nil [10216 10891])
            ("gnus-compress-sequence" function (:arguments ("numbers" "always-list")) nil [10893 11812])
            ("defalias" code nil nil [11814 11873])
            ("gnus-uncompress-range" function (:arguments ("ranges")) nil [11874 12676])
            ("gnus-add-to-range" function (:arguments ("ranges" "list")) nil [12678 14560])
            ("gnus-remove-from-range" function (:arguments ("range1" "range2")) nil [14562 17329])
            ("gnus-member-of-range" function (:arguments ("number" "ranges")) nil [17331 17840])
            ("gnus-list-range-intersection" function (:arguments ("list" "ranges")) nil [17842 18450])
            ("defalias" code nil nil [18452 18528])
            ("gnus-list-range-difference" function (:arguments ("list" "ranges")) nil [18530 19151])
            ("gnus-range-length" function (:arguments ("range")) nil [19153 19464])
            ("gnus-range-add" function (:arguments ("range1" "range2")) nil [19466 21155])
            ("gnus-add-to-sorted-list" function (:arguments ("list" "num")) nil [21172 21474])
            ("gnus-range-map" function (:arguments ("func" "range")) nil [21476 21877])
            ("gnus-range" package nil nil [21879 21900]))          
      :file "gnus-range.el"
      :pointmax 21930
      :fsize 21929
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 923 . 924) (symbol 892 . 909) (open-paren 891 . 892)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1117 1130])
            ("parse-time" include nil nil [1132 1153])
            ("nnimap" include nil nil [1154 1171])
            ("epg" include nil nil [1192 1206])
            ("epg-make-context" function (:prototype-flag t) nil [1247 1281])
            ("epg-context-set-passphrase-callback" function (:prototype-flag t) nil [1282 1335])
            ("epg-decrypt-string" function (:prototype-flag t) nil [1336 1372])
            ("epg-encrypt-string" function (:prototype-flag t) nil [1373 1409])
            ("gnus-cloud" customgroup (:user-visible-flag t) nil [1411 1501])
            ("gnus-cloud-synced-files" variable (:default-value (quote ("~/.authinfo.gpg" "~/.gnus.el" (:directory "~/News" :match ".*.SCORE\\'")))) nil [1503 2072])
            ("gnus-cloud-storage-method" variable (:default-value (if (featurep (quote epg)) (quote epg) (quote base64-gzip))) nil [2074 2448])
            ("gnus-cloud-interactive" variable (:default-value t) nil [2450 2594])
            ("gnus-cloud-group-name" variable (:default-value "Emacs-Cloud") nil [2596 2640])
            ("gnus-cloud-covered-servers" variable nil nil [2641 2680])
            ("gnus-cloud-version" variable (:default-value 1) nil [2682 2711])
            ("gnus-cloud-sequence" variable (:default-value 1) nil [2712 2742])
            ("gnus-cloud-method" variable nil nil [2744 3076])
            ("gnus-cloud-make-chunk" function (:arguments ("elems")) nil [3078 3267])
            ("gnus-cloud-insert-data" function (:arguments ("elems")) nil [3269 4290])
            ("gnus-cloud-encode-data" function nil nil [4292 5409])
            ("gnus-cloud-decode-data" function nil nil [5411 6301])
            ("gnus-cloud-parse-chunk" function nil nil [6303 6889])
            ("gnus-cloud-parse-version-1" function nil nil [6891 7755])
            ("gnus-cloud-update-all" function (:arguments ("elems")) nil [7757 8123])
            ("gnus-cloud-update-newsrc-data" function (:arguments ("group" "elem" "force-older")) nil [8125 9625])
            ("gnus-cloud-update-file" function (:arguments ("elem" "op")) nil [9627 11181])
            ("gnus-cloud-replace-file" function (:arguments ("file-name" "date" "new-contents")) nil [11183 11521])
            ("gnus-cloud-file-covered-p" function (:arguments ("file-name")) nil [11523 12190])
            ("gnus-cloud-all-files" function nil nil [12192 12730])
            ("gnus-cloud-file-timestamps" variable nil nil [12732 12771])
            ("gnus-cloud-files-to-upload" function (:arguments ("full")) nil [12773 13219])
            ("gnus-cloud-timestamp" function (:arguments ("time")) nil [13221 13342])
            ("gnus-cloud-file-new-p" function (:arguments ("file" "full")) nil [13344 13622])
            ("declare-function" code nil nil [13624 13749])
            ("declare-function" code nil nil [13750 13854])
            ("gnus-cloud-ensure-cloud-group" function nil nil [13856 14440])
            ("gnus-cloud-upload-all-data" function (:user-visible-flag t) nil [14442 14582])
            ("gnus-cloud-upload-data" function
               (:user-visible-flag t
                :arguments ("full"))
                nil [14584 15849])
            ("gnus-cloud-add-timestamps" function (:arguments ("elems")) nil [15851 16239])
            ("gnus-cloud-available-chunks" function nil nil [16241 16957])
            ("gnus-cloud-chunk-sequence" function (:arguments ("string")) nil [16959 17110])
            ("gnus-cloud-prune-old-chunks" function (:arguments ("headers")) nil [17130 17699])
            ("gnus-cloud-download-all-data" function (:user-visible-flag t) nil [17701 17885])
            ("gnus-cloud-download-data" function (:arguments ("update" "sequence-override")) nil [17887 19339])
            ("gnus-cloud-server-p" function (:arguments ("server")) nil [19341 19422])
            ("gnus-cloud-host-server-p" function (:arguments ("server")) nil [19424 19500])
            ("gnus-cloud-host-acceptable-method-p" function (:arguments ("server")) nil [19502 19611])
            ("gnus-cloud-collect-full-newsrc" function nil nil [19613 20081])
            ("gnus-cloud" package nil nil [20083 20104]))          
      :file "gnus-cloud.el"
      :pointmax 20134
      :fsize 20133
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 1206 . 1207) (symbol 1174 . 1191) (open-paren 1173 . 1174) (close-paren 1130 . 1131) (symbol 1099 . 1116) (open-paren 1098 . 1099)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [925 938])
            ("gnus" include nil nil [940 955])
            ("gnus-sum" include nil nil [956 975])
            ("gnus-group" include nil nil [976 997])
            ("nnmail" include nil nil [998 1015])
            ("gnus-group-split-updated-hook" variable nil nil [1017 1148])
            ("gnus-group-split-default-catch-all-group" variable (:default-value "mail.misc") nil [1150 1409])
            ("gnus-group-split-setup" function
               (:user-visible-flag t
                :arguments ("auto-update" "catch-all"))
                nil [1426 2804])
            ("gnus-group-split-update" function
               (:user-visible-flag t
                :arguments ("catch-all"))
                nil [2821 3343])
            ("gnus-group-split" function nil nil [3360 3653])
            ("gnus-group-split-fancy" function (:arguments ("groups" "no-crosspost" "catch-all")) nil [3670 8784])
            ("gnus-mlspl" package nil nil [8786 8807]))          
      :file "gnus-mlspl.el"
      :pointmax 8837
      :fsize 8836
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 938 . 939) (symbol 907 . 924) (open-paren 906 . 907)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [901 914])
            ("tool-bar-mode" variable nil nil [917 939])
            ("gnus-tmp-header" variable nil nil [940 964])
            ("gnus" include nil nil [966 981])
            ("gnus-group" include nil nil [982 1003])
            ("gnus-spec" include nil nil [1004 1024])
            ("gnus-range" include nil nil [1025 1046])
            ("gnus-int" include nil nil [1047 1066])
            ("gnus-undo" include nil nil [1067 1087])
            ("gnus-util" include nil nil [1088 1108])
            ("gmm-utils" include nil nil [1109 1129])
            ("mm-decode" include nil nil [1130 1150])
            ("nnoo" include nil nil [1151 1166])
            ("gnus-summary-limit-include-cached" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1168 1232])
            ("gnus-cache-write-active" function (:prototype-flag t) nil [1233 1281])
            ("gnus-mailing-list-insinuate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1282 1337])
            ("turn-on-gnus-mailing-list-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1338 1396])
            ("gnus-pick-line-number" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1397 1448])
            ("mm-uu-dissect" function (:prototype-flag t) nil [1449 1482])
            ("gnus-article-outlook-deuglify-article" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1483 1609])
            ("gnus-article-outlook-unwrap-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1610 1672])
            ("gnus-article-outlook-repair-attribution" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1673 1741])
            ("gnus-article-outlook-rearrange-citation" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1742 1810])
            ("nnir-article-rsv" function (:prototype-flag t) nil [1811 1861])
            ("nnir-article-group" function (:prototype-flag t) nil [1862 1914])
            ("gnus-kill-summary-on-exit" variable (:default-value t) nil [1916 2162])
            ("gnus-summary-next-group-on-exit" variable (:default-value t) nil [2164 2429])
            ("gnus-summary-stop-at-end-of-message" variable nil nil [2431 2667])
            ("gnus-fetch-old-headers" variable nil nil [2669 3866])
            ("gnus-refer-thread-limit" variable (:default-value 500) nil [3868 4133])
            ("gnus-refer-thread-use-nnir" variable nil nil [4135 4377])
            ("gnus-refer-thread-limit-to-thread" variable nil nil [4379 4640])
            ("gnus-summary-make-false-root" variable (:default-value (quote adopt)) nil [4642 5854])
            ("gnus-summary-make-false-root-always" variable nil nil [5856 6000])
            ("gnus-summary-gather-exclude-subject" variable (:default-value "^ *$\\|^(none)$") nil [6002 6365])
            ("gnus-summary-gather-subject-limit" variable nil nil [6367 6993])
            ("gnus-simplify-subject-functions" variable nil nil [6995 7371])
            ("gnus-simplify-ignored-prefixes" variable nil nil [7373 7572])
            ("gnus-build-sparse-threads" variable nil nil [7574 7991])
            ("gnus-summary-thread-gathering-function" variable (:default-value (quote gnus-gather-threads-by-subject)) nil [7993 8517])
            ("gnus-summary-same-subject" variable nil nil [8519 8781])
            ("gnus-summary-goto-unread" variable nil nil [8783 9446])
            ("gnus-summary-default-score" variable nil nil [9448 9722])
            ("gnus-summary-default-high-score" variable nil nil [9724 9969])
            ("gnus-summary-default-low-score" variable nil nil [9971 10213])
            ("gnus-summary-zcore-fuzz" variable nil nil [10215 10447])
            ("gnus-simplify-subject-fuzzy-regexp" variable nil nil [10449 10756])
            ("gnus-show-threads" variable (:default-value t) nil [10758 10877])
            ("gnus-thread-hide-subtree" variable nil nil [10879 11364])
            ("gnus-thread-hide-killed" variable (:default-value t) nil [11366 11493])
            ("gnus-thread-ignore-subject" variable (:default-value t) nil [11495 11774])
            ("gnus-thread-operation-ignore-subject" variable (:default-value t) nil [11776 12317])
            ("gnus-thread-indent-level" variable (:default-value 4) nil [12319 12462])
            ("gnus-auto-extend-newsgroup" variable (:default-value t) nil [12464 12621])
            ("gnus-auto-select-first" variable (:default-value t) nil [12623 13432])
            ("gnus-auto-select-subject" variable (:default-value (quote unseen-or-unread)) nil [13434 14288])
            ("gnus-auto-select-next" variable (:default-value t) nil [14290 15213])
            ("gnus-auto-select-same" variable nil nil [15215 15452])
            ("gnus-auto-select-on-ephemeral-exit" variable (:default-value (quote next-noselect)) nil [15454 16218])
            ("gnus-auto-goto-ignores" variable (:default-value (quote unfetched)) nil [16220 17074])
            ("gnus-summary-check-current" variable nil nil [17076 17322])
            ("gnus-auto-center-summary" variable (:default-value (max (or (bound-and-true-p scroll-margin) 0) 2)) nil [17324 17757])
            ("gnus-auto-center-group" variable (:default-value t) nil [17759 17895])
            ("gnus-show-all-headers" variable nil nil [17897 18052])
            ("gnus-summary-ignore-duplicates" variable nil nil [18054 18207])
            ("gnus-single-article-buffer" variable nil nil [18209 18426])
            ("gnus-widen-article-window" variable nil nil [18428 18618])
            ("gnus-break-pages" variable (:default-value t) nil [18620 18815])
            ("gnus-move-split-methods" variable nil nil [18817 19245])
            ("gnus-move-group-prefix-function" variable (:default-value (quote gnus-group-real-prefix)) nil [19247 19539])
            ("gnus-unread-mark" variable (:default-value 32) nil [19689 19824])
            ("gnus-ticked-mark" variable (:default-value 33) nil [19826 19940])
            ("gnus-dormant-mark" variable (:default-value 63) nil [19942 20058])
            ("gnus-del-mark" variable (:default-value 114) nil [20060 20170])
            ("gnus-read-mark" variable (:default-value 82) nil [20172 20282])
            ("gnus-expirable-mark" variable (:default-value 69) nil [20284 20404])
            ("gnus-killed-mark" variable (:default-value 75) nil [20406 20520])
            ("gnus-spam-mark" variable (:default-value 36) nil [20522 20650])
            ("gnus-kill-file-mark" variable (:default-value 88) nil [20652 20783])
            ("gnus-low-score-mark" variable (:default-value 89) nil [20785 20912])
            ("gnus-catchup-mark" variable (:default-value 67) nil [20914 21041])
            ("gnus-replied-mark" variable (:default-value 65) nil [21043 21177])
            ("gnus-forwarded-mark" variable (:default-value 70) nil [21179 21332])
            ("gnus-recent-mark" variable (:default-value 78) nil [21334 21475])
            ("gnus-cached-mark" variable (:default-value 42) nil [21477 21606])
            ("gnus-saved-mark" variable (:default-value 83) nil [21608 21735])
            ("gnus-unseen-mark" variable (:default-value 46) nil [21737 21885])
            ("gnus-no-mark" variable (:default-value 32) nil [21887 22067])
            ("gnus-ancient-mark" variable (:default-value 79) nil [22069 22185])
            ("gnus-sparse-mark" variable (:default-value 81) nil [22187 22310])
            ("gnus-canceled-mark" variable (:default-value 71) nil [22312 22430])
            ("gnus-duplicate-mark" variable (:default-value 77) nil [22432 22552])
            ("gnus-undownloaded-mark" variable (:default-value 45) nil [22554 22709])
            ("gnus-downloaded-mark" variable (:default-value 43) nil [22711 22843])
            ("gnus-downloadable-mark" variable (:default-value 37) nil [22845 22984])
            ("gnus-unsendable-mark" variable (:default-value 61) nil [22986 23116])
            ("gnus-score-over-mark" variable (:default-value 43) nil [23118 23252])
            ("gnus-score-below-mark" variable (:default-value 45) nil [23254 23388])
            ("gnus-empty-thread-mark" variable (:default-value 32) nil [23390 23532])
            ("gnus-not-empty-thread-mark" variable (:default-value 61) nil [23534 23664])
            ("gnus-view-pseudo-asynchronously" variable nil nil [23666 23821])
            ("gnus-auto-expirable-marks" variable (:default-value (list gnus-killed-mark gnus-del-mark gnus-catchup-mark gnus-low-score-mark gnus-ancient-mark gnus-read-mark gnus-duplicate-mark)) nil [23823 24140])
            ("gnus-inhibit-user-auto-expire" variable (:default-value t) nil [24142 24365])
            ("gnus-mark-copied-or-moved-articles-as-expirable" variable nil nil [24367 24881])
            ("gnus-view-pseudos" variable nil nil [24883 25206])
            ("gnus-view-pseudos-separately" variable (:default-value t) nil [25208 25481])
            ("gnus-insert-pseudo-articles" variable (:default-value t) nil [25483 25632])
            ("gnus-summary-dummy-line-format" variable (:default-value "   %(:                             :%) %S
") nil [25634 26077])
            ("gnus-summary-mode-line-format" variable (:default-value "Gnus: %g [%A] %Z") nil [26079 26844])
            ("gnus-list-identifiers" variable nil nil [26846 27165])
            ("gnus-summary-mark-below" variable nil nil [27167 27395])
            ("gnus-widget-reversible-match" function (:arguments ("widget" "value")) nil [27397 27745])
            ("gnus-widget-reversible-to-internal" function (:arguments ("widget" "value")) nil [27747 28086])
            ("gnus-widget-reversible-to-external" function (:arguments ("widget" "value")) nil [28088 28434])
            ("define-widget" code nil nil [28436 28670])
            ("gnus-article-sort-functions" variable (:default-value (quote (gnus-article-sort-by-number))) nil [28672 30362])
            ("gnus-thread-sort-functions" variable (:default-value (quote (gnus-thread-sort-by-number))) nil [30364 32703])
            ("gnus-subthread-sort-functions" variable (:default-value (quote gnus-thread-sort-functions)) nil [32705 33735])
            ("gnus-thread-score-function" variable (:default-value (quote +)) nil [33737 34063])
            ("gnus-summary-expunge-below" variable nil nil [34065 34312])
            ("gnus-thread-expunge-below" variable nil nil [34314 34674])
            ("gnus-summary-mode-hook" variable nil nil [34676 34922])
            ("gnus-summary-menu-hook" variable nil nil [34924 35064])
            ("gnus-summary-exit-hook" variable nil nil [35066 35247])
            ("gnus-summary-prepare-hook" variable nil nil [35249 35463])
            ("gnus-summary-prepared-hook" variable nil nil [35465 35633])
            ("gnus-summary-generate-hook" variable nil nil [35635 35854])
            ("gnus-select-group-hook" variable nil nil [35856 36340])
            ("gnus-select-article-hook" variable nil nil [36342 36521])
            ("gnus-visual-mark-article-hook" variable (:default-value (list (quote gnus-highlight-selected-summary))) nil [36523 36818])
            ("gnus-parse-headers-hook" variable nil nil [36820 36942])
            ("gnus-exit-group-hook" variable nil nil [36944 37132])
            ("gnus-summary-update-hook" variable nil nil [37134 37449])
            ("gnus-mark-article-hook" variable (:default-value (quote (gnus-summary-mark-read-and-unread-as-read))) nil [37451 37735])
            ("gnus-group-no-more-groups-hook" variable nil nil [37737 37901])
            ("gnus-ps-print-hook" variable nil nil [37903 38029])
            ("gnus-summary-article-move-hook" variable nil nil [38031 38212])
            ("gnus-summary-article-delete-hook" variable nil nil [38214 38364])
            ("gnus-summary-article-expire-hook" variable nil nil [38366 38516])
            ("gnus-summary-display-arrow" variable (:default-value (display-graphic-p)) nil [38518 38701])
            ("gnus-summary-selected-face" variable (:default-value (quote gnus-summary-selected)) nil [38703 38882])
            ("gnus-tmp-downloaded" variable nil nil [38884 38916])
            ("gnus-summary-highlight" variable (:default-value (quote (((eq mark gnus-canceled-mark) . gnus-summary-cancelled) ((and uncached (> score default-high)) . gnus-summary-high-undownloaded) ((and uncached (< score default-low)) . gnus-summary-low-undownloaded) (uncached . gnus-summary-normal-undownloaded) ((and (> score default-high) (or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark))) . gnus-summary-high-ticked) ((and (< score default-low) (or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark))) . gnus-summary-low-ticked) ((or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark)) . gnus-summary-normal-ticked) ((and (> score default-high) (eq mark gnus-ancient-mark)) . gnus-summary-high-ancient) ((and (< score default-low) (eq mark gnus-ancient-mark)) . gnus-summary-low-ancient) ((eq mark gnus-ancient-mark) . gnus-summary-normal-ancient) ((and (> score default-high) (eq mark gnus-unread-mark)) . gnus-summary-high-unread) ((and (< score default-low) (eq mark gnus-unread-mark)) . gnus-summary-low-unread) ((eq mark gnus-unread-mark) . gnus-summary-normal-unread) ((> score default-high) . gnus-summary-high-read) ((< score default-low) . gnus-summary-low-read) (t . gnus-summary-normal-read)))) nil [38918 41026])
            ("put" code nil nil [41027 41080])
            ("gnus-alter-header-function" variable nil nil [41082 41372])
            ("gnus-decode-encoded-word-function" variable (:default-value (quote mail-decode-encoded-word-string)) nil [41374 41506])
            ("gnus-decode-encoded-address-function" variable (:default-value (quote mail-decode-encoded-address-string)) nil [41508 41649])
            ("gnus-extra-headers" variable (:default-value (quote (To Cc Keywords Gcc Newsgroups X-GM-LABELS))) nil [41651 41820])
            ("gnus-ignored-from-addresses" variable (:default-value (and user-mail-address (not (string= user-mail-address "")) (regexp-quote user-mail-address))) nil [41822 42279])
            ("gnus-ignored-from-addresses" function nil nil [42281 42470])
            ("gnus-summary-to-prefix" variable (:default-value "-> ") nil [42472 42667])
            ("gnus-summary-newsgroup-prefix" variable (:default-value "=> ") nil [42669 42889])
            ("gnus-newsgroup-ignored-charsets" variable (:default-value (quote (unknown-8bit x-unknown))) nil [42891 43172])
            ("gnus-newsgroup-maximum-articles" variable nil nil [43174 43598])
            ("gnus-define-group-parameter" code nil nil [43600 44400])
            ("gnus-group-highlight-words-alist" variable nil nil [44402 44885])
            ("gnus-summary-show-article-charset-alist" variable nil nil [44887 45230])
            ("gnus-preserve-marks" variable (:default-value t) nil [45232 45407])
            ("gnus-alter-articles-to-read-function" variable nil nil [45409 45595])
            ("gnus-orphan-score" variable nil nil [45597 45762])
            ("gnus-summary-save-parts-default-mime" variable (:default-value "image/.*") nil [45764 46115])
            ("gnus-read-all-available-headers" variable nil nil [46117 46439])
            ("gnus-summary-pipe-output-default-command" variable nil nil [46441 46889])
            ("gnus-summary-muttprint-program" variable (:default-value "muttprint") nil [46891 47158])
            ("gnus-article-loose-mime" variable (:default-value t) nil [47160 47560])
            ("gnus-article-emulate-mime" variable (:default-value t) nil [47562 47895])
            ("gnus-summary-display-cache" variable nil nil [47921 47960])
            ("gnus-article-mime-handles" variable nil nil [47961 47999])
            ("gnus-article-decoded-p" variable nil nil [48000 48035])
            ("gnus-article-charset" variable nil nil [48036 48069])
            ("gnus-article-ignored-charsets" variable nil nil [48070 48112])
            ("gnus-scores-exclude-files" variable nil nil [48113 48151])
            ("gnus-page-broken" variable nil nil [48152 48181])
            ("gnus-original-article" variable nil nil [48183 48217])
            ("gnus-article-internal-prepare-hook" variable nil nil [48218 48265])
            ("gnus-newsgroup-process-stack" variable nil nil [48266 48307])
            ("gnus-thread-indent-array" variable nil nil [48309 48346])
            ("gnus-thread-indent-array-level" variable (:default-value gnus-thread-indent-level) nil [48347 48411])
            ("gnus-sort-gathered-threads-function" variable (:default-value (quote gnus-thread-sort-by-number)) nil [48412 48578])
            ("gnus-summary-save-parts-type-history" variable nil nil [48580 48629])
            ("gnus-summary-save-parts-last-directory" variable (:default-value mm-default-directory) nil [48630 48698])
            ("gnus-summary-inhibit-highlight" variable nil nil [48737 48780])
            ("gnus-newsgroup-selected-overlay" variable nil nil [48781 48825])
            ("gnus-inhibit-limiting" variable nil nil [48826 48860])
            ("gnus-newsgroup-adaptive-score-file" variable nil nil [48861 48908])
            ("gnus-current-score-file" variable nil nil [48909 48945])
            ("gnus-current-move-group" variable nil nil [48946 48982])
            ("gnus-current-copy-group" variable nil nil [48983 49019])
            ("gnus-current-crosspost-group" variable nil nil [49020 49061])
            ("gnus-newsgroup-display" variable nil nil [49062 49097])
            ("gnus-newsgroup-dependencies" variable nil nil [49099 49139])
            ("gnus-newsgroup-adaptive" variable nil nil [49140 49176])
            ("gnus-summary-display-article-function" variable nil nil [49177 49227])
            ("gnus-summary-highlight-line-function" variable nil nil [49228 49332])
            ("gnus-summary-line-format-alist" variable (:default-value (\` ((78 (\, (macroexpand (quote (mail-header-number gnus-tmp-header)))) 100) (83 (\, (macroexpand (quote (mail-header-subject gnus-tmp-header)))) 115) (115 gnus-tmp-subject-or-nil 115) (110 gnus-tmp-name 115) (65 (car (cdr (funcall gnus-extract-address-components gnus-tmp-from))) 115) (97 (or (car (funcall gnus-extract-address-components gnus-tmp-from)) gnus-tmp-from) 115) (70 gnus-tmp-from 115) (120 (\, (macroexpand (quote (mail-header-xref gnus-tmp-header)))) 115) (68 (\, (macroexpand (quote (mail-header-date gnus-tmp-header)))) 115) (100 (gnus-dd-mmm (mail-header-date gnus-tmp-header)) 115) (111 (gnus-date-iso8601 (mail-header-date gnus-tmp-header)) 115) (77 (\, (macroexpand (quote (mail-header-id gnus-tmp-header)))) 115) (114 (\, (macroexpand (quote (mail-header-references gnus-tmp-header)))) 115) (99 (or (mail-header-chars gnus-tmp-header) 0) 100) (107 (gnus-summary-line-message-size gnus-tmp-header) 115) (76 gnus-tmp-lines 115) (90 (or (nnir-article-rsv (mail-header-number gnus-tmp-header)) 0) 100) (71 (or (nnir-article-group (mail-header-number gnus-tmp-header)) "") 115) (103 (or (gnus-group-short-name (nnir-article-group (mail-header-number gnus-tmp-header))) "") 115) (79 gnus-tmp-downloaded 99) (73 gnus-tmp-indentation 115) (84 (if (= gnus-tmp-level 0) "" (make-string (frame-width) 32)) 115) (82 gnus-tmp-replied 99) (91 gnus-tmp-opening-bracket 99) (93 gnus-tmp-closing-bracket 99) (62 (make-string gnus-tmp-level 32) 115) (60 (make-string (max 0 (- 20 gnus-tmp-level)) 32) 115) (105 gnus-tmp-score 100) (122 gnus-tmp-score-char 99) (86 (gnus-thread-total-score (and (boundp (quote thread)) (car thread))) 100) (85 gnus-tmp-unread 99) (102 (gnus-summary-from-or-to-or-newsgroups gnus-tmp-header gnus-tmp-from) 115) (116 (gnus-summary-number-of-articles-in-thread (and (boundp (quote thread)) (car thread)) gnus-tmp-level) 100) (101 (gnus-summary-number-of-articles-in-thread (and (boundp (quote thread)) (car thread)) gnus-tmp-level t) 99) (117 gnus-tmp-user-defined 115) (80 (gnus-pick-line-number) 100) (66 gnus-tmp-thread-tree-header-string 115) (user-date (gnus-user-date (\, (macroexpand (quote (mail-header-date gnus-tmp-header))))) 115)))) nil [49334 51796])
            ("gnus-summary-dummy-line-format-alist" variable (:default-value (\` ((83 gnus-tmp-subject 115) (78 gnus-tmp-number 100) (117 gnus-tmp-user-defined 115)))) nil [51798 51935])
            ("gnus-summary-mode-line-format-alist" variable (:default-value (\` ((71 gnus-tmp-group-name 115) (103 (gnus-short-group-name gnus-tmp-group-name) 115) (112 (gnus-group-real-name gnus-tmp-group-name) 115) (65 gnus-tmp-article-number 100) (90 gnus-tmp-unread-and-unselected 115) (86 gnus-version 115) (85 gnus-tmp-unread-and-unticked 100) (83 gnus-tmp-subject 115) (101 gnus-tmp-unselected 100) (117 gnus-tmp-user-defined 115) (100 (length gnus-newsgroup-dormant) 100) (116 (length gnus-newsgroup-marked) 100) (104 (length gnus-newsgroup-spam-marked) 100) (114 (length gnus-newsgroup-reads) 100) (122 (gnus-summary-article-score gnus-tmp-article-number) 100) (69 gnus-newsgroup-expunged-tally 100) (115 (gnus-current-score-file-nondirectory) 115)))) nil [51937 52700])
            ("gnus-article-mode-line-format-alist" variable (:default-value (nconc (quote ((119 (gnus-article-wash-status) 115) (109 (gnus-article-mime-part-status) 115))) gnus-summary-mode-line-format-alist)) nil [52767 52941])
            ("gnus-last-search-regexp" variable nil nil [52943 53026])
            ("gnus-last-shell-command" variable nil nil [53028 53102])
            ("gnus-newsgroup-agentized" variable nil nil [53104 53233])
            ("gnus-newsgroup-begin" variable nil nil [53234 53267])
            ("gnus-newsgroup-end" variable nil nil [53268 53299])
            ("gnus-newsgroup-last-rmail" variable nil nil [53300 53338])
            ("gnus-newsgroup-last-mail" variable nil nil [53339 53376])
            ("gnus-newsgroup-last-folder" variable nil nil [53377 53416])
            ("gnus-newsgroup-last-file" variable nil nil [53417 53454])
            ("gnus-newsgroup-last-directory" variable nil nil [53455 53497])
            ("gnus-newsgroup-auto-expire" variable nil nil [53498 53537])
            ("gnus-newsgroup-active" variable nil nil [53538 53572])
            ("gnus-newsgroup-highest" variable nil nil [53573 53608])
            ("gnus-newsgroup-data" variable nil nil [53610 53642])
            ("gnus-newsgroup-data-reverse" variable nil nil [53643 53683])
            ("gnus-newsgroup-limit" variable nil nil [53684 53717])
            ("gnus-newsgroup-limits" variable nil nil [53718 53752])
            ("gnus-summary-use-undownloaded-faces" variable nil nil [53753 53801])
            ("gnus-newsgroup-unreads" variable nil nil [53803 53899])
            ("gnus-newsgroup-unselected" variable nil nil [53901 54011])
            ("gnus-newsgroup-reads" variable nil nil [54013 54117])
            ("gnus-newsgroup-expunged-tally" variable nil nil [54119 54161])
            ("gnus-newsgroup-marked" variable nil nil [54163 54283])
            ("gnus-newsgroup-spam-marked" variable nil nil [54285 54386])
            ("gnus-newsgroup-killed" variable nil nil [54388 54497])
            ("gnus-newsgroup-cached" variable nil nil [54499 54595])
            ("gnus-newsgroup-saved" variable nil nil [54597 54673])
            ("gnus-newsgroup-kill-headers" variable nil nil [54675 54715])
            ("gnus-newsgroup-replied" variable nil nil [54717 54825])
            ("gnus-newsgroup-forwarded" variable nil nil [54827 54936])
            ("gnus-newsgroup-expirable" variable nil nil [54938 55049])
            ("gnus-newsgroup-processable" variable nil nil [55051 55159])
            ("gnus-newsgroup-downloadable" variable nil nil [55161 55277])
            ("gnus-newsgroup-unfetched" variable nil nil [55279 55488])
            ("gnus-newsgroup-undownloaded" variable nil nil [55490 55606])
            ("gnus-newsgroup-unsendable" variable nil nil [55608 55712])
            ("gnus-newsgroup-bookmarks" variable nil nil [55714 55818])
            ("gnus-newsgroup-dormant" variable nil nil [55820 55917])
            ("gnus-newsgroup-unseen" variable nil nil [55919 56007])
            ("gnus-newsgroup-seen" variable nil nil [56009 56094])
            ("gnus-newsgroup-unexist" variable nil nil [56096 56190])
            ("gnus-newsgroup-articles" variable nil nil [56192 56275])
            ("gnus-newsgroup-scored" variable nil nil [56277 56365])
            ("gnus-newsgroup-headers" variable nil nil [56367 56456])
            ("gnus-newsgroup-threads" variable nil nil [56458 56493])
            ("gnus-newsgroup-prepared" variable nil nil [56495 56589])
            ("gnus-newsgroup-ancient" variable nil nil [56591 56698])
            ("gnus-newsgroup-sparse" variable nil nil [56700 56734])
            ("gnus-current-article" variable nil nil [56736 56769])
            ("gnus-article-current" variable nil nil [56770 56803])
            ("gnus-current-headers" variable nil nil [56804 56837])
            ("gnus-have-all-headers" variable nil nil [56838 56872])
            ("gnus-last-article" variable nil nil [56873 56903])
            ("gnus-newsgroup-history" variable nil nil [56904 56939])
            ("gnus-newsgroup-charset" variable nil nil [56940 56975])
            ("gnus-newsgroup-ephemeral-charset" variable nil nil [56976 57021])
            ("gnus-newsgroup-ephemeral-ignored-charsets" variable nil nil [57022 57076])
            ("gnus-article-before-search" variable nil nil [57078 57117])
            ("gnus-summary-local-variables" variable (:default-value (quote (gnus-newsgroup-name gnus-newsgroup-unreads gnus-newsgroup-unselected gnus-newsgroup-marked gnus-newsgroup-spam-marked gnus-newsgroup-reads gnus-newsgroup-saved gnus-newsgroup-replied gnus-newsgroup-forwarded gnus-newsgroup-expirable gnus-newsgroup-killed gnus-newsgroup-unseen gnus-newsgroup-seen gnus-newsgroup-unexist gnus-newsgroup-cached gnus-newsgroup-downloadable gnus-newsgroup-undownloaded gnus-newsgroup-unsendable gnus-newsgroup-begin gnus-newsgroup-end gnus-newsgroup-last-rmail gnus-newsgroup-last-mail gnus-newsgroup-last-folder gnus-newsgroup-last-file gnus-newsgroup-last-directory gnus-newsgroup-auto-expire gnus-newsgroup-processable gnus-newsgroup-unfetched gnus-newsgroup-articles gnus-newsgroup-bookmarks gnus-newsgroup-dormant gnus-newsgroup-headers gnus-newsgroup-threads gnus-newsgroup-prepared gnus-summary-highlight-line-function gnus-current-article gnus-current-headers gnus-have-all-headers gnus-last-article gnus-article-internal-prepare-hook (gnus-summary-article-delete-hook . global) (gnus-summary-article-move-hook . global) gnus-newsgroup-dependencies gnus-newsgroup-selected-overlay gnus-newsgroup-scored gnus-newsgroup-kill-headers gnus-thread-expunge-below gnus-score-alist gnus-current-score-file (gnus-summary-expunge-below . global) (gnus-summary-mark-below . global) (gnus-orphan-score . global) gnus-newsgroup-active gnus-scores-exclude-files gnus-newsgroup-highest gnus-newsgroup-history gnus-newsgroup-ancient gnus-newsgroup-sparse gnus-newsgroup-process-stack (gnus-newsgroup-adaptive . gnus-use-adaptive-scoring) gnus-newsgroup-adaptive-score-file (gnus-reffed-article-number . -1) (gnus-newsgroup-expunged-tally . 0) gnus-cache-removable-articles gnus-newsgroup-data gnus-newsgroup-data-reverse gnus-newsgroup-limit gnus-newsgroup-limits gnus-newsgroup-charset gnus-newsgroup-display gnus-summary-use-undownloaded-faces))) nil [57119 59313])
            ("gnus-newsgroup-variables" variable nil nil [59315 60262])
            ("let" code nil nil [60404 60472])
            ("gnus-decode-encoded-word-methods" variable (:default-value (quote (mail-decode-encoded-word-string))) nil [60491 61000])
            ("gnus-decode-encoded-word-methods-cache" variable nil nil [61002 61053])
            ("gnus-multi-decode-encoded-word-string" function (:arguments ("string")) nil [61055 61815])
            ("gnus-simplify-whitespace" function (:arguments ("str")) nil [61845 62315])
            ("gnus-simplify-all-whitespace" function (:arguments ("str")) nil [62317 62487])
            ("gnus-simplify-subject-re" function (:arguments ("subject")) nil [62489 62681])
            ("gnus-simplify-subject" function (:arguments ("subject" "re-only")) nil [62683 63524])
            ("gnus-simplify-buffer-fuzzy-step" function (:arguments ("regexp" "newtext")) nil [63616 63790])
            ("gnus-simplify-buffer-fuzzy" function (:arguments ("regexp")) nil [63792 64948])
            ("gnus-simplify-subject-fuzzy" function (:arguments ("subject")) nil [64950 65491])
            ("gnus-simplify-subject-fully" function (:arguments ("subject")) nil [65493 66086])
            ("gnus-subject-equal" function (:arguments ("s1" "s2" "simple-first")) nil [66088 66443])
            ("gnus-summary-bubble-group" function nil nil [66445 66677])
            ("put" code nil nil [66712 66757])
            ("gnus-article-commands-menu" variable nil nil [66759 66794])
            ("gnus-define-keys" code nil nil [66820 71348])
            ("gnus-define-keys" code nil nil [71379 72225])
            ("gnus-define-keys" code nil nil [72227 72418])
            ("gnus-define-keys" code nil nil [72420 73551])
            ("gnus-define-keys" code nil nil [73553 74138])
            ("gnus-define-keys" code nil nil [74140 74826])
            ("gnus-define-keys" code nil nil [74828 75052])
            ("gnus-define-keys" code nil nil [75054 75539])
            ("gnus-define-keys" code nil nil [75541 76527])
            ("gnus-define-keys" code nil nil [76529 77606])
            ("gnus-define-keys" code nil nil [77608 77887])
            ("gnus-define-keys" code nil nil [77916 78340])
            ("gnus-define-keys" code nil nil [78342 78563])
            ("gnus-define-keys" code nil nil [78565 78759])
            ("gnus-define-keys" code nil nil [78761 79143])
            ("gnus-define-keys" code nil nil [79145 79397])
            ("gnus-define-keys" code nil nil [79399 79713])
            ("gnus-define-keys" code nil nil [79715 80129])
            ("gnus-define-keys" code nil nil [80131 80314])
            ("gnus-define-keys" code nil nil [80316 80923])
            ("gnus-define-keys" code nil nil [80925 81394])
            ("gnus-define-keys" code nil nil [81396 82007])
            ("gnus-define-keys" code nil nil [82009 82631])
            ("gnus-define-keys" code nil nil [82633 83086])
            ("gnus-define-keys" code nil nil [83088 83514])
            ("gnus-article-post-menu" variable nil nil [83516 83551])
            ("gnus-summary-menu-maxlen" variable
               (:constant-flag t
                :default-value 20)
                nil [83553 83591])
            ("gnus-summary-menu-split" function (:arguments ("menu")) nil [83593 84367])
            ("gnus-summary-make-menu-bar" function nil nil [84369 106226])
            ("gnus-summary-tool-bar-map" variable nil nil [106228 106266])
            ("gnus-summary-tool-bar-update" function (:arguments ("symbol" "value")) nil [106471 106865])
            ("gnus-summary-tool-bar" variable (:default-value (if (eq gmm-tool-bar-style (quote gnome)) (quote gnus-summary-tool-bar-gnome) (quote gnus-summary-tool-bar-retro))) nil [106867 107638])
            ("gnus-summary-tool-bar-gnome" variable (:default-value (quote ((gnus-summary-post-news "mail/compose" nil) (gnus-summary-insert-new-articles "mail/inbox" nil :visible (or (not gnus-agent) gnus-plugged)) (gnus-summary-reply-with-original "mail/reply") (gnus-summary-reply "mail/reply" nil :visible nil) (gnus-summary-followup-with-original "mail/reply-all") (gnus-summary-followup "mail/reply-all" nil :visible nil) (gnus-summary-mail-forward "mail/forward") (gnus-summary-save-article "mail/save") (gnus-summary-search-article-forward "search" nil :visible nil) (gnus-summary-print-article "print") (gnus-summary-tick-article-forward "flag-followup" nil :visible nil) (gnus-summary-save-newsrc "save" nil :visible nil) (gnus-summary-prev-article "left-arrow") (gnus-summary-next-article "right-arrow") (gnus-summary-next-page "next-page") (gnus-summary-mark-as-expirable "delete" nil :visible (gnus-check-backend-function (quote request-expire-articles) gnus-newsgroup-name)) (gnus-summary-mark-as-spam "mail/spam" t :visible (and (fboundp (quote spam-group-ham-contents-p)) (spam-group-ham-contents-p gnus-newsgroup-name)) :help "Mark as spam") (gnus-summary-mark-as-read-forward "mail/not-spam" nil :visible (and (fboundp (quote spam-group-spam-contents-p)) (spam-group-spam-contents-p gnus-newsgroup-name))) (gnus-summary-exit "exit") (gmm-customize-mode "preferences" t :help "Edit mode preferences") (gnus-info-find-node "help")))) nil [107640 109868])
            ("gnus-summary-tool-bar-retro" variable (:default-value (quote ((gnus-summary-prev-unread-article "gnus/prev-ur") (gnus-summary-next-unread-article "gnus/next-ur") (gnus-summary-post-news "gnus/post") (gnus-summary-followup-with-original "gnus/fuwo") (gnus-summary-followup "gnus/followup") (gnus-summary-reply-with-original "gnus/reply-wo") (gnus-summary-reply "gnus/reply") (gnus-summary-caesar-message "gnus/rot13") (gnus-uu-decode-uu "gnus/uu-decode") (gnus-summary-save-article-file "gnus/save-aif") (gnus-summary-save-article "gnus/save-art") (gnus-uu-post-news "gnus/uu-post") (gnus-summary-catchup "gnus/catchup") (gnus-summary-catchup-and-exit "gnus/cu-exit") (gnus-summary-exit "gnus/exit-summ") (gnus-summary-print-article "gnus/print" nil :visible nil) (gnus-summary-mark-as-expirable "gnus/close" nil :visible nil) (gnus-summary-save-newsrc "gnus/save" nil :visible nil) (gnus-summary-search-article-forward "gnus/search" nil :visible nil) (gnus-info-find-node "gnus/help" nil :visible nil)))) nil [109870 111496])
            ("gnus-summary-tool-bar-zap-list" variable (:default-value t) nil [111498 111875])
            ("image-load-path" variable nil nil [111877 111901])
            ("tool-bar-map" variable nil nil [111902 111923])
            ("gnus-summary-make-tool-bar" function (:arguments ("force")) nil [111925 112677])
            ("gnus-make-score-map" function (:arguments ("type")) nil [112679 114546])
            ("declare-function" code nil nil [114549 114611])
            ("bookmark-make-record-function" variable nil nil [114612 114650])
            ("bidi-paragraph-direction" variable nil nil [114653 114686])
            ("gnus-summary-mode" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [114688 116999])
            ("gnus-summary-make-local-variables" function nil nil [117001 117527])
            ("gnus-data-number" function (:arguments ("data")) nil [117557 117606])
            ("gnus-data-set-number" function (:arguments ("data" "number")) nil [117608 117679])
            ("gnus-data-mark" function (:arguments ("data")) nil [117681 117730])
            ("gnus-data-set-mark" function (:arguments ("data" "mark")) nil [117732 117808])
            ("gnus-data-pos" function (:arguments ("data")) nil [117810 117858])
            ("gnus-data-set-pos" function (:arguments ("data" "pos")) nil [117860 117933])
            ("gnus-data-header" function (:arguments ("data")) nil [117935 117986])
            ("gnus-data-set-header" function (:arguments ("data" "header")) nil [117988 118065])
            ("gnus-data-level" function (:arguments ("data")) nil [118067 118117])
            ("gnus-data-unread-p" function (:arguments ("data")) nil [118119 118193])
            ("gnus-data-read-p" function (:arguments ("data")) nil [118195 118268])
            ("gnus-data-pseudo-p" function (:arguments ("data")) nil [118270 118331])
            ("gnus-data-find" function (:arguments ("number")) nil [118333 118405])
            ("gnus-data-find-list" function (:arguments ("number" "data")) nil [118407 118555])
            ("gnus-data-make" function (:arguments ("number" "mark" "pos" "header" "level")) nil [118557 118657])
            ("gnus-data-enter" function (:arguments ("after-article" "number" "mark" "pos" "header" "level" "offset")) nil [118659 119036])
            ("gnus-data-enter-list" function (:arguments ("after-article" "list" "offset")) nil [119038 119859])
            ("gnus-data-remove" function (:arguments ("article" "offset")) nil [119861 120418])
            ("gnus-data-list" function (:arguments ("backward")) nil [120420 120611])
            ("gnus-data-update-list" function (:arguments ("data" "offset")) nil [120613 120859])
            ("gnus-summary-article-pseudo-p" function (:arguments ("article")) nil [120861 121027])
            ("gnus-summary-article-sparse-p" function (:arguments ("article")) nil [121029 121177])
            ("gnus-summary-article-ancient-p" function (:arguments ("article")) nil [121179 121329])
            ("gnus-article-children" function (:arguments ("number")) nil [121331 121701])
            ("gnus-summary-skip-intangible" function nil nil [121703 121927])
            ("gnus-summary-article-intangible-p" function nil nil [121929 122075])
            ("gnus-summary-article-number" function nil nil [122107 122417])
            ("gnus-summary-article-header" function (:arguments ("number")) nil [122419 122608])
            ("gnus-summary-thread-level" function (:arguments ("number")) nil [122610 122936])
            ("gnus-summary-article-mark" function (:arguments ("number")) nil [122938 123119])
            ("gnus-summary-article-pos" function (:arguments ("number")) nil [123121 123315])
            ("defalias" code nil nil [123317 123386])
            ("gnus-summary-article-subject" function (:arguments ("number")) nil [123387 123764])
            ("gnus-summary-article-score" function (:arguments ("number")) nil [123766 123983])
            ("gnus-summary-article-children" function (:arguments ("number")) nil [123985 124446])
            ("gnus-summary-article-parent" function (:arguments ("number")) nil [124448 125023])
            ("gnus-unread-mark-p" function (:arguments ("mark")) nil [125025 125127])
            ("gnus-read-mark-p" function (:arguments ("mark")) nil [125129 125446])
            ("gnus-article-mark" function (:arguments ("number")) nil [125448 126269])
            ("gnus-save-hidden-threads" function (:arguments ("forms")) nil [126298 126630])
            ("put" code nil nil [126631 126686])
            ("put" code nil nil [126687 126744])
            ("gnus-data-compute-positions" function nil nil [126746 127203])
            ("gnus-hidden-threads-configuration" function nil nil [127205 127577])
            ("gnus-restore-hidden-threads-configuration" function (:arguments ("config")) nil [127579 127851])
            ("gnus-mouse-pick-article" function (:arguments ("e")) nil [127901 128011])
            ("gnus-summary-set-display-table" function nil nil [128013 129049])
            ("gnus-summary-set-article-display-arrow" function (:arguments ("pos")) nil [129051 129604])
            ("gnus-summary-setup-buffer" function (:arguments ("group")) nil [129606 130693])
            ("gnus-set-global-variables" function nil nil [130695 132455])
            ("gnus-summary-article-unread-p" function (:arguments ("article")) nil [132457 132586])
            ("gnus-summary-first-article-p" function (:arguments ("article")) nil [132588 132832])
            ("gnus-summary-last-article-p" function (:arguments ("article")) nil [132834 133137])
            ("gnus-make-thread-indent-array" function (:arguments ("n")) nil [133139 133594])
            ("gnus-update-summary-mark-positions" function nil nil [133596 135573])
            ("gnus-summary-insert-dummy-line" function (:arguments ("gnus-tmp-subject" "gnus-tmp-number")) nil [135575 135883])
            ("gnus-summary-extract-address-component" function (:arguments ("from")) nil [135885 136009])
            ("gnus-summary-from-or-to-or-newsgroups" function (:arguments ("header" "gnus-tmp-from")) nil [136011 137398])
            ("gnus-summary-insert-line" function (:arguments ("gnus-tmp-header" "gnus-tmp-level" "gnus-tmp-current" "undownloaded" "gnus-tmp-unread" "gnus-tmp-replied" "gnus-tmp-expirable" "gnus-tmp-subject-or-nil" "gnus-tmp-dummy" "gnus-tmp-score" "gnus-tmp-process")) nil [137400 140345])
            ("gnus-summary-update-line" function (:arguments ("dont-update")) nil [140347 141729])
            ("gnus-tmp-new-adopts" variable nil nil [141731 141763])
            ("gnus-summary-number-of-articles-in-thread" function (:arguments ("thread" "level" "char")) nil [141765 142635])
            ("gnus-summary-line-message-size" function (:arguments ("head")) nil [142637 143123])
            ("gnus-user-date-format-alist" variable (:default-value (quote (((gnus-seconds-today) . "Today, %H:%M") ((+ 86400 (gnus-seconds-today)) . "Yesterday, %H:%M") (604800 . "%A %H:%M") ((gnus-seconds-month) . "%A %d") ((gnus-seconds-year) . "%B %d") (t . "%b %d %Y")))) nil [143125 144473])
            ("gnus-user-date" function (:arguments ("messy-date")) nil [144475 145376])
            ("gnus-summary-set-local-parameters" function (:arguments ("group")) nil [145378 146264])
            ("gnus-summary-read-group" function (:arguments ("group" "show-all" "no-article" "kill-buffer" "no-display" "backward" "select-articles")) nil [146266 147560])
            ("gnus-summary-read-group-1" function (:arguments ("group" "show-all" "no-article" "kill-buffer" "no-display" "select-articles")) nil [147562 153639])
            ("gnus-summary-auto-select-subject" function nil nil [153641 154267])
            ("gnus-summary-prepare" function (:user-visible-flag t) nil [154269 155098])
            ("gnus-general-simplify-subject" function (:arguments ("subject")) nil [155100 156010])
            ("gnus-summary-simplify-subject-query" function (:user-visible-flag t) nil [156012 156248])
            ("gnus-gather-threads-by-subject" function (:arguments ("threads")) nil [156250 157528])
            ("gnus-gather-threads-by-references" function (:arguments ("threads")) nil [157530 158933])
            ("gnus-sort-gathered-threads" function (:arguments ("threads")) nil [158935 159284])
            ("gnus-thread-loop-p" function (:arguments ("root" "thread")) nil [159286 160000])
            ("gnus-make-threads" function nil nil [160002 160753])
            ("gnus-dependencies-add-header" function (:arguments ("header" "dependencies" "force-new")) nil [160781 163800])
            ("gnus-extract-message-id-from-in-reply-to" function (:arguments ("string")) nil [163802 163965])
            ("gnus-build-sparse-threads" function nil nil [163967 165824])
            ("gnus-build-old-threads" function nil nil [165826 166592])
            ("gnus-remove-odd-characters" function (:arguments ("string")) nil [166594 166796])
            ("gnus-nov-parse-line" function (:arguments ("number" "dependencies" "force-new")) nil [166901 168446])
            ("gnus-build-get-header" function (:arguments ("id")) nil [168448 169700])
            ("gnus-build-all-threads" function nil nil [169702 170621])
            ("gnus-summary-update-article-line" function (:arguments ("article" "header")) nil [170623 172851])
            ("gnus-summary-update-article" function (:arguments ("article" "iheader")) nil [172853 173692])
            ("gnus-rebuild-thread" function (:arguments ("id" "line")) nil [173694 175730])
            ("gnus-number-to-header" function (:arguments ("number")) nil [175732 175994])
            ("gnus-parent-headers" function (:arguments ("in-headers" "generation")) nil [175996 176540])
            ("gnus-id-to-thread" function (:arguments ("id")) nil [176542 176666])
            ("gnus-id-to-article" function (:arguments ("id")) nil [176668 176863])
            ("gnus-id-to-header" function (:arguments ("id")) nil [176865 176964])
            ("gnus-article-displayed-root-p" function (:arguments ("article")) nil [176966 177462])
            ("gnus-root-id" function (:arguments ("id")) nil [177464 177727])
            ("gnus-articles-in-thread" function (:arguments ("thread")) nil [177729 177903])
            ("gnus-remove-thread" function (:arguments ("id" "dont-remove")) nil [177905 179892])
            ("gnus-remove-thread-1" function (:arguments ("thread")) nil [179894 180365])
            ("gnus-sort-threads-recursive" function (:arguments ("threads" "func")) nil [180367 180850])
            ("gnus-sort-subthreads-recursive" function (:arguments ("threads" "func")) nil [180852 181102])
            ("gnus-sort-threads-loop" function (:arguments ("threads" "func")) nil [181104 181648])
            ("gnus-sort-threads" function (:arguments ("threads")) nil [181650 182410])
            ("gnus-sort-articles" function (:arguments ("articles")) nil [182412 182726])
            ("gnus-thread-header" function (:arguments ("thread")) nil [182790 183207])
            ("gnus-article-sort-by-number" function (:arguments ("h1" "h2")) nil [183209 183351])
            ("gnus-thread-sort-by-number" function (:arguments ("h1" "h2")) nil [183353 183519])
            ("gnus-article-sort-by-random" function (:arguments ("h1" "h2")) nil [183521 183616])
            ("gnus-thread-sort-by-random" function (:arguments ("h1" "h2")) nil [183618 183770])
            ("gnus-article-sort-by-lines" function (:arguments ("h1" "h2")) nil [183772 183917])
            ("gnus-thread-sort-by-lines" function (:arguments ("h1" "h2")) nil [183919 184089])
            ("gnus-article-sort-by-chars" function (:arguments ("h1" "h2")) nil [184091 184228])
            ("gnus-thread-sort-by-chars" function (:arguments ("h1" "h2")) nil [184230 184400])
            ("gnus-article-sort-by-marks" function (:arguments ("h1" "h2")) nil [184402 184581])
            ("gnus-thread-sort-by-marks" function (:arguments ("h1" "h2")) nil [184583 184753])
            ("gnus-article-sort-by-author" function (:arguments ("h1" "h2")) nil [184755 185126])
            ("gnus-thread-sort-by-author" function (:arguments ("h1" "h2")) nil [185128 185287])
            ("gnus-article-sort-by-recipient" function (:arguments ("h1" "h2")) nil [185289 185707])
            ("gnus-thread-sort-by-recipient" function (:arguments ("h1" "h2")) nil [185709 185876])
            ("gnus-article-sort-by-subject" function (:arguments ("h1" "h2")) nil [185878 186109])
            ("gnus-thread-sort-by-subject" function (:arguments ("h1" "h2")) nil [186111 186272])
            ("gnus-article-sort-by-date" function (:arguments ("h1" "h2")) nil [186274 186466])
            ("gnus-thread-sort-by-date" function (:arguments ("h1" "h2")) nil [186468 186628])
            ("gnus-article-sort-by-score" function (:arguments ("h1" "h2")) nil [186630 186990])
            ("gnus-thread-sort-by-score" function (:arguments ("h1" "h2")) nil [186992 187155])
            ("gnus-thread-sort-by-total-score" function (:arguments ("h1" "h2")) nil [187157 187386])
            ("gnus-thread-total-score" function (:arguments ("thread")) nil [187388 187754])
            ("gnus-article-sort-by-most-recent-number" function (:arguments ("h1" "h2")) nil [187756 187878])
            ("gnus-thread-sort-by-most-recent-number" function (:arguments ("h1" "h2")) nil [187880 188094])
            ("gnus-thread-highest-number" function (:arguments ("thread")) nil [188096 188299])
            ("gnus-article-sort-by-most-recent-date" function (:arguments ("h1" "h2")) nil [188301 188419])
            ("gnus-thread-sort-by-most-recent-date" function (:arguments ("h1" "h2")) nil [188421 188625])
            ("gnus-thread-latest-date" function (:arguments ("thread")) nil [188900 189139])
            ("gnus-thread-total-score-1" function (:arguments ("root")) nil [189141 189637])
            ("gnus-tmp-prev-subject" variable nil nil [189688 189722])
            ("gnus-tmp-false-parent" variable nil nil [189723 189757])
            ("gnus-tmp-root-expunged" variable nil nil [189758 189793])
            ("gnus-tmp-dummy-line" variable nil nil [189794 189826])
            ("gnus-extra-header" function (:arguments ("type" "header")) nil [189828 189996])
            ("gnus-tmp-thread-tree-header-string" variable nil nil [189998 190044])
            ("gnus-sum-thread-tree-root" variable (:default-value "> ") nil [190046 190257])
            ("gnus-sum-thread-tree-false-root" variable (:default-value "> ") nil [190259 190480])
            ("gnus-sum-thread-tree-single-indent" variable nil nil [190482 190710])
            ("gnus-sum-thread-tree-vertical" variable (:default-value "| ") nil [190712 190866])
            ("gnus-sum-thread-tree-indent" variable (:default-value "  ") nil [190868 191006])
            ("gnus-sum-thread-tree-leaf-with-other" variable (:default-value "+-> ") nil [191008 191168])
            ("gnus-sum-thread-tree-single-leaf" variable (:default-value "\\-> ") nil [191170 191330])
            ("gnus-summary-display-while-building" variable nil nil [191332 191711])
            ("gnus-summary-prepare-threads" function (:arguments ("threads")) nil [191713 202449])
            ("gnus-summary-prepare-unthreaded" function (:arguments ("headers")) nil [202451 203710])
            ("declare-function" code nil nil [203712 203781])
            ("gnus-group-get-list-identifiers" function (:arguments ("group")) nil [203783 204051])
            ("gnus-summary-remove-list-identifiers" function nil nil [204053 204886])
            ("gnus-fetch-headers" function (:arguments ("articles" "limit" "force-new" "dependencies")) nil [204888 205751])
            ("gnus-select-newsgroup" function (:arguments ("group" "read-all" "select-articles")) nil [205753 212060])
            ("gnus-compute-unseen-list" function nil nil [212062 212357])
            ("declare-function" code nil nil [212359 212421])
            ("gnus-summary-display-make-predicate" function (:arguments ("display")) nil [212423 213048])
            ("gnus-number" variable nil nil [213104 213124])
            ("gnus-article-marked-p" function (:arguments ("type" "article")) nil [213125 214437])
            ("gnus-articles-to-read" function (:arguments ("group" "read-all")) nil [214439 218290])
            ("gnus-killed-articles" function (:arguments ("killed" "articles")) nil [218292 218512])
            ("gnus-article-mark-to-type" function (:arguments ("mark")) nil [218514 218653])
            ("gnus-article-unpropagatable-p" function (:arguments ("mark")) nil [218655 218808])
            ("gnus-adjust-marked-articles" function (:arguments ("info")) nil [218810 221691])
            ("gnus-update-missing-marks" function (:arguments ("missing")) nil [221693 222251])
            ("gnus-update-marks" function nil nil [222253 225106])
            ("gnus-set-mode-line" function (:arguments ("where")) nil [225108 227591])
            ("gnus-create-xref-hashtb" function (:arguments ("from-newsgroup" "headers" "unreads")) nil [227593 228743])
            ("gnus-mark-xrefs-as-read" function (:arguments ("from-newsgroup" "headers" "unreads")) nil [228745 230147])
            ("gnus-compute-read-articles" function (:arguments ("group" "articles")) nil [230149 231535])
            ("gnus-group-make-articles-read" function (:arguments ("group" "articles")) nil [231537 233452])
            ("gnus-get-newsgroup-headers" function (:arguments ("dependencies" "force-new")) nil [233454 238334])
            ("gnus-get-newsgroup-headers-xover" function (:arguments ("sequence" "force-new" "dependencies" "group" "also-fetch-heads")) nil [238398 240713])
            ("gnus-article-get-xrefs" function nil nil [240715 241524])
            ("gnus-summary-insert-subject" function (:arguments ("id" "old-header" "use-old-header")) nil [241526 243945])
            ("gnus-summary-work-articles" function (:arguments ("n")) nil [243989 245460])
            ("gnus-summary-iterate" function (:arguments ("arg" "forms")) nil [245462 245923])
            ("put" code nil nil [245925 245976])
            ("put" code nil nil [245977 246035])
            ("gnus-summary-save-process-mark" function (:user-visible-flag t) nil [246037 246242])
            ("gnus-summary-kill-process-mark" function (:user-visible-flag t) nil [246244 246453])
            ("gnus-summary-yank-process-mark" function (:user-visible-flag t) nil [246455 246718])
            ("gnus-summary-process-mark-set" function (:arguments ("set")) nil [246720 246902])
            ("gnus-summary-search-group" function (:arguments ("backward" "use-level")) nil [246929 247270])
            ("gnus-summary-best-group" function (:arguments ("exclude-group")) nil [247272 247530])
            ("gnus-summary-find-next" function (:arguments ("unread" "article" "backward")) nil [247532 248787])
            ("gnus-summary-find-prev" function (:arguments ("unread" "article")) nil [248789 249966])
            ("gnus-summary-find-subject" function (:arguments ("subject" "unread" "backward" "article")) nil [249968 250783])
            ("gnus-summary-search-forward" function (:arguments ("unread" "subject" "backward")) nil [250785 251169])
            ("gnus-recenter" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [251171 251455])
            ("put" code nil nil [251457 251495])
            ("gnus-forward-line-ignore-invisible" function (:arguments ("n")) nil [251497 252229])
            ("gnus-summary-recenter" function (:user-visible-flag t) nil [252231 254437])
            ("gnus-summary-jump-to-group" function (:arguments ("newsgroup")) nil [254439 255063])
            ("gnus-list-of-unread-articles" function (:arguments ("group")) nil [255230 256726])
            ("gnus-list-of-read-articles" function (:arguments ("group")) nil [256728 257374])
            ("gnus-sequence-of-unread-articles" function (:arguments ("group")) nil [257545 258976])
            ("gnus-summary-select-article-buffer" function (:user-visible-flag t) nil [259007 259609])
            ("gnus-summary-universal-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [259611 260276])
            ("define-obsolete-function-alias" code nil nil [260278 260376])
            ("gnus-summary-find-for-reselect" function nil nil [260378 261237])
            ("gnus-summary-reselect-current-group" function
               (:user-visible-flag t
                :arguments ("all" "rescan"))
                nil [261239 262038])
            ("gnus-summary-rescan-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [262040 262386])
            ("gnus-summary-update-info" function (:arguments ("non-destructive")) nil [262388 263973])
            ("gnus-summary-save-newsrc" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [263975 264311])
            ("declare-function" code nil nil [264313 264386])
            ("declare-function" code nil nil [264387 264448])
            ("gnus-summary-exit" function
               (:user-visible-flag t
                :arguments ("temporary" "leave-hidden"))
                nil [264450 268346])
            ("declare-function" code nil nil [268348 268400])
            ("defalias" code nil nil [268402 268460])
            ("gnus-summary-exit-no-update" function
               (:user-visible-flag t
                :arguments ("no-questions"))
                nil [268461 270436])
            ("gnus-handle-ephemeral-exit" function (:arguments ("quit-config")) nil [270438 272512])
            ("gnus-dead-summary-mode-map" variable (:default-value (let ((map (make-keymap))) (suppress-keymap map) (substitute-key-definition (quote undefined) (quote gnus-summary-wake-up-the-dead) map) (dolist (key (quote ("" "" "" [delete]))) (define-key map key (quote gnus-summary-wake-up-the-dead))) (dolist (key (quote ("q" "Q"))) (define-key map key (quote bury-buffer))) map)) nil [272535 272890])
            ("define-minor-mode" code nil nil [272892 273114])
            ("gnus-deaden-summary" function nil nil [273116 273782])
            ("gnus-kill-or-deaden-summary" function (:arguments ("buffer")) nil [273784 274430])
            ("gnus-summary-wake-up-the-dead" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [274432 274818])
            ("gnus-summary-describe-group" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [274873 275038])
            ("gnus-summary-describe-briefly" function (:user-visible-flag t) nil [275040 275451])
            ("gnus-summary-next-group" function
               (:user-visible-flag t
                :arguments ("no-article" "target-group" "backward"))
                nil [275509 277415])
            ("gnus-summary-prev-group" function
               (:user-visible-flag t
                :arguments ("no-article"))
                nil [277417 277682])
            ("gnus-summary-first-subject" function
               (:user-visible-flag t
                :arguments ("unread" "undownloaded" "unseen"))
                nil [277718 280041])
            ("gnus-summary-next-subject" function
               (:user-visible-flag t
                :arguments ("n" "unread" "dont-display"))
                nil [280043 280770])
            ("gnus-summary-next-unread-subject" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [280772 280911])
            ("gnus-summary-prev-subject" function
               (:user-visible-flag t
                :arguments ("n" "unread"))
                nil [280913 281141])
            ("gnus-summary-prev-unread-subject" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [281143 281290])
            ("gnus-summary-goto-subjects" function (:arguments ("articles")) nil [281292 281592])
            ("gnus-summary-goto-subject" function
               (:user-visible-flag t
                :arguments ("article" "force" "silent"))
                nil [281594 282420])
            ("gnus-summary-expand-window" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [282481 282776])
            ("gnus-summary-display-article" function (:arguments ("article" "all-header")) nil [282778 283964])
            ("gnus-summary-select-article" function (:arguments ("all-headers" "force" "pseudo" "article")) nil [283966 285750])
            ("gnus-summary-force-verify-and-decrypt" function (:user-visible-flag t) nil [285752 286159])
            ("gnus-summary-next-article" function
               (:user-visible-flag t
                :arguments ("unread" "subject" "backward" "push"))
                nil [286161 288887])
            ("gnus-summary-walk-group-buffer" function (:arguments ("from-group" "cmd" "unread" "backward" "start")) nil [288889 290469])
            ("gnus-summary-next-unread-article" function (:user-visible-flag t) nil [290471 290786])
            ("gnus-summary-prev-article" function
               (:user-visible-flag t
                :arguments ("unread" "subject"))
                nil [290788 291019])
            ("gnus-summary-prev-unread-article" function (:user-visible-flag t) nil [291021 291338])
            ("declare-function" code nil nil [291340 291399])
            ("gnus-summary-next-page" function
               (:user-visible-flag t
                :arguments ("lines" "circular" "stop"))
                nil [291401 293378])
            ("gnus-summary-prev-page" function
               (:user-visible-flag t
                :arguments ("lines" "move"))
                nil [293380 294540])
            ("gnus-summary-prev-page-or-article" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [294542 294812])
            ("gnus-summary-scroll-up" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [294814 295484])
            ("gnus-summary-scroll-down" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [295486 295781])
            ("gnus-summary-next-same-subject" function (:user-visible-flag t) nil [295783 295972])
            ("gnus-summary-prev-same-subject" function (:user-visible-flag t) nil [295974 296167])
            ("gnus-summary-next-unread-same-subject" function (:user-visible-flag t) nil [296169 296370])
            ("gnus-summary-prev-unread-same-subject" function (:user-visible-flag t) nil [296372 296577])
            ("gnus-summary-first-unread-article" function (:user-visible-flag t) nil [296579 296930])
            ("gnus-summary-first-unread-subject" function (:user-visible-flag t) nil [296932 297253])
            ("gnus-summary-first-unseen-subject" function (:user-visible-flag t) nil [297255 297592])
            ("gnus-summary-first-unseen-or-unread-subject" function (:user-visible-flag t) nil [297594 298102])
            ("gnus-summary-first-article" function (:user-visible-flag t) nil [298104 298430])
            ("gnus-summary-best-unread-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [298432 298871])
            ("gnus-summary-best-unread-subject" function (:user-visible-flag t) nil [298873 299413])
            ("gnus-summary-better-unread-subject" function (:user-visible-flag t) nil [299415 299928])
            ("gnus-summary-last-subject" function nil nil [299930 300147])
            ("gnus-summary-goto-article" function
               (:user-visible-flag t
                :arguments ("article" "all-headers" "force"))
                nil [300149 301045])
            ("gnus-summary-goto-last-article" function (:user-visible-flag t) nil [301047 301271])
            ("gnus-summary-pop-article" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [301273 301661])
            ("gnus-summary-limit-to-articles" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [301731 302080])
            ("gnus-summary-pop-limit" function
               (:user-visible-flag t
                :arguments ("total"))
                nil [302082 302492])
            ("gnus-summary-limit-to-subject" function
               (:user-visible-flag t
                :arguments ("subject" "header" "not-matching"))
                nil [302494 303230])
            ("gnus-summary-limit-to-author" function
               (:user-visible-flag t
                :arguments ("from" "not-matching"))
                nil [303232 303915])
            ("gnus-summary-limit-to-recipient" function
               (:user-visible-flag t
                :arguments ("recipient" "not-matching"))
                nil [303917 305300])
            ("gnus-summary-limit-to-address" function
               (:user-visible-flag t
                :arguments ("address" "not-matching"))
                nil [305302 306989])
            ("gnus-summary-limit-strange-charsets-predicate" function (:arguments ("header")) nil [306991 307353])
            ("gnus-summary-limit-to-predicate" function (:arguments ("predicate")) nil [307355 307752])
            ("gnus-summary-limit-to-age" function
               (:user-visible-flag t
                :arguments ("age" "younger-p"))
                nil [307754 309158])
            ("gnus-summary-limit-to-extra" function
               (:user-visible-flag t
                :arguments ("header" "regexp" "not-matching"))
                nil [309160 310025])
            ("gnus-summary-limit-to-display-predicate" function (:user-visible-flag t) nil [310027 310471])
            ("gnus-summary-limit-to-unread" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [310473 311133])
            ("gnus-summary-limit-to-headers" function
               (:user-visible-flag t
                :arguments ("match" "reverse"))
                nil [311135 311432])
            ("declare-function" code nil nil [311434 311484])
            ("gnus-summary-limit-to-bodies" function
               (:user-visible-flag t
                :arguments ("match" "reverse" "headersp"))
                nil [311486 312650])
            ("gnus-summary-limit-to-singletons" function
               (:user-visible-flag t
                :arguments ("threadsp"))
                nil [312652 313486])
            ("gnus-summary-limit-to-replied" function
               (:user-visible-flag t
                :arguments ("unreplied"))
                nil [313488 313874])
            ("gnus-summary-limit-exclude-marks" function
               (:user-visible-flag t
                :arguments ("marks" "reverse"))
                nil [313876 314248])
            ("gnus-summary-limit-to-marks" function
               (:user-visible-flag t
                :arguments ("marks" "reverse"))
                nil [314250 315038])
            ("gnus-summary-limit-to-score" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [315040 315501])
            ("gnus-summary-limit-to-unseen" function (:user-visible-flag t) nil [315503 315681])
            ("gnus-summary-limit-include-thread" function
               (:user-visible-flag t
                :arguments ("id" "thread-only"))
                nil [315683 317073])
            ("gnus-summary-limit-include-matching-articles" function
               (:user-visible-flag t
                :arguments ("header" "regexp"))
                nil [317075 317478])
            ("gnus-summary-insert-dormant-articles" function (:user-visible-flag t) nil [317480 317816])
            ("gnus-summary-insert-ticked-articles" function (:user-visible-flag t) nil [317818 318141])
            ("gnus-summary-limit-include-dormant" function (:user-visible-flag t) nil [318143 318580])
            ("gnus-summary-include-articles" function (:arguments ("articles")) nil [318582 319099])
            ("gnus-summary-limit-exclude-dormant" function (:user-visible-flag t) nil [319101 319307])
            ("gnus-summary-limit-exclude-childless-dormant" function (:user-visible-flag t) nil [319309 320043])
            ("gnus-summary-limit-mark-excluded-as-read" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [320045 321016])
            ("gnus-summary-limit" function (:arguments ("articles" "pop")) nil [321018 322531])
            ("gnus-invisible-cut-children" function (:arguments ("threads")) nil [322533 322742])
            ("gnus-cut-thread" function (:arguments ("thread")) nil [322744 323804])
            ("gnus-cut-threads" function (:arguments ("threads")) nil [323806 324278])
            ("gnus-summary-initial-limit" function (:arguments ("show-if-empty")) nil [324280 325837])
            ("gnus-summary-limit-children" function (:arguments ("thread")) nil [325839 328499])
            ("gnus-expunge-thread" function (:arguments ("thread")) nil [328501 329037])
            ("gnus-summary-refer-parent-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [329077 330629])
            ("gnus-summary-refer-references" function (:user-visible-flag t) nil [330631 331326])
            ("gnus-delete-duplicate-headers" function (:arguments ("headers")) nil [331328 331790])
            ("gnus-summary-refer-thread" function
               (:user-visible-flag t
                :arguments ("limit"))
                nil [331792 334438])
            ("gnus-summary-open-group-with-article" function
               (:user-visible-flag t
                :arguments ("message-id"))
                nil [334440 335762])
            ("gnus-summary-refer-article" function
               (:user-visible-flag t
                :arguments ("message-id"))
                nil [335764 337495])
            ("gnus-refer-article-methods" function nil nil [337497 338375])
            ("gnus-summary-edit-parameters" function (:user-visible-flag t) nil [338377 338538])
            ("gnus-summary-customize-parameters" function (:user-visible-flag t) nil [338540 338702])
            ("gnus-summary-enter-digest-group" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [338704 341941])
            ("gnus-summary-read-document" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [341943 343816])
            ("gnus-summary-widget-forward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [343818 344141])
            ("gnus-summary-widget-backward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [344143 344531])
            ("gnus-summary-isearch-article" function
               (:user-visible-flag t
                :arguments ("regexp-p"))
                nil [344533 344913])
            ("gnus-summary-repeat-search-article-forward" function (:user-visible-flag t) nil [344915 345157])
            ("gnus-summary-repeat-search-article-backward" function (:user-visible-flag t) nil [345159 345405])
            ("gnus-summary-search-article-forward" function
               (:user-visible-flag t
                :arguments ("regexp" "backward"))
                nil [345407 346276])
            ("gnus-summary-search-article-backward" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [346278 346629])
            ("gnus-summary-search-article" function (:arguments ("regexp" "backward")) nil [346631 349122])
            ("gnus-find-matching-articles" function (:arguments ("header" "regexp")) nil [349124 349691])
            ("gnus-summary-find-matching" function (:arguments ("header" "regexp" "backward" "unread" "not-case-fold" "not-matching")) nil [349693 351230])
            ("gnus-summary-execute-command" function
               (:user-visible-flag t
                :arguments ("header" "regexp" "command" "backward"))
                nil [351232 352706])
            ("gnus-summary-beginning-of-article" function (:user-visible-flag t) nil [352708 353029])
            ("gnus-summary-end-of-article" function (:user-visible-flag t) nil [353031 353356])
            ("gnus-summary-print-truncate-and-quote" function (:arguments ("string" "len")) nil [353358 353616])
            ("gnus-summary-print-article" function
               (:user-visible-flag t
                :arguments ("filename" "n"))
                nil [353618 354703])
            ("gnus-print-buffer" function nil nil [354705 355267])
            ("declare-function" code nil nil [355269 355336])
            ("gnus-summary-show-complete-article" function (:user-visible-flag t) nil [355338 355955])
            ("gnus-summary-show-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [355957 359137])
            ("gnus-summary-show-raw-article" function (:user-visible-flag t) nil [359139 359303])
            ("gnus-summary-verbose-headers" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [359305 359708])
            ("declare-function" code nil nil [359710 359765])
            ("declare-function" code nil nil [359766 359829])
            ("declare-function" code nil nil [359830 359888])
            ("declare-function" code nil nil [359889 359988])
            ("gnus-summary-toggle-header" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [359990 361755])
            ("gnus-summary-show-all-headers" function (:user-visible-flag t) nil [361757 361881])
            ("gnus-summary-caesar-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [361883 362573])
            ("gnus-summary-idna-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [362575 363376])
            ("gnus-summary-morse-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [363378 364036])
            ("gnus-summary-stop-page-breaking" function (:user-visible-flag t) nil [364038 364438])
            ("gnus-summary-move-article" function
               (:user-visible-flag t
                :arguments ("n" "to-newsgroup" "select-method" "action"))
                nil [364440 376101])
            ("gnus-summary-push-marks-to-backend" function (:arguments ("article")) nil [376103 376661])
            ("gnus-summary-copy-article" function
               (:user-visible-flag t
                :arguments ("n" "to-newsgroup" "select-method"))
                nil [376663 377186])
            ("gnus-summary-crosspost-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [377188 377366])
            ("gnus-summary-respool-default-method" variable nil nil [377368 377559])
            ("gnus-summary-respool-article" function
               (:user-visible-flag t
                :arguments ("n" "method"))
                nil [377561 379298])
            ("gnus-summary-import-article" function
               (:user-visible-flag t
                :arguments ("file" "edit"))
                nil [379300 380994])
            ("gnus-summary-create-article" function (:user-visible-flag t) nil [380996 381956])
            ("gnus-summary-article-posted-p" function (:user-visible-flag t) nil [381958 382514])
            ("gnus-summary-expire-articles" function
               (:user-visible-flag t
                :arguments ("now"))
                nil [382516 385100])
            ("gnus-summary-expire-articles-now" function (:user-visible-flag t) nil [385102 385501])
            ("gnus-summary-delete-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [385561 387576])
            ("gnus-summary-edit-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [387578 390565])
            ("defalias" code nil nil [390567 390637])
            ("gnus-summary-edit-article-done" function
               (:user-visible-flag t
                :arguments ("references" "read-only" "buffer" "no-highlight"))
                nil [390639 394035])
            ("gnus-summary-edit-wash" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [394037 394366])
            ("nnimap-split-fancy" variable nil nil [394384 394411])
            ("nnimap-split-methods" variable nil nil [394412 394441])
            ("gnus-summary-respool-query" function
               (:user-visible-flag t
                :arguments ("silent" "trace"))
                nil [394443 395426])
            ("gnus-summary-respool-trace" function (:user-visible-flag t) nil [395428 395649])
            ("gnus-summary-kill-same-subject-and-select" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [395681 396427])
            ("gnus-summary-kill-same-subject" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [396429 397046])
            ("gnus-summary-mark-same-subject" function (:arguments ("subject" "unmark")) nil [397048 398124])
            ("gnus-summary-mark-as-processable" function
               (:user-visible-flag t
                :arguments ("n" "unmark"))
                nil [398126 399054])
            ("gnus-summary-unmark-as-processable" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [399056 399342])
            ("gnus-summary-unmark-all-processable" function (:user-visible-flag t) nil [399344 399617])
            ("gnus-summary-add-mark" function (:arguments ("article" "type")) nil [399619 400196])
            ("gnus-summary-mark-as-expirable" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [400198 400475])
            ("gnus-summary-mark-as-spam" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [400477 400739])
            ("gnus-summary-mark-article-as-replied" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [400741 401294])
            ("gnus-summary-mark-article-as-forwarded" function (:arguments ("article")) nil [401296 401728])
            ("gnus-summary-set-bookmark" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [401730 402555])
            ("gnus-summary-remove-bookmark" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [402557 402953])
            ("gnus-summary-mark-as-dormant" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [403006 403277])
            ("gnus-summary-set-process-mark" function (:arguments ("article")) nil [403279 403657])
            ("gnus-summary-remove-process-mark" function (:arguments ("articles")) nil [403659 404074])
            ("gnus-summary-set-saved-mark" function (:arguments ("article")) nil [404076 404318])
            ("gnus-summary-mark-forward" function
               (:user-visible-flag t
                :arguments ("n" "mark" "no-expire"))
                nil [404320 405395])
            ("gnus-summary-mark-article-as-read" function (:arguments ("mark")) nil [405397 406564])
            ("gnus-summary-mark-article-as-unread" function (:arguments ("mark")) nil [406566 408454])
            ("gnus-summary-mark-article" function (:arguments ("article" "mark" "no-expire")) nil [408456 410309])
            ("gnus-summary-update-secondary-mark" function (:arguments ("article")) nil [410311 411003])
            ("gnus-summary-update-download-mark" function (:arguments ("article")) nil [411005 411354])
            ("gnus-summary-update-mark" function (:arguments ("mark" "type")) nil [411356 412206])
            ("gnus-mark-article-as-read" function (:arguments ("article" "mark")) nil [412208 413114])
            ("gnus-mark-article-as-unread" function (:arguments ("article" "mark")) nil [413116 414426])
            ("gnus-summary-tick-article-forward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [414428 414686])
            ("gnus-summary-tick-article-backward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [414688 414910])
            ("gnus-summary-tick-article" function
               (:user-visible-flag t
                :arguments ("article" "clear-mark"))
                nil [414912 415265])
            ("gnus-summary-mark-as-read-forward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [415267 415567])
            ("gnus-summary-mark-as-read-backward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [415569 415840])
            ("gnus-summary-mark-as-read" function (:arguments ("article" "mark")) nil [415842 416098])
            ("gnus-summary-clear-mark-forward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [416100 416365])
            ("gnus-summary-clear-mark-backward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [416367 416596])
            ("gnus-summary-mark-unread-as-read" function nil nil [416598 416822])
            ("gnus-summary-mark-read-and-unread-as-read" function (:arguments ("new-mark")) nil [416824 417154])
            ("gnus-summary-mark-current-read-and-unread-as-read" function (:arguments ("new-mark")) nil [417156 417503])
            ("gnus-summary-mark-unread-as-ticked" function nil nil [417505 417733])
            ("gnus-summary-mark-region-as-read" function
               (:user-visible-flag t
                :arguments ("point" "mark" "all"))
                nil [417735 418315])
            ("gnus-summary-mark-below" function
               (:user-visible-flag t
                :arguments ("score" "mark"))
                nil [418317 418755])
            ("gnus-summary-kill-below" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [418757 418927])
            ("gnus-summary-clear-above" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [418929 419108])
            ("gnus-summary-tick-above" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [419110 419276])
            ("gnus-summary-mark-above" function
               (:user-visible-flag t
                :arguments ("score" "mark"))
                nil [419278 419721])
            ("defalias" code nil nil [419774 419853])
            ("gnus-summary-limit-include-expunged" function
               (:user-visible-flag t
                :arguments ("no-error"))
                nil [419854 420754])
            ("gnus-summary-catchup" function
               (:user-visible-flag t
                :arguments ("all" "quietly" "to-here" "not-mark" "reverse"))
                nil [420756 422893])
            ("gnus-summary-catchup-to-here" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [422895 423329])
            ("gnus-summary-catchup-from-here" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [423331 423788])
            ("gnus-summary-catchup-all" function
               (:user-visible-flag t
                :arguments ("quietly"))
                nil [423790 424069])
            ("gnus-summary-catchup-and-exit" function
               (:user-visible-flag t
                :arguments ("all" "quietly"))
                nil [424071 424591])
            ("gnus-summary-catchup-all-and-exit" function
               (:user-visible-flag t
                :arguments ("quietly"))
                nil [424593 424914])
            ("gnus-summary-catchup-and-goto-next-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [424916 425222])
            ("gnus-summary-catchup-and-goto-prev-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [425224 425544])
            ("gnus-with-article" function (:arguments ("article" "forms")) nil [425572 426549])
            ("put" code nil nil [426551 426599])
            ("put" code nil nil [426600 426655])
            ("gnus-summary-articles-in-thread" function (:arguments ("article")) nil [426684 428113])
            ("gnus-summary-rethread-current" function (:user-visible-flag t) nil [428115 428560])
            ("gnus-summary-reparent-thread" function (:user-visible-flag t) nil [428562 429433])
            ("gnus-summary-reparent-children" function
               (:user-visible-flag t
                :arguments ("parent" "children"))
                nil [429435 430814])
            ("gnus-summary-toggle-threads" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [430816 431355])
            ("gnus-summary-show-all-threads" function (:user-visible-flag t) nil [431357 431532])
            ("gnus-summary--inv" function (:arguments ("p")) nil [431534 431624])
            ("gnus-summary-show-thread" function (:user-visible-flag t) nil [431626 432171])
            ("gnus-summary-maybe-hide-threads" function nil nil [432173 432524])
            ("gnus-article-unread-p" function (:arguments ("header")) nil [432550 432648])
            ("gnus-article-unseen-p" function (:arguments ("header")) nil [432650 432747])
            ("gnus-map-articles" function (:arguments ("predicate" "articles")) nil [432749 433005])
            ("gnus-summary-hide-all-threads" function
               (:user-visible-flag t
                :arguments ("predicate"))
                nil [433007 433642])
            ("gnus-summary-hide-thread" function (:user-visible-flag t) nil [433644 434755])
            ("gnus-summary-go-to-next-thread" function (:arguments ("previous")) nil [434757 435334])
            ("gnus-summary-next-thread" function
               (:user-visible-flag t
                :arguments ("n" "silent"))
                nil [435336 435871])
            ("gnus-summary-prev-thread" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [435873 436083])
            ("gnus-summary-go-down-thread" function nil nil [436085 436290])
            ("gnus-summary-go-up-thread" function nil nil [436292 436479])
            ("gnus-summary-down-thread" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [436481 436930])
            ("gnus-summary-up-thread" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [436932 437156])
            ("gnus-summary-top-thread" function (:user-visible-flag t) nil [437158 437311])
            ("gnus-summary-expire-thread" function (:user-visible-flag t) nil [437313 437448])
            ("gnus-summary-kill-thread" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [437450 438732])
            ("gnus-summary-sort-by-number" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [438763 438961])
            ("gnus-summary-sort-by-most-recent-number" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [438963 439197])
            ("gnus-summary-sort-by-random" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [439199 439413])
            ("gnus-summary-sort-by-author" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [439415 439687])
            ("gnus-summary-sort-by-recipient" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [439689 439970])
            ("gnus-summary-sort-by-subject" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [439972 440263])
            ("gnus-summary-sort-by-date" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440265 440449])
            ("gnus-summary-sort-by-most-recent-date" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440451 440671])
            ("gnus-summary-sort-by-score" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440673 440860])
            ("gnus-summary-sort-by-lines" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440862 441063])
            ("gnus-summary-sort-by-chars" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [441065 441261])
            ("gnus-summary-sort-by-mark" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [441263 441457])
            ("gnus-summary-sort-by-original" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [441459 441856])
            ("gnus-summary-sort" function (:arguments ("predicate" "reverse")) nil [441858 442622])
            ("gnus-summary-save-article" function
               (:user-visible-flag t
                :arguments ("n" "not-saved"))
                nil [442653 444860])
            ("declare-function" code nil nil [444862 444941])
            ("gnus-summary-pipe-output" function
               (:user-visible-flag t
                :arguments ("n" "sym"))
                nil [444943 447618])
            ("gnus-summary-save-article-mail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [447620 448082])
            ("gnus-summary-save-article-rmail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [448084 448541])
            ("gnus-summary-save-article-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [448543 448991])
            ("gnus-summary-write-article-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [448993 449470])
            ("gnus-summary-save-article-body-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [449472 449935])
            ("gnus-summary-write-article-body-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [449937 450429])
            ("gnus-summary-muttprint" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [450431 450883])
            ("gnus-summary-pipe-message" function
               (:user-visible-flag t
                :arguments ("program"))
                nil [450885 451323])
            ("gnus-get-split-value" function (:arguments ("methods")) nil [451325 452366])
            ("gnus-valid-move-group-p" function (:arguments ("group")) nil [452368 452616])
            ("gnus-read-move-group-name" function (:arguments ("prompt" "default" "articles" "prefix")) nil [452618 454367])
            ("gnus-summary-save-parts-counter" variable nil nil [454369 454409])
            ("declare-function" code nil nil [454410 454481])
            ("gnus-summary-save-parts" function
               (:user-visible-flag t
                :arguments ("type" "dir" "n" "reverse"))
                nil [454483 455744])
            ("gnus-summary-save-parts-1" function (:arguments ("type" "dir" "handle" "reverse")) nil [455746 456510])
            ("gnus-summary-insert-pseudos" function (:arguments ("pslist" "not-view")) nil [456541 458850])
            ("gnus-pseudos<" function (:arguments ("p1" "p2")) nil [458852 458982])
            ("gnus-request-pseudo-article" function (:arguments ("props")) nil [458984 459221])
            ("gnus-execute-command" function (:arguments ("command" "automatic")) nil [459223 459774])
            ("gnus-summary-edit-global-kill" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [459803 459978])
            ("gnus-summary-edit-local-kill" function (:user-visible-flag t) nil [459980 460240])
            ("gnus-read-header" function (:arguments ("id" "header")) nil [460263 462825])
            ("gnus-remove-header" function (:arguments ("number")) nil [462827 463265])
            ("gnus-highlight-selected-summary" function nil nil [463299 464353])
            ("gnus-summary-highlight-line-cached" variable nil nil [464355 464402])
            ("gnus-summary-highlight-line-trigger" variable nil nil [464403 464451])
            ("gnus-summary-highlight-line-0" function nil nil [464453 465137])
            ("gnus-summary-highlight-line" function nil nil [465139 466257])
            ("gnus-update-read-articles" function (:arguments ("group" "unread" "compute")) nil [466259 468813])
            ("gnus-offer-save-summaries" function nil nil [468815 469795])
            ("gnus-summary-setup-default-charset" function nil nil [469797 470484])
            ("gnus-summary-display-buttonized" function
               (:user-visible-flag t
                :arguments ("show-all-parts"))
                nil [470513 470912])
            ("gnus-summary-repair-multipart" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [470914 471632])
            ("gnus-summary-toggle-display-buttonized" function (:user-visible-flag t) nil [471634 471970])
            ("gnus-summary-marking-alist" variable (:default-value (quote ((read gnus-del-mark "d") (unread gnus-unread-mark "u") (ticked gnus-ticked-mark "!") (dormant gnus-dormant-mark "?") (expirable gnus-expirable-mark "e")))) nil [472018 472267])
            ("gnus-summary-generic-mark-map" variable (:default-value (make-sparse-keymap)) nil [472269 472328])
            ("gnus-summary-mark-map" variable nil nil [472329 472359])
            ("gnus-summary-make-all-marking-commands" function nil nil [472361 472578])
            ("gnus-summary-make-marking-command" function (:arguments ("name" "mark" "keystroke")) nil [472580 473110])
            ("gnus-summary-make-marking-command-1" function (:arguments ("mark" "way" "lway" "name")) nil [473112 473667])
            ("gnus-summary-generic-mark" function (:arguments ("n" "mark" "move" "unread")) nil [473669 474418])
            ("gnus-summary-insert-articles" function (:arguments ("articles")) nil [474420 476318])
            ("gnus-summary-insert-old-articles" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [476320 478621])
            ("gnus-summary-insert-new-articles" function (:user-visible-flag t) nil [478623 479453])
            ("declare-function" code nil nil [479486 479544])
            ("declare-function" code nil nil [479545 479657])
            ("declare-function" code nil nil [479658 479721])
            ("declare-function" code nil nil [479722 479782])
            ("declare-function" code nil nil [479783 479847])
            ("bookmark-yank-point" variable nil nil [479848 479876])
            ("bookmark-current-buffer" variable nil nil [479877 479909])
            ("gnus-summary-bookmark-make-record" function nil nil [479911 481188])
            ("gnus-summary-bookmark-jump" function (:arguments ("bookmark")) nil [481205 482228])
            ("gnus-summary-make-all-marking-commands" code nil nil [482230 482270])
            ("gnus-sum" package nil nil [482272 482291])
            ("run-hooks" code nil nil [482293 482324]))          
      :file "gnus-sum.el"
      :pointmax 482398
      :fsize 482398
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 60472 . 60473) (symbol 60265 . 60282) (open-paren 60264 . 60265) (close-paren 914 . 915) (symbol 883 . 900) (open-paren 882 . 883)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [903 916])
            ("tool-bar-mode" variable nil nil [918 940])
            ("gnus" include nil nil [942 957])
            ("gnus-start" include nil nil [958 979])
            ("nnmail" include nil nil [980 997])
            ("gnus-spec" include nil nil [998 1018])
            ("gnus-int" include nil nil [1019 1038])
            ("gnus-range" include nil nil [1039 1060])
            ("gnus-win" include nil nil [1061 1080])
            ("gnus-undo" include nil nil [1081 1101])
            ("gmm-utils" include nil nil [1102 1122])
            ("time-date" include nil nil [1123 1143])
            ("unless" code nil nil [1259 1344])
            ("let" code nil nil [1186 1256])
            ("mm-url" include nil nil [1166 1183])
            ("gnus-agent-total-fetched-for" function (:prototype-flag t) nil [1347 1400])
            ("gnus-cache-total-fetched-for" function (:prototype-flag t) nil [1401 1454])
            ("gnus-group-make-nnir-group" function (:prototype-flag t) nil [1456 1501])
            ("gnus-cloud-upload-all-data" function (:prototype-flag t) nil [1503 1554])
            ("gnus-cloud-download-all-data" function (:prototype-flag t) nil [1555 1608])
            ("gnus-no-groups-message" variable (:default-value "No news is good news") nil [1610 1764])
            ("gnus-keep-same-level" variable nil nil [1766 2506])
            ("gnus-group-goto-unread" variable (:default-value t) nil [2508 2724])
            ("gnus-goto-next-group-when-activating" variable (:default-value t) nil [2726 3005])
            ("gnus-permanently-visible-groups" variable nil nil [3007 3337])
            ("gnus-safe-html-newsgroups" variable (:default-value "\\`nnrss[+:]") nil [3339 3862])
            ("gnus-list-groups-with-ticked-articles" variable (:default-value t) nil [3864 4073])
            ("gnus-group-default-list-level" variable (:default-value gnus-level-subscribed) nil [4075 4352])
            ("gnus-group-list-inactive-groups" variable (:default-value t) nil [4354 4521])
            ("gnus-group-sort-function" variable (:default-value (quote gnus-group-sort-by-alphabet)) nil [4523 5853])
            ("gnus-group-line-format" variable (:default-value "%M%S%p%P%5y:%B%(%g%)
") nil [5855 8526])
            ("gnus-group-mode-line-format" variable (:default-value "Gnus: %%b {%M%:%S}") nil [8528 8868])
            ("gnus-group-menu-hook" variable nil nil [8870 9005])
            ("gnus-group-catchup-group-hook" variable nil nil [9007 9200])
            ("gnus-group-update-group-hook" variable nil nil [9202 9331])
            ("gnus-group-prepare-function" variable (:default-value (quote gnus-group-prepare-flat)) nil [9333 9886])
            ("gnus-group-prepare-hook" variable nil nil [9888 10092])
            ("gnus-suspend-gnus-hook" variable nil nil [10094 10218])
            ("gnus-exit-gnus-hook" variable nil nil [10220 10324])
            ("gnus-after-exiting-gnus-hook" variable nil nil [10326 10440])
            ("gnus-group-update-hook" variable nil nil [10442 10586])
            ("gnus-useful-groups" variable (:default-value (quote (("(ding) mailing list mirrored at gmane.org" "gmane.emacs.gnus.general" (nntp "Gmane" (nntp-address "news.gmane.org"))) ("Gnus bug archive" "gnus.gnus-bug" (nntp "news.gnus.org" (nntp-address "news.gnus.org"))) ("Local Gnus help group" "gnus-help" (nndoc "gnus-help" (nndoc-article-type mbox) (eval (\` (nndoc-address (\, (let ((file (nnheader-find-etc-directory "gnus-tut.txt" t))) (unless file (error "Couldn't find doc group")) file)))))))))) nil [10588 11330])
            ("gnus-group-highlight" variable (:default-value (quote (((and mailp (= unread 0) (eq level 1)) . gnus-group-mail-1-empty) ((and mailp (eq level 1)) . gnus-group-mail-1) ((and mailp (= unread 0) (eq level 2)) . gnus-group-mail-2-empty) ((and mailp (eq level 2)) . gnus-group-mail-2) ((and mailp (= unread 0) (eq level 3)) . gnus-group-mail-3-empty) ((and mailp (eq level 3)) . gnus-group-mail-3) ((and mailp (= unread 0)) . gnus-group-mail-low-empty) ((and mailp) . gnus-group-mail-low) ((and (= unread 0) (eq level 1)) . gnus-group-news-1-empty) ((and (eq level 1)) . gnus-group-news-1) ((and (= unread 0) (eq level 2)) . gnus-group-news-2-empty) ((and (eq level 2)) . gnus-group-news-2) ((and (= unread 0) (eq level 3)) . gnus-group-news-3-empty) ((and (eq level 3)) . gnus-group-news-3) ((and (= unread 0) (eq level 4)) . gnus-group-news-4-empty) ((and (eq level 4)) . gnus-group-news-4) ((and (= unread 0) (eq level 5)) . gnus-group-news-5-empty) ((and (eq level 5)) . gnus-group-news-5) ((and (= unread 0) (eq level 6)) . gnus-group-news-6-empty) ((and (eq level 6)) . gnus-group-news-6) ((and (= unread 0)) . gnus-group-news-low-empty) (t . gnus-group-news-low)))) nil [11332 13598])
            ("put" code nil nil [13599 13650])
            ("gnus-new-mail-mark" variable (:default-value 37) nil [13652 13772])
            ("gnus-group-icons" customgroup (:user-visible-flag t) nil [13774 13869])
            ("gnus-group-icon-list" variable nil nil [13871 14924])
            ("put" code nil nil [14925 14976])
            ("gnus-group-name-charset-method-alist" variable nil nil [14978 15252])
            ("gnus-group-name-charset-group-alist" variable (:default-value (if (mm-coding-system-p (quote utf-8)) (quote ((".*" . utf-8))) nil)) nil [15254 15573])
            ("gnus-group-jump-to-group-prompt" variable nil nil [15575 16286])
            ("gnus-group-listing-limit" variable (:default-value 1000) nil [16288 16505])
            ("gnus-group-is-exiting-p" variable nil nil [16531 16567])
            ("gnus-group-is-exiting-without-update-p" variable nil nil [16568 16619])
            ("gnus-group-sort-alist-function" variable (:default-value (quote gnus-group-sort-flat)) nil [16620 16724])
            ("gnus-group-sort-selected-function" variable (:default-value (quote gnus-group-sort-selected-flat)) nil [16726 16865])
            ("gnus-group-indentation-function" variable nil nil [16867 16911])
            ("gnus-goto-missing-group-function" variable nil nil [16912 16957])
            ("gnus-group-update-group-function" variable nil nil [16958 17003])
            ("gnus-group-goto-next-group-function" variable nil nil [17004 17122])
            ("gnus-group-edit-buffer" variable nil nil [17124 17159])
            ("gnus-tmp-news-method" variable nil nil [17161 17190])
            ("gnus-tmp-colon" variable nil nil [17191 17214])
            ("gnus-tmp-news-server" variable nil nil [17215 17244])
            ("gnus-tmp-decoded-group" variable nil nil [17245 17276])
            ("gnus-tmp-header" variable nil nil [17277 17301])
            ("gnus-tmp-process-marked" variable nil nil [17302 17334])
            ("gnus-tmp-summary-live" variable nil nil [17335 17365])
            ("gnus-tmp-news-method-string" variable nil nil [17366 17402])
            ("gnus-tmp-group-icon" variable nil nil [17403 17431])
            ("gnus-tmp-moderated-string" variable nil nil [17432 17466])
            ("gnus-tmp-newsgroup-description" variable nil nil [17467 17506])
            ("gnus-tmp-comment" variable nil nil [17507 17532])
            ("gnus-tmp-qualified-group" variable nil nil [17533 17566])
            ("gnus-tmp-subscribed" variable nil nil [17567 17595])
            ("gnus-tmp-number-of-read" variable nil nil [17596 17628])
            ("gnus-inhibit-demon" variable nil nil [17629 17656])
            ("gnus-pick-mode" variable nil nil [17657 17680])
            ("gnus-tmp-marked-mark" variable nil nil [17681 17710])
            ("gnus-tmp-number-of-unread" variable nil nil [17711 17745])
            ("gnus-group-line-format-alist" variable (:default-value (\` ((77 gnus-tmp-marked-mark 99) (83 gnus-tmp-subscribed 99) (76 gnus-tmp-level 100) (78 (cond ((eq number t) "*") ((numberp number) (int-to-string (+ number (gnus-range-length (cdr (assq (quote dormant) gnus-tmp-marked))) (gnus-range-length (cdr (assq (quote tick) gnus-tmp-marked)))))) (t number)) 115) (82 gnus-tmp-number-of-read 115) (85 (if (gnus-active gnus-tmp-group) (gnus-number-of-unseen-articles-in-group gnus-tmp-group) "*") 115) (116 gnus-tmp-number-total 100) (121 gnus-tmp-number-of-unread 115) (73 (gnus-range-length (cdr (assq (quote dormant) gnus-tmp-marked))) 100) (84 (gnus-range-length (cdr (assq (quote tick) gnus-tmp-marked))) 100) (105 (+ (gnus-range-length (cdr (assq (quote dormant) gnus-tmp-marked))) (gnus-range-length (cdr (assq (quote tick) gnus-tmp-marked)))) 100) (103 (if (boundp (quote gnus-tmp-decoded-group)) gnus-tmp-decoded-group gnus-tmp-group) 115) (71 gnus-tmp-qualified-group 115) (99 (gnus-short-group-name (if (boundp (quote gnus-tmp-decoded-group)) gnus-tmp-decoded-group gnus-tmp-group)) 115) (67 gnus-tmp-comment 115) (68 gnus-tmp-newsgroup-description 115) (111 gnus-tmp-moderated 99) (79 gnus-tmp-moderated-string 115) (112 gnus-tmp-process-marked 99) (115 gnus-tmp-news-server 115) (110 gnus-tmp-news-method 115) (80 gnus-group-indentation 115) (69 gnus-tmp-group-icon 115) (66 gnus-tmp-summary-live 99) (122 gnus-tmp-news-method-string 115) (109 (gnus-group-new-mail gnus-tmp-group) 99) (100 (gnus-group-timestamp-string gnus-tmp-group) 115) (117 gnus-tmp-user-defined 115) (70 (gnus-total-fetched-for gnus-tmp-group) 115)))) nil [17747 19455])
            ("gnus-group-mode-line-format-alist" variable (:default-value (\` ((83 gnus-tmp-news-server 115) (77 gnus-tmp-news-method 115) (117 gnus-tmp-user-defined 115) (58 gnus-tmp-colon 115)))) nil [19457 19627])
            ("gnus-topic-topology" variable nil nil [19629 19695])
            ("gnus-topic-alist" variable nil nil [19697 19762])
            ("gnus-group-marked" variable nil nil [19764 19794])
            ("gnus-group-list-mode" variable nil nil [19796 19829])
            ("gnus-group-listed-groups" variable nil nil [19832 19869])
            ("gnus-group-list-option" variable nil nil [19870 19905])
            ("put" code nil nil [19936 19979])
            ("gnus-define-keys" code nil nil [19981 22273])
            ("gnus-define-keys" code nil nil [22275 22477])
            ("gnus-define-keys" code nil nil [22479 22723])
            ("gnus-define-keys" code nil nil [22725 22840])
            ("gnus-define-keys" code nil nil [22842 23631])
            ("gnus-define-keys" code nil nil [23633 24001])
            ("gnus-define-keys" code nil nil [24003 24452])
            ("gnus-define-keys" code nil nil [24454 24912])
            ("gnus-define-keys" code nil nil [24914 25303])
            ("gnus-define-keys" code nil nil [25305 25694])
            ("gnus-define-keys" code nil nil [25696 26073])
            ("gnus-define-keys" code nil nil [26075 26201])
            ("gnus-define-keys" code nil nil [26203 26318])
            ("gnus-define-keys" code nil nil [26320 26646])
            ("gnus-topic-mode-p" function nil nil [26648 26790])
            ("gnus-group-make-menu-bar" function nil nil [26792 35869])
            ("gnus-group-tool-bar-map" variable nil nil [35872 35908])
            ("gnus-group-tool-bar-update" function (:arguments ("symbol" "value")) nil [35910 36279])
            ("gnus-group-tool-bar" variable (:default-value (if (eq gmm-tool-bar-style (quote gnome)) (quote gnus-group-tool-bar-gnome) (quote gnus-group-tool-bar-retro))) nil [36281 37025])
            ("gnus-group-tool-bar-gnome" variable (:default-value (quote ((gnus-group-post-news "mail/compose") (gnus-agent-toggle-plugged "unplugged" t :help "Gnus is currently unplugged.  Click to work online." :visible (and gnus-agent (not gnus-plugged))) (gnus-agent-toggle-plugged "plugged" t :help "Gnus is currently plugged.  Click to work offline." :visible (and gnus-agent gnus-plugged)) (gnus-group-send-queue "mail/outbox" t :visible (and gnus-agent gnus-plugged) :help "Send articles from the queue group") (gnus-group-get-new-news "mail/inbox" nil :visible (or (not gnus-agent) gnus-plugged)) (gnus-topic-read-group "open" nil :visible (and (boundp (quote gnus-topic-mode)) gnus-topic-mode)) (gnus-group-read-group "open" nil :visible (not (and (boundp (quote gnus-topic-mode)) gnus-topic-mode))) (gnus-group-save-newsrc "save") (gnus-group-describe-group "describe") (gnus-group-unsubscribe-current-group "gnus/toggle-subscription") (gnus-group-prev-unread-group "left-arrow") (gnus-group-next-unread-group "right-arrow") (gnus-group-exit "exit") (gmm-customize-mode "preferences" t :help "Edit mode preferences") (gnus-info-find-node "help")))) nil [37027 38914])
            ("gnus-group-tool-bar-retro" variable (:default-value (quote ((gnus-group-get-new-news "gnus/get-news") (gnus-group-get-new-news-this-group "gnus/gnntg") (gnus-group-catchup-current "gnus/catchup") (gnus-group-describe-group "gnus/describe-group") (gnus-group-subscribe "gnus/subscribe" t :help "Subscribe to the current group") (gnus-group-unsubscribe "gnus/unsubscribe" t :help "Unsubscribe from the current group") (gnus-group-exit "gnus/exit-gnus" gnus-group-mode-map)))) nil [38916 39684])
            ("gnus-group-tool-bar-zap-list" variable (:default-value t) nil [39686 40055])
            ("image-load-path" variable nil nil [40057 40081])
            ("tool-bar-map" variable nil nil [40082 40103])
            ("gnus-group-make-tool-bar" function (:arguments ("force")) nil [40105 40770])
            ("define-derived-mode" code nil nil [40772 41981])
            ("gnus-update-group-mark-positions" function nil nil [41983 42539])
            ("gnus-mouse-pick-group" function
               (:user-visible-flag t
                :arguments ("e"))
                nil [42541 42691])
            ("gnus-group-default-list-level" function nil nil [42693 42925])
            ("gnus-group-default-level" function (:arguments ("level" "number-or-nil")) nil [43136 43631])
            ("gnus-group-setup-buffer" function nil nil [43633 43792])
            ("gnus-group-name-charset" function (:arguments ("method" "group")) nil [43794 44543])
            ("gnus-group-name-decode" function (:arguments ("string" "charset")) nil [44545 44717])
            ("gnus-group-decoded-name" function (:arguments ("string")) nil [44719 44860])
            ("gnus-group-list-groups" function
               (:user-visible-flag t
                :arguments ("level" "unread" "lowest"))
                nil [44862 47215])
            ("gnus-group-list-level" function
               (:user-visible-flag t
                :arguments ("level" "all"))
                nil [47217 47450])
            ("gnus-group-prepare-logic" function (:arguments ("group" "test")) nil [47452 47845])
            ("gnus-group-prepare-flat" function (:arguments ("level" "predicate" "lowest" "regexp")) nil [47847 50910])
            ("gnus-group-prepare-flat-list-dead" function (:arguments ("groups" "level" "mark" "regexp")) nil [50912 52237])
            ("gnus-group-update-group-line" function nil nil [52239 52927])
            ("gnus-group-insert-group-line-info" function (:arguments ("group")) nil [52929 53715])
            ("gnus-number-of-unseen-articles-in-group" function (:arguments ("group")) nil [53717 54088])
            ("gnus-group-update-tool-bar" variable (:default-value (and (boundp (quote tool-bar-mode)) tool-bar-mode)) nil [54764 55225])
            ("gnus-group-insert-group-line" function (:arguments ("gnus-tmp-group" "gnus-tmp-level" "gnus-tmp-marked" "number" "gnus-tmp-method")) nil [55227 58429])
            ("gnus-group--setup-tool-bar-update" function (:arguments ("beg" "end")) nil [58431 58987])
            ("gnus-group-update-eval-form" function (:arguments ("group" "list")) nil [58989 60167])
            ("gnus-group-highlight-line" function (:arguments ("group" "beg" "end")) nil [60169 60767])
            ("gnus-group-get-icon" function (:arguments ("group")) nil [60769 61261])
            ("gnus-group-refresh-group" function (:arguments ("group")) nil [61264 61457])
            ("gnus-group-update-group" function (:arguments ("group" "visible-only" "info-unchanged")) nil [61459 64315])
            ("gnus-group-set-mode-line" function nil nil [64317 65599])
            ("gnus-group-group-name" function nil nil [65601 65827])
            ("gnus-group-group-level" function nil nil [65829 65967])
            ("gnus-group-group-indentation" function nil nil [65969 66229])
            ("gnus-group-group-unread" function nil nil [66231 66391])
            ("gnus-group-new-mail" function (:arguments ("group")) nil [66393 66516])
            ("gnus-group-level" function (:arguments ("group")) nil [66518 66724])
            ("gnus-group-search-forward" function (:arguments ("backward" "all" "level" "first-too")) nil [66726 68057])
            ("gnus-total-fetched-for" function (:arguments ("group")) nil [68059 68462])
            ("gnus-group-mark-line-p" function nil nil [68513 68703])
            ("gnus-group-mark-group" function
               (:user-visible-flag t
                :arguments ("n" "unmark" "no-advance"))
                nil [68705 69425])
            ("gnus-group-unmark-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [69427 69592])
            ("gnus-group-unmark-all-groups" function (:user-visible-flag t) nil [69594 69774])
            ("gnus-group-mark-region" function
               (:user-visible-flag t
                :arguments ("unmark" "beg" "end"))
                nil [69776 70056])
            ("gnus-group-mark-buffer" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [70058 70256])
            ("gnus-group-mark-regexp" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [70258 70636])
            ("gnus-group-remove-mark" function (:arguments ("group" "test-marked")) nil [70638 70989])
            ("gnus-group-set-mark" function (:arguments ("group")) nil [70991 71229])
            ("gnus-group-universal-argument" function
               (:user-visible-flag t
                :arguments ("arg" "groups" "func"))
                nil [71231 71730])
            ("gnus-group-process-prefix" function (:arguments ("n")) nil [71732 72881])
            ("let" code nil nil [73024 73783])
            ("put" code nil nil [73786 73835])
            ("gnus-group-read-group" function
               (:user-visible-flag t
                :arguments ("all" "no-article" "group" "select-articles"))
                nil [73859 75216])
            ("gnus-group-select-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [75218 75740])
            ("gnus-group-quick-select-group" function
               (:user-visible-flag t
                :arguments ("all" "group"))
                nil [75742 76307])
            ("gnus-group-visible-select-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [76309 76512])
            ("gnus-group-select-group-ephemerally" function (:user-visible-flag t) nil [76514 77180])
            ("gnus-group-name-at-point" function nil nil [77182 78744])
            ("gnus-group-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "hist" "def")) nil [78746 80103])
            ("gnus-fetch-group" function
               (:user-visible-flag t
                :arguments ("group" "articles"))
                nil [80120 80522])
            ("gnus-fetch-group-other-frame" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [80539 80876])
            ("gnus-large-ephemeral-newsgroup" variable (:default-value 200) nil [80878 81339])
            ("gnus-fetch-old-ephemeral-headers" variable nil nil [81341 81604])
            ("gnus-group-read-ephemeral-group" function
               (:user-visible-flag t
                :arguments ("group" "method" "activate" "quit-config" "request-only" "select-articles" "parameters" "number"))
                nil [81709 84551])
            ("gnus-gmane-group-download-format" variable (:default-value "http://download.gmane.org/%s/%s/%s") nil [84553 84862])
            ("url-insert-file-contents" function (:prototype-flag t) nil [84864 84915])
            ("gnus-read-ephemeral-gmane-group" function
               (:user-visible-flag t
                :arguments ("group" "start" "range"))
                nil [84975 86258])
            ("gnus-read-ephemeral-gmane-group-url" function
               (:user-visible-flag t
                :arguments ("url"))
                nil [86260 88257])
            ("gnus-bug-group-download-format-alist" variable (:default-value (quote ((emacs . "https://debbugs.gnu.org/cgi/bugreport.cgi?bug=%s;mboxmaint=yes;mboxstat=yes") (debian . "http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=%s&mbox=yes;mboxmaint=yes")))) nil [88259 88977])
            ("gnus-read-ephemeral-bug-group" function
               (:user-visible-flag t
                :arguments ("ids" "mbox-url" "window-conf"))
                nil [88979 91062])
            ("gnus-read-ephemeral-debian-bug-group" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [91064 91363])
            ("debbugs-gnu-bug-number" variable nil nil [91365 91396])
            ("gnus-read-ephemeral-emacs-bug-group" function
               (:user-visible-flag t
                :arguments ("ids" "window-conf"))
                nil [91413 92087])
            ("gnus-group-jump-to-group" function
               (:user-visible-flag t
                :arguments ("group" "prompt"))
                nil [92089 93054])
            ("gnus-group-goto-group" function (:arguments ("group" "far" "test-marked")) nil [93056 94714])
            ("gnus-group-next-group" function
               (:user-visible-flag t
                :arguments ("n" "silent"))
                nil [94716 94980])
            ("gnus-group-next-unread-group" function
               (:user-visible-flag t
                :arguments ("n" "all" "level" "silent"))
                nil [94982 95767])
            ("gnus-group-prev-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [95769 95970])
            ("gnus-group-prev-unread-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [95972 96185])
            ("gnus-group-next-unread-group-same-level" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [96187 96521])
            ("gnus-group-prev-unread-group-same-level" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [96523 96818])
            ("gnus-group-best-unread-group" function
               (:user-visible-flag t
                :arguments ("exclude-group"))
                nil [96820 97623])
            ("gnus-group-first-unread-group" function (:user-visible-flag t) nil [98207 98721])
            ("gnus-group-enter-server-mode" function (:user-visible-flag t) nil [98723 98838])
            ("gnus-group-make-group-simple" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [98840 99107])
            ("gnus-group-make-group" function
               (:user-visible-flag t
                :arguments ("name" "method" "address" "args" "encoded"))
                nil [99109 101371])
            ("gnus-group-delete-groups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [101373 101778])
            ("gnus-group-delete-articles" function
               (:user-visible-flag t
                :arguments ("group" "oldp"))
                nil [101780 102412])
            ("gnus-group-delete-group" function
               (:user-visible-flag t
                :arguments ("group" "force" "no-prompt"))
                nil [102414 103781])
            ("gnus-group-rename-group" function
               (:user-visible-flag t
                :arguments ("group" "new-name"))
                nil [103783 106142])
            ("gnus-group-edit-group" function
               (:user-visible-flag t
                :arguments ("group" "part"))
                nil [106144 107266])
            ("gnus-group-edit-group-method" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [107268 107436])
            ("gnus-group-edit-group-parameters" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [107438 107613])
            ("gnus-group-edit-group-done" function (:arguments ("part" "group" "form")) nil [107615 108809])
            ("gnus-group-make-useful-group" function
               (:user-visible-flag t
                :arguments ("group" "method"))
                nil [108811 109507])
            ("gnus-group-make-help-group" function
               (:user-visible-flag t
                :arguments ("noerror"))
                nil [109509 110471])
            ("gnus-group-make-doc-group" function
               (:user-visible-flag t
                :arguments ("file" "type"))
                nil [110473 111686])
            ("nnweb-type-definition" variable nil nil [111688 111718])
            ("gnus-group-web-type-history" variable nil nil [111719 111759])
            ("gnus-group-web-search-history" variable nil nil [111760 111802])
            ("gnus-group-make-web-group" function
               (:user-visible-flag t
                :arguments ("solid"))
                nil [111803 112913])
            ("nnrss-group-alist" variable nil nil [112915 112941])
            ("nnrss-save-server-data" function (:arguments ("_arg")) nil [113000 113037])
            ("nnrss-discover-feed" function (:arguments ("_arg")) nil [112963 112997])
            ("gnus-group-make-rss-group" function
               (:user-visible-flag t
                :arguments ("url"))
                nil [113039 114274])
            ("gnus-group-make-directory-group" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [114276 115130])
            ("gnus-group-add-to-virtual" function
               (:user-visible-flag t
                :arguments ("n" "vgroup"))
                nil [115132 115853])
            ("gnus-group-make-empty-virtual" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [115855 116441])
            ("gnus-group-enter-directory" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [116443 116978])
            ("gnus-group-expunge-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [116980 117365])
            ("nnimap-acl-get" function (:prototype-flag t) nil [117367 117402])
            ("nnimap-acl-edit" function (:prototype-flag t) nil [117403 117439])
            ("gnus-group-nnimap-edit-acl" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [117441 119362])
            ("gnus-group-sort-groups" function
               (:user-visible-flag t
                :arguments ("func" "reverse"))
                nil [119450 119952])
            ("gnus-group-sort-flat" function (:arguments ("func" "reverse")) nil [119954 120407])
            ("gnus-group-sort-groups-by-alphabet" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [120409 120646])
            ("gnus-group-sort-groups-by-real-name" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [120648 120905])
            ("gnus-group-sort-groups-by-unread" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [120907 121140])
            ("gnus-group-sort-groups-by-level" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [121142 121359])
            ("gnus-group-sort-groups-by-score" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [121361 121578])
            ("gnus-group-sort-groups-by-rank" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [121580 121794])
            ("gnus-group-sort-groups-by-method" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [121796 122032])
            ("gnus-group-sort-groups-by-server" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [122034 122268])
            ("gnus-group-sort-selected-groups" function
               (:user-visible-flag t
                :arguments ("n" "func" "reverse"))
                nil [122299 122708])
            ("gnus-group-sort-selected-flat" function (:arguments ("groups" "func" "reverse")) nil [122710 123383])
            ("gnus-group-sort-selected-groups-by-alphabet" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [123385 123726])
            ("gnus-group-sort-selected-groups-by-real-name" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [123728 124076])
            ("gnus-group-sort-selected-groups-by-unread" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [124078 124415])
            ("gnus-group-sort-selected-groups-by-level" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [124417 124738])
            ("gnus-group-sort-selected-groups-by-score" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [124740 125061])
            ("gnus-group-sort-selected-groups-by-rank" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [125063 125381])
            ("gnus-group-sort-selected-groups-by-method" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [125383 125723])
            ("gnus-group-sort-by-alphabet" function (:arguments ("info1" "info2")) nil [125750 125884])
            ("gnus-group-sort-by-real-name" function (:arguments ("info1" "info2")) nil [125886 126098])
            ("gnus-group-sort-by-unread" function (:arguments ("info1" "info2")) nil [126100 126368])
            ("gnus-group-sort-by-level" function (:arguments ("info1" "info2")) nil [126370 126489])
            ("gnus-group-sort-by-method" function (:arguments ("info1" "info2")) nil [126491 126732])
            ("gnus-group-sort-by-server" function (:arguments ("info1" "info2")) nil [126734 127045])
            ("gnus-group-sort-by-score" function (:arguments ("info1" "info2")) nil [127047 127172])
            ("gnus-group-sort-by-rank" function (:arguments ("info1" "info2")) nil [127174 127435])
            ("gnus-group-clear-data" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [127456 127933])
            ("gnus-group-clear-data-on-native-groups" function (:user-visible-flag t) nil [127935 128507])
            ("gnus-info-clear-data" function (:arguments ("info")) nil [128509 129357])
            ("gnus-group-catchup-current" function
               (:user-visible-flag t
                :arguments ("n" "all"))
                nil [129382 130913])
            ("gnus-group-catchup-current-all" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [130915 131134])
            ("declare-function" code nil nil [131136 131206])
            ("gnus-group-catchup" function (:arguments ("group" "all")) nil [131208 132880])
            ("gnus-group-expire-articles" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [132882 133337])
            ("gnus-group-expire-articles-1" function (:arguments ("group")) nil [133339 134704])
            ("gnus-group-expire-all-groups" function (:user-visible-flag t) nil [134706 135087])
            ("gnus-group-set-current-level" function
               (:user-visible-flag t
                :arguments ("n" "level"))
                nil [135089 136134])
            ("gnus-group-unsubscribe" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [136136 136291])
            ("gnus-group-subscribe" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [136293 136442])
            ("gnus-group-unsubscribe-current-group" function
               (:user-visible-flag t
                :arguments ("n" "do-sub"))
                nil [136444 137126])
            ("gnus-group-unsubscribe-group" function
               (:user-visible-flag t
                :arguments ("group" "level" "silent"))
                nil [137128 138379])
            ("gnus-group-transpose-groups" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [138381 138799])
            ("gnus-group-kill-all-zombies" function
               (:user-visible-flag t
                :arguments ("dummy"))
                nil [138801 139176])
            ("gnus-group-kill-region" function
               (:user-visible-flag t
                :arguments ("begin" "end"))
                nil [139178 139676])
            ("gnus-group-kill-group" function
               (:user-visible-flag t
                :arguments ("n" "discard"))
                nil [139678 141940])
            ("gnus-group-yank-group" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [141942 143255])
            ("gnus-group-kill-level" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [143257 144144])
            ("gnus-group-list-all-groups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [144146 144422])
            ("gnus-group-list-killed" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [144547 145117])
            ("gnus-group-list-zombies" function (:user-visible-flag t) nil [145119 145474])
            ("gnus-group-list-active" function (:user-visible-flag t) nil [145476 146506])
            ("gnus-activate-all-groups" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [146508 146741])
            ("gnus-group-get-new-news" function
               (:user-visible-flag t
                :arguments ("arg" "one-level"))
                nil [146743 147927])
            ("gnus-group-get-new-news-this-group" function
               (:user-visible-flag t
                :arguments ("n" "dont-scan"))
                nil [147929 149668])
            ("gnus-group-describe-group" function
               (:user-visible-flag t
                :arguments ("force" "group"))
                nil [149670 150526])
            ("gnus-group-describe-all-groups" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [150581 151594])
            ("gnus-group-apropos" function
               (:user-visible-flag t
                :arguments ("regexp" "search-description"))
                nil [151647 153156])
            ("gnus-group-description-apropos" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [153158 153498])
            ("gnus-group-list-matching" function
               (:user-visible-flag t
                :arguments ("level" "regexp" "all" "lowest"))
                nil [153553 154302])
            ("gnus-group-list-all-matching" function
               (:user-visible-flag t
                :arguments ("level" "regexp" "lowest"))
                nil [154304 154757])
            ("gnus-group-save-newsrc" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [154817 155005])
            ("gnus-group-restart" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [155007 155254])
            ("gnus-group-read-init-file" function (:user-visible-flag t) nil [155256 155411])
            ("gnus-group-check-bogus-groups" function
               (:user-visible-flag t
                :arguments ("silent"))
                nil [155413 155695])
            ("gnus-group-find-new-groups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [155697 156376])
            ("gnus-group-edit-global-kill" function
               (:user-visible-flag t
                :arguments ("article" "group"))
                nil [156378 156759])
            ("gnus-group-edit-local-kill" function
               (:user-visible-flag t
                :arguments ("article" "group"))
                nil [156761 156936])
            ("gnus-group-force-update" function (:user-visible-flag t) nil [156938 157041])
            ("gnus-backlog-articles" variable nil nil [157043 157073])
            ("gnus-group-suspend" function (:user-visible-flag t) nil [157075 158057])
            ("gnus-group-clear-dribble" function (:user-visible-flag t) nil [158059 158228])
            ("gnus-group-exit" function (:user-visible-flag t) nil [158230 158990])
            ("gnus-group-quit" function (:user-visible-flag t) nil [158992 160032])
            ("gnus-group-describe-briefly" function (:user-visible-flag t) nil [160034 160444])
            ("gnus-group-browse-foreign-server" function
               (:user-visible-flag t
                :arguments ("method"))
                nil [160446 161614])
            ("gnus-group-set-info" function (:arguments ("info" "method-only-group" "part")) nil [161616 163661])
            ("gnus-import-other-newsrc-file" function (:arguments ("file")) nil [163768 164165])
            ("gnus-add-marked-articles" function (:arguments ("group" "type" "articles" "info" "force")) nil [164167 165132])
            ("declare-function" code nil nil [165134 165200])
            ("gnus-add-mark" function (:arguments ("group" "mark" "article")) nil [165202 165592])
            ("gnus-group-set-timestamp" function nil nil [165624 165989])
            ("gnus-group-timestamp" function (:arguments ("group")) nil [165991 166114])
            ("gnus-group-timestamp-delta" function (:arguments ("group")) nil [166116 166438])
            ("gnus-group-timestamp-string" function (:arguments ("group")) nil [166440 166632])
            ("gnus-group-list-cached" function
               (:user-visible-flag t
                :arguments ("level" "lowest"))
                nil [166634 167606])
            ("gnus-group-list-dormant" function
               (:user-visible-flag t
                :arguments ("level" "lowest"))
                nil [167608 168317])
            ("gnus-group-list-ticked" function
               (:user-visible-flag t
                :arguments ("level" "lowest"))
                nil [168319 169023])
            ("gnus-group-listed-groups" function nil nil [169025 169373])
            ("gnus-group-list-plus" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [169375 169906])
            ("gnus-group-list-flush" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [169908 170093])
            ("gnus-group-list-limit" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [170095 170613])
            ("declare-function" code nil nil [170615 170695])
            ("declare-function" code nil nil [170696 170772])
            ("gnus-group-mark-article-read" function (:arguments ("group" "article")) nil [170774 171992])
            ("gnus-group-compact-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [172033 173315])
            ("gnus-group" package nil nil [173317 173338]))          
      :file "gnus-group.el"
      :pointmax 173368
      :fsize 173367
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 113037 . 113038) (symbol 112943 . 112960) (open-paren 112942 . 112943) (close-paren 73783 . 73784) (symbol 73005 . 73021) (open-paren 73004 . 73005) (close-paren 1344 . 1345) (symbol 1146 . 1163) (open-paren 1145 . 1146) (close-paren 916 . 917) (symbol 883 . 900) (open-paren 882 . 883)))
    (semanticdb-table "semanticdb-table"
      :file "nnmail.el"
      :fsize 72406
      :lastmodtime '(23525 29557 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [918 931])
            ("mm-util" include nil nil [934 952])
            ("gnus-util" include nil nil [953 973])
            ("gnus" include nil nil [974 989])
            ("gnus-face-properties-alist" variable nil nil [991 1026])
            ("gnus-x-face-directory" variable (:default-value (expand-file-name "x-faces" gnus-directory)) nil [1028 1210])
            ("gnus-x-face-omit-files" variable nil nil [1212 1392])
            ("gnus-face-directory" variable (:default-value (expand-file-name "faces" gnus-directory)) nil [1394 1570])
            ("gnus-face-omit-files" variable nil nil [1572 1748])
            ("gnus-convert-pbm-to-x-face-command" variable (:default-value "pbmtoxbm %s | compface") nil [1750 1921])
            ("gnus-convert-image-to-x-face-command" variable (:default-value "convert -scale 48x48! %s xbm:- | xbm2xface.pl") nil [1923 2483])
            ("gnus-convert-image-to-face-command" variable (:default-value "convert -scale 48x48! %s -colors %d png:-") nil [2485 3097])
            ("gnus-shell-command-to-string" function (:arguments ("command")) nil [3099 3336])
            ("gnus--random-face-with-type" function (:arguments ("dir" "ext" "omit" "fun")) nil [3353 3813])
            ("message-goto-eoh" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3830 3874])
            ("message-insert-header" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3875 3924])
            ("gnus--insert-random-face-with-type" function (:arguments ("fun" "type")) nil [3926 4358])
            ("gnus-random-x-face" function (:user-visible-flag t) nil [4377 4881])
            ("gnus-insert-random-x-face-header" function (:user-visible-flag t) nil [4898 5088])
            ("gnus-x-face-from-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [5105 5491])
            ("gnus-face-from-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [5508 6344])
            ("gnus-face-encode" function nil nil [6346 6705])
            ("gnus-convert-face-to-png" function (:arguments ("face")) nil [6722 6985])
            ("gnus-convert-png-to-face" function (:arguments ("file")) nil [7002 7344])
            ("gnus-random-face" function (:user-visible-flag t) nil [7361 7682])
            ("gnus-insert-random-face-header" function nil nil [7699 7863])
            ("gnus-x-face" variable
               (:default-value (quote ((t (:foreground "black" :background "white"))))
                :type "face")
                nil [7865 8092])
            ("declare-function" code nil nil [8094 8151])
            ("declare-function" code nil nil [8152 8215])
            ("declare-function" code nil nil [8216 8287])
            ("declare-function" code nil nil [8288 8349])
            ("gnus-display-x-face-in-from" function (:arguments ("data")) nil [8351 9163])
            ("gnus-grab-cam-x-face" function (:user-visible-flag t) nil [9165 9812])
            ("gnus-grab-cam-face" function (:user-visible-flag t) nil [9814 10649])
            ("gnus-fun-ppm-change-string" function nil nil [10651 10998])
            ("gnus-funcall-no-warning" function (:arguments ("function" "args")) nil [11000 11107])
            ("gnus-fun" package nil nil [11109 11128]))          
      :file "gnus-fun.el"
      :pointmax 11156
      :fsize 11155
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 931 . 932) (symbol 898 . 915) (open-paren 897 . 898)))
    (semanticdb-table "semanticdb-table"
      :file "mm-util.el"
      :fsize 33311
      :lastmodtime '(23525 29555 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [954 967])
            ("gnus" include nil nil [970 985])
            ("message" include nil nil [986 1004])
            ("gnus-art" include nil nil [1005 1024])
            ("gnus-util" include nil nil [1025 1045])
            ("gnus-post-method" variable (:default-value (quote current)) nil [1047 1828])
            ("gnus-outgoing-message-group" variable nil nil [1830 2464])
            ("make-obsolete-variable" code nil nil [2466 2554])
            ("gnus-mailing-list-groups" variable nil nil [2556 2875])
            ("gnus-add-to-list" variable nil nil [2877 3006])
            ("gnus-crosspost-complaint" variable (:default-value "Hi,

You posted the article below with the following Newsgroups header:

Newsgroups: %s

The %s group, at least, was an inappropriate recipient
of this message.  Please trim your Newsgroups header to exclude this
group before posting in the future.

Thank you.

") nil [3008 3514])
            ("gnus-message-setup-hook" variable nil nil [3516 3687])
            ("gnus-bug-create-help-buffer" variable (:default-value t) nil [3689 3819])
            ("gnus-posting-styles" variable nil nil [3821 4504])
            ("gnus-gcc-mark-as-read" variable nil nil [4506 4658])
            ("make-obsolete-variable" code nil nil [4660 4752])
            ("gnus-gcc-externalize-attachments" variable nil nil [4754 5178])
            ("gnus-gcc-self-resent-messages" variable (:default-value (quote no-gcc-self)) nil [5180 5977])
            ("gnus-define-group-parameter" code nil nil [5979 7769])
            ("gnus-debug-files" variable (:default-value (quote ("gnus.el" "gnus-sum.el" "gnus-group.el" "gnus-art.el" "gnus-start.el" "gnus-async.el" "gnus-msg.el" "gnus-score.el" "gnus-win.el" "gnus-topic.el" "gnus-agent.el" "gnus-cache.el" "gnus-srvr.el" "mm-util.el" "mm-decode.el" "nnmail.el" "message.el"))) nil [7771 8204])
            ("gnus-debug-exclude-variables" variable (:default-value (quote (mm-mime-mule-charset-alist nnmail-split-fancy message-minibuffer-local-map))) nil [8206 8471])
            ("gnus-discouraged-post-methods" variable (:default-value (quote (nndraft nnml nnimap nnmaildir nnmh nnfolder nndir))) nil [8473 8790])
            ("gnus-message-replysign" variable nil nil [8792 8972])
            ("gnus-message-replyencrypt" variable (:default-value t) nil [8974 9180])
            ("gnus-message-replysignencrypted" variable (:default-value t) nil [9182 9345])
            ("gnus-confirm-mail-reply-to-news" variable (:default-value (and gnus-novice-user (not gnus-expert-user))) nil [9347 10038])
            ("gnus-confirm-treat-mail-like-news" variable nil nil [10040 10387])
            ("gnus-summary-resend-default-address" variable (:default-value t) nil [10389 10659])
            ("gnus-message-highlight-citation" variable (:default-value t) nil [10661 10924])
            ("gnus-gcc-pre-body-encode-hook" variable nil nil [10926 11282])
            ("gnus-gcc-post-body-encode-hook" variable nil nil [11284 11642])
            ("gnus-message-citation-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11644 11700])
            ("gnus-inhibit-posting-styles" variable nil nil [11727 11806])
            ("gnus-article-yanked-articles" variable nil nil [11808 11849])
            ("gnus-message-buffer" variable (:default-value "*Mail Gnus*") nil [11850 11892])
            ("gnus-article-copy" variable nil nil [11893 11923])
            ("gnus-check-before-posting" variable nil nil [11924 11962])
            ("gnus-last-posting-server" variable nil nil [11963 12000])
            ("gnus-message-group-art" variable nil nil [12001 12036])
            ("gnus-msg-force-broken-reply-to" variable nil nil [12038 12081])
            ("gnus-bug-message" variable
               (:constant-flag t
                :default-value "Sending a bug report to the Gnus Towers.
========================================

The buffer below is a mail buffer.  When you press `C-c C-c', it will
be sent to the Gnus Bug Exterminators.

The thing near the bottom of the buffer is how the environment
settings will be included in the mail.  Please do not delete that.
They will tell the Bug People what your environment is, so that it
will be easier to locate the bugs.

If you have found a bug that makes Emacs go \"beep\", set
debug-on-error to t (`M-x set-variable RET debug-on-error RET t RET')
and include the backtrace in your bug report.

Please describe the bug in annoying, painstaking detail.

Thank you for your help in stamping out bugs.
")
                nil [12083 12820])
            ("gnus-uu-post-news" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12822 12867])
            ("gnus-define-keys" code nil nil [12907 13911])
            ("gnus-define-keys" code nil nil [13913 14125])
            ("gnus-inews-make-draft" function (:arguments ("articles")) nil [14152 14317])
            ("nnir-article-number" function (:prototype-flag t) nil [14319 14372])
            ("nnir-article-group" function (:prototype-flag t) nil [14373 14425])
            ("gnus-nnir-group-p" function (:prototype-flag t) nil [14426 14462])
            ("gnus-article-reply" variable nil nil [14465 14496])
            ("gnus-setup-message" function (:arguments ("config" "forms")) nil [14497 18334])
            ("gnus-inews-make-draft-meta-information" function (:arguments ("group" "articles")) nil [18336 18688])
            ("gnus-msg-mail" function
               (:user-visible-flag t
                :arguments ("to" "subject" "other-headers" "continue" "switch-action" "yank-action" "send-actions" "return-action"))
                nil [18705 19890])
            ("gnus-button-mailto" function (:arguments ("address")) nil [19907 20066])
            ("gnus-button-reply" function
               (:user-visible-flag t
                :arguments ("to-address" "wide"))
                nil [20083 20246])
            ("define-mail-user-agent" code nil nil [20263 20386])
            ("gnus-setup-posting-charset" function (:arguments ("group")) nil [20388 20840])
            ("gnus-inews-add-send-actions" function (:arguments ("winconf" "buffer" "article" "config" "yanked" "winconf-name")) nil [20842 21943])
            ("put" code nil nil [21945 21994])
            ("put" code nil nil [21995 22051])
            ("gnus-group-mail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [22113 22996])
            ("gnus-group-news" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [22998 24101])
            ("gnus-group-post-news" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [24103 24840])
            ("gnus-summary-mail-other-window" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [24842 25757])
            ("gnus-summary-news-other-window" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [25759 27110])
            ("gnus-summary-post-news" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [27112 27804])
            ("gnus-summary-followup" function
               (:user-visible-flag t
                :arguments ("yank" "force-news"))
                nil [27807 28649])
            ("gnus-summary-followup-with-original" function
               (:user-visible-flag t
                :arguments ("n" "force-news"))
                nil [28651 28981])
            ("gnus-summary-followup-to-mail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [28983 29208])
            ("gnus-summary-followup-to-mail-with-original" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [29210 29409])
            ("gnus-inews-yank-articles" function (:arguments ("articles")) nil [29411 30275])
            ("gnus-summary-cancel-article" function
               (:user-visible-flag t
                :arguments ("n" "symp"))
                nil [30277 31586])
            ("gnus-summary-supersede-article" function (:user-visible-flag t) nil [31588 32413])
            ("gnus-copy-article-buffer" function (:arguments ("article-buffer" "yank-string")) nil [32418 35062])
            ("gnus-post-news" function (:arguments ("post" "group" "header" "article-buffer" "yank" "subject" "force-news")) nil [35064 37248])
            ("gnus-msg-treat-broken-reply-to" function (:arguments ("force")) nil [37250 37548])
            ("gnus-post-method" function (:arguments ("arg" "group" "silent")) nil [37550 40275])
            ("gnus-extended-version" function (:user-visible-flag t) nil [40280 40873])
            ("gnus-summary-reply" function
               (:user-visible-flag t
                :arguments ("yank" "wide" "very-wide"))
                nil [40956 43152])
            ("gnus-summary-handle-replysign" function nil nil [43154 43810])
            ("gnus-summary-reply-with-original" function
               (:user-visible-flag t
                :arguments ("n" "wide"))
                nil [43812 44044])
            ("gnus-summary-reply-to-list-with-original" function
               (:user-visible-flag t
                :arguments ("n" "wide"))
                nil [44046 44429])
            ("gnus-summary-reply-broken-reply-to" function
               (:user-visible-flag t
                :arguments ("yank" "wide" "very-wide"))
                nil [44431 44894])
            ("gnus-summary-reply-broken-reply-to-with-original" function
               (:user-visible-flag t
                :arguments ("n" "wide"))
                nil [44896 45179])
            ("gnus-summary-wide-reply" function
               (:user-visible-flag t
                :arguments ("yank"))
                nil [45181 45492])
            ("gnus-summary-wide-reply-with-original" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [45494 45739])
            ("gnus-summary-very-wide-reply" function
               (:user-visible-flag t
                :arguments ("yank"))
                nil [45741 46096])
            ("gnus-summary-very-wide-reply-with-original" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [46098 46366])
            ("gnus-summary-mail-forward" function
               (:user-visible-flag t
                :arguments ("arg" "post"))
                nil [46368 48285])
            ("gnus-summary-resend-message-insert-gcc" function nil nil [48287 49502])
            ("gnus-summary-resend-message" function
               (:user-visible-flag t
                :arguments ("address" "n"))
                nil [49504 51584])
            ("gnus-summary-resend-message-edit" function (:user-visible-flag t) nil [51631 52702])
            ("gnus-summary-post-forward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [52704 52898])
            ("gnus-summary-mail-crosspost-complaint" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [52900 54129])
            ("gnus-inews-add-to-address" function (:arguments ("group")) nil [54131 54519])
            ("gnus-article-mail" function
               (:user-visible-flag t
                :arguments ("yank"))
                nil [54521 54976])
            ("nntp-server-type" variable nil nil [54978 55003])
            ("gnus-bug" function (:user-visible-flag t) nil [55004 56210])
            ("gnus-bug-kill-buffer" function nil nil [56212 56319])
            ("gnus-summary-yank-message" function
               (:user-visible-flag t
                :arguments ("buffer" "n"))
                nil [56321 56701])
            ("gnus-summary-resend-bounced-mail" function
               (:user-visible-flag t
                :arguments ("fetch"))
                nil [56758 57905])
            ("gnus-inews-group-method" function (:arguments ("group")) nil [57926 58441])
            ("gnus-inews-do-gcc" function (:arguments ("gcc")) nil [58508 62294])
            ("gnus-inews-insert-gcc" function (:arguments ("group")) nil [62296 64916])
            ("gnus-mailing-list-followup-to" function nil nil [64918 65327])
            ("gnus-configure-posting-styles" function (:arguments ("group-name")) nil [65350 71119])
            ("gnus-msg" package nil nil [71121 71140]))          
      :file "gnus-msg.el"
      :pointmax 71168
      :fsize 71167
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 967 . 968) (symbol 936 . 953) (open-paren 935 . 936)))
    (semanticdb-table "semanticdb-table"
      :file "message.el"
      :fsize 301678
      :lastmodtime '(23525 29555 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [903 916])
            ("tool-bar-map" variable nil nil [918 939])
            ("w3m-minor-mode-map" variable nil nil [940 967])
            ("gnus" include nil nil [969 984])
            ("gnus-sum" include nil nil [985 1004])
            ("gnus-spec" include nil nil [1005 1025])
            ("gnus-int" include nil nil [1026 1045])
            ("gnus-win" include nil nil [1046 1065])
            ("mm-bodies" include nil nil [1066 1086])
            ("mail-parse" include nil nil [1087 1108])
            ("mm-decode" include nil nil [1109 1129])
            ("mm-view" include nil nil [1130 1148])
            ("wid-edit" include nil nil [1149 1168])
            ("mm-uu" include nil nil [1169 1185])
            ("message" include nil nil [1186 1204])
            ("mouse" include nil nil [1205 1221])
            ("gnus-msg-mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1223 1265])
            ("gnus-button-mailto" function (:prototype-flag t) nil [1266 1307])
            ("gnus-button-reply" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1308 1354])
            ("parse-time-string" function (:prototype-flag t) nil [1355 1405])
            ("ansi-color-apply-on-region" function (:prototype-flag t) nil [1406 1457])
            ("mm-url-insert-file-contents-external" function (:prototype-flag t) nil [1458 1515])
            ("mm-extern-cache-contents" function (:prototype-flag t) nil [1516 1564])
            ("url-expand-file-name" function (:prototype-flag t) nil [1565 1610])
            ("gnus-article" customgroup (:user-visible-flag t) nil [1612 1723])
            ("gnus-article-treat" customgroup (:user-visible-flag t) nil [1725 1857])
            ("gnus-article-hiding" customgroup (:user-visible-flag t) nil [1859 1990])
            ("gnus-article-highlight" customgroup (:user-visible-flag t) nil [1992 2154])
            ("gnus-article-signature" customgroup (:user-visible-flag t) nil [2156 2291])
            ("gnus-article-headers" customgroup (:user-visible-flag t) nil [2293 2420])
            ("gnus-article-washing" customgroup (:user-visible-flag t) nil [2422 2563])
            ("gnus-article-emphasis" customgroup (:user-visible-flag t) nil [2565 2703])
            ("gnus-article-saving" customgroup (:user-visible-flag t) nil [2705 2832])
            ("gnus-article-mime" customgroup (:user-visible-flag t) nil [2834 2965])
            ("gnus-article-buttons" customgroup (:user-visible-flag t) nil [2967 3118])
            ("gnus-article-various" customgroup (:user-visible-flag t) nil [3120 3251])
            ("gnus-ignored-headers" variable (:default-value (mapcar (lambda (header) (concat "^" header ":")) (quote ("Path" "Expires" "Date-Received" "References" "Xref" "Lines" "Relay-Version" "Message-ID" "Approved" "Sender" "Received" "X-UIDL" "MIME-Version" "Return-Path" "In-Reply-To" "Content-Type" "Content-Transfer-Encoding" "X-WebTV-Signature" "X-MimeOLE" "X-MSMail-Priority" "X-Priority" "X-Loop" "X-Authentication-Warning" "X-MIME-Autoconverted" "X-Face" "X-Attribution" "X-Originating-IP" "Delivered-To" "NNTP-[-A-Za-z]+" "Distribution" "X-no-archive" "X-Trace" "X-Complaints-To" "X-NNTP-Posting-Host" "X-Orig.*" "Abuse-Reports-To" "Cache-Post-Path" "X-Article-Creation-Date" "X-Poster" "X-Mail2News-Path" "X-Server-Date" "X-Cache" "Originator" "X-Problems-To" "X-Auth-User" "X-Post-Time" "X-Admin" "X-UID" "Resent-[-A-Za-z]+" "X-Mailing-List" "Precedence" "Original-[-A-Za-z]+" "X-filename" "X-Orcpt" "Old-Received" "X-Pgp" "X-Auth" "X-From-Line" "X-Gnus-Article-Number" "X-Majordomo" "X-Url" "X-Sender" "MBOX-Line" "Priority" "X400-[-A-Za-z]+" "Status" "X-Gnus-Mail-Source" "Cancel-Lock" "X-FTN" "X-EXP32-SerialNo" "Encoding" "Importance" "Autoforwarded" "Original-Encoded-Information-Types" "X-Ya-Pop3" "X-Face-Version" "X-Vms-To" "X-ML-NAME" "X-ML-COUNT" "Mailing-List" "X-finfo" "X-md5sum" "X-md5sum-Origin" "X-Sun-Charset" "X-Accept-Language" "X-Envelope-Sender" "List-[A-Za-z]+" "X-Listprocessor-Version" "X-Received" "X-Distribute" "X-Sequence" "X-Juno-Line-Breaks" "X-Notes-Item" "X-MS-TNEF-Correlator" "x-uunet-gateway" "X-Received" "Content-length" "X-precedence" "X-Authenticated-User" "X-Comment" "X-Report" "X-Abuse-Info" "X-HTTP-Proxy" "X-Mydeja-Info" "X-Copyright" "X-No-Markup" "X-Abuse-Info" "X-From_" "X-Accept-Language" "Errors-To" "X-BeenThere" "X-Mailman-Version" "List-Help" "List-Post" "List-Subscribe" "List-Id" "List-Unsubscribe" "List-Archive" "X-Content-length" "X-Posting-Agent" "Original-Received" "X-Request-PGP" "X-Fingerprint" "X-WRIEnvto" "X-WRIEnvfrom" "X-Virus-Scanned" "X-Delivery-Agent" "Posted-Date" "X-Gateway" "X-Local-Origin" "X-Local-Destination" "X-UserInfo1" "X-Received-Date" "X-Hashcash" "Face" "X-DMCA-Notifications" "X-Abuse-and-DMCA-Info" "X-Postfilter" "X-Gpg-.*" "X-Disclaimer" "Envelope-To" "X-Spam-Score" "System-Type" "X-Injected-Via-Gmane" "X-Gmane-NNTP-Posting-Host" "Jabber-ID" "Archived-At" "Envelope-Sender" "Envelope-Recipients")))) nil [3253 6110])
            ("gnus-visible-headers" variable (:default-value "^From:\\|^Newsgroups:\\|^Subject:\\|^Date:\\|^Followup-To:\\|^Reply-To:\\|^Organization:\\|^Summary:\\|^Keywords:\\|^To:\\|^[BGF]?Cc:\\|^Posted-To:\\|^Mail-Copies-To:\\|^Mail-Followup-To:\\|^Apparently-To:\\|^Gnus-Warning:\\|^Resent-From:") nil [6112 6921])
            ("gnus-sorted-header-list" variable (:default-value (quote ("^From:" "^Subject:" "^Summary:" "^Keywords:" "^Newsgroups:" "^Followup-To:" "^To:" "^Cc:" "^Date:" "^Organization:"))) nil [6923 7335])
            ("gnus-boring-article-headers" variable (:default-value (quote (empty followup-to reply-to))) nil [7337 8623])
            ("gnus-article-skip-boring" variable nil nil [8625 8993])
            ("gnus-signature-separator" variable (:default-value (quote ("^-- $" "^-- *$"))) nil [8995 9397])
            ("gnus-signature-limit" variable nil nil [9399 10221])
            ("gnus-hidden-properties" variable (:default-value (quote (invisible t))) nil [10223 10578])
            ("gnus-article-x-face-command" variable (:default-value (if (gnus-image-type-available-p (quote pbm)) (quote gnus-display-x-face-in-from) "{ echo '/* Format_version=1, Width=48, Height=48, Depth=1, Valid_bits_per_item=16 */'; uncompface; } | icontopbm | display -")) nil [10679 11282])
            ("gnus-article-x-face-too-ugly" variable nil nil [11284 11469])
            ("gnus-article-banner-alist" variable nil nil [11471 11775])
            ("gnus-define-group-parameter" code nil nil [11777 12477])
            ("gnus-article-address-banner-alist" variable nil nil [12479 13265])
            ("gnus-emphasis-custom-with-format" function (:arguments ("body")) nil [13267 13499])
            ("gnus-emphasis-custom-value-to-external" function (:arguments ("value")) nil [13501 13754])
            ("gnus-emphasis-custom-value-to-internal" function (:arguments ("value")) nil [13756 14160])
            ("gnus-emphasis-alist" variable (:default-value (let ((types (quote (("\\*" "\\*" bold nil 2) ("_" "_" underline) ("/" "/" italic) ("_/" "/_" underline-italic) ("_\\*" "\\*_" underline-bold) ("\\*/" "/\\*" bold-italic) ("_\\*/" "/\\*_" underline-bold-italic))))) (nconc (gnus-emphasis-custom-with-format (mapcar (lambda (spec) (list (format format (car spec) (cadr spec)) (or (nth 3 spec) 2) (or (nth 4 spec) 3) (intern (format "gnus-emphasis-%s" (nth 2 spec))))) types)) (quote (("\\(\\s-\\|^\\)\\(_\\(\\(\\w\\|_[^_]\\)+\\)_\\)\\(\\s-\\|[?!.,;]\\)" 2 3 gnus-emphasis-underline)))))) nil [14162 16743])
            ("gnus-emphasize-whitespace-regexp" variable (:default-value "^[ 	]+\\|[ 	]*
") nil [16745 17146])
            ("gnus-emphasis-bold" variable
               (:default-value (quote ((t (:bold t))))
                :type "face")
                nil [17148 17287])
            ("gnus-emphasis-italic" variable
               (:default-value (quote ((t (:italic t))))
                :type "face")
                nil [17289 17432])
            ("gnus-emphasis-underline" variable
               (:default-value (quote ((t (:underline t))))
                :type "face")
                nil [17434 17587])
            ("gnus-emphasis-underline-bold" variable
               (:default-value (quote ((t (:bold t :underline t))))
                :type "face")
                nil [17589 17762])
            ("gnus-emphasis-underline-italic" variable
               (:default-value (quote ((t (:italic t :underline t))))
                :type "face")
                nil [17764 17943])
            ("gnus-emphasis-bold-italic" variable
               (:default-value (quote ((t (:bold t :italic t))))
                :type "face")
                nil [17945 18108])
            ("gnus-emphasis-underline-bold-italic" variable
               (:default-value (quote ((t (:bold t :italic t :underline t))))
                :type "face")
                nil [18110 18321])
            ("gnus-emphasis-strikethru" variable
               (:default-value (quote ((t (:strike-through t))))
                :type "face")
                nil [18323 18475])
            ("gnus-emphasis-highlight-words" variable
               (:default-value (quote ((t (:background "black" :foreground "yellow"))))
                :type "face")
                nil [18477 18648])
            ("gnus-article-time-format" variable (:default-value "%a, %d %b %Y %T %Z") nil [18650 19101])
            ("gnus-save-all-headers" variable (:default-value t) nil [19103 19395])
            ("gnus-prompt-before-saving" variable (:default-value (quote always)) nil [19397 20035])
            ("gnus-article-show-cursor" variable nil nil [20037 20213])
            ("gnus-saved-headers" variable (:default-value gnus-visible-headers) nil [20215 20748])
            ("gnus-default-article-saver" variable (:default-value (quote gnus-summary-save-in-rmail)) nil [20820 22903])
            ("gnus-article-save-coding-system" variable (:default-value (or (and (mm-coding-system-p (quote utf-8)) (quote utf-8)) (and (mm-coding-system-p (quote iso-2022-7bit)) (quote iso-2022-7bit)) (and (mm-coding-system-p (quote emacs-mule)) (quote emacs-mule)) (and (mm-coding-system-p (quote escape-quoted)) (quote escape-quoted)))) nil [22905 24419])
            ("gnus-rmail-save-name" variable (:default-value (quote gnus-plain-save-name)) nil [24421 24667])
            ("gnus-mail-save-name" variable (:default-value (quote gnus-plain-save-name)) nil [24669 24918])
            ("gnus-folder-save-name" variable (:default-value (quote gnus-folder-save-name)) nil [24920 25167])
            ("gnus-file-save-name" variable (:default-value (quote gnus-numeric-save-name)) nil [25169 25418])
            ("gnus-split-methods" variable (:default-value (quote ((gnus-article-archive-name) (gnus-article-nndoc-name)))) nil [25420 26600])
            ("gnus-page-delimiter" variable (:default-value "^") nil [26602 26833])
            ("gnus-article-mode-line-format" variable (:default-value "Gnus: %g %S%m") nil [26835 27200])
            ("gnus-article-mode-hook" variable nil nil [27202 27319])
            ("gnus-article-menu-hook" variable nil nil [27321 27462])
            ("gnus-article-prepare-hook" variable nil nil [27464 27626])
            ("gnus-copy-article-ignored-headers" variable nil nil [27628 27859])
            ("make-obsolete-variable" code nil nil [27861 27945])
            ("gnus-button" variable
               (:default-value (quote ((t (:weight bold))))
                :type "face")
                nil [27947 28086])
            ("gnus-article-button-face" variable (:default-value (quote gnus-button)) nil [28088 28345])
            ("gnus-article-mouse-face" variable (:default-value (quote highlight)) nil [28347 28577])
            ("gnus-signature-face" variable (:default-value (quote gnus-signature)) nil [28579 28840])
            ("gnus-signature" variable
               (:default-value (quote ((t (:italic t))))
                :type "face")
                nil [28842 29024])
            ("put" code nil nil [29057 29111])
            ("put" code nil nil [29112 29160])
            ("gnus-header-from" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen1")) (((class color) (background light)) (:foreground "red3")) (t (:italic t))))
                :type "face")
                nil [29162 29472])
            ("put" code nil nil [29505 29563])
            ("put" code nil nil [29564 29614])
            ("gnus-header-subject" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SeaGreen1")) (((class color) (background light)) (:foreground "red4")) (t (:bold t :italic t))))
                :type "face")
                nil [29616 29939])
            ("put" code nil nil [29972 30036])
            ("put" code nil nil [30037 30090])
            ("gnus-header-newsgroups" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "yellow" :italic t)) (((class color) (background light)) (:foreground "MidnightBlue" :italic t)) (t (:italic t))))
                :type "face")
                nil [30092 30508])
            ("put" code nil nil [30541 30611])
            ("put" code nil nil [30612 30668])
            ("gnus-header-name" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SpringGreen2")) (((class color) (background light)) (:foreground "maroon")) (t (:bold t))))
                :type "face")
                nil [30670 30982])
            ("put" code nil nil [31015 31073])
            ("put" code nil nil [31074 31124])
            ("gnus-header-content" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SpringGreen1" :italic t)) (((class color) (background light)) (:foreground "indianred4" :italic t)) (t (:italic t))))
                :type "face")
                nil [31126 31468])
            ("put" code nil nil [31501 31565])
            ("put" code nil nil [31566 31619])
            ("gnus-header-face-alist" variable (:default-value (quote (("From" nil gnus-header-from) ("Subject" nil gnus-header-subject) ("Newsgroups:.*," nil gnus-header-newsgroups) ("" gnus-header-name gnus-header-content)))) nil [31621 32596])
            ("gnus-face-properties-alist" variable (:default-value (quote ((pbm :face gnus-x-face) (png)))) nil [32598 33379])
            ("gnus-article-decode-hook" variable (:default-value (quote (article-decode-charset article-decode-encoded-words article-decode-group-name article-decode-idna-rhs))) nil [33381 33620])
            ("gnus-display-mime-function" variable (:default-value (quote gnus-display-mime)) nil [33622 33764])
            ("gnus-decode-header-function" variable (:default-value (quote mail-decode-encoded-word-region)) nil [33766 33872])
            ("gnus-decode-address-function" variable (:default-value (quote mail-decode-encoded-address-region)) nil [33874 33986])
            ("gnus-article-dumbquotes-map" variable (:default-value (quote ((128 "EUR") (130 ",") (131 "f") (132 ",,") (133 "...") (139 "<") (140 "OE") (145 "`") (146 "'") (147 "``") (148 "\"") (149 "*") (150 "-") (151 "--") (152 "~") (153 "(TM)") (155 ">") (156 "oe") (180 "'")))) nil [33988 34382])
            ("gnus-ignored-mime-types" variable nil nil [34384 34549])
            ("gnus-unbuttonized-mime-types" variable (:default-value (quote (".*/.*"))) nil [34551 34897])
            ("gnus-buttonized-mime-types" variable nil nil [34899 35495])
            ("gnus-inhibit-mime-unbuttonizing" variable nil nil [35497 35817])
            ("gnus-body-boundary-delimiter" variable (:default-value "_") nil [35819 36129])
            ("gnus-picon-databases" variable (:default-value (quote ("/usr/lib/picon" "/usr/local/faces" "/usr/share/picons"))) nil [36131 36596])
            ("gnus-picons-installed-p" function nil nil [36598 36829])
            ("gnus-article-mime-part-function" variable nil nil [36831 37129])
            ("gnus-mime-multipart-functions" variable nil nil [37131 37352])
            ("gnus-article-date-headers" variable (:default-value (quote (combined-lapsed))) nil [37354 38393])
            ("gnus-article-update-date-headers" variable nil nil [38395 38667])
            ("gnus-article-mime-match-handle-function" variable (:default-value (quote undisplayed-alternative)) nil [38669 39356])
            ("gnus-mime-action-alist" variable (:default-value (quote (("save to file" . gnus-mime-save-part) ("save and strip" . gnus-mime-save-part-and-strip) ("replace with file" . gnus-mime-replace-part) ("delete part" . gnus-mime-delete-part) ("display as text" . gnus-mime-inline-part) ("view the part" . gnus-mime-view-part) ("pipe to command" . gnus-mime-pipe-part) ("toggle display" . gnus-article-press-button) ("toggle display" . gnus-article-view-part-as-charset) ("view as type" . gnus-mime-view-part-as-type) ("view internally" . gnus-mime-view-part-internally) ("view externally" . gnus-mime-view-part-externally)))) nil [39358 40150])
            ("gnus-auto-select-part" variable (:default-value 1) nil [40152 40603])
            ("gnus-part-display-hook" variable nil nil [40642 40733])
            ("gnus-article-treat-custom" variable (:default-value (quote (choice (const :tag "Off" nil) (const :tag "On" t) (const :tag "Header" head) (const :tag "First" first) (const :tag "Last" last) (integer :tag "Less") (repeat :tag "Groups" regexp) (sexp :tag "Predicate")))) nil [40735 41007])
            ("gnus-article-treat-head-custom" variable (:default-value (quote (choice (const :tag "Off" nil) (const :tag "Header" head)))) nil [41009 41114])
            ("gnus-article-treat-types" variable (:default-value (quote ("text/plain" "text/x-verbatim" "text/x-patch" "text/html"))) nil [41116 41256])
            ("gnus-inhibit-treatment" variable nil nil [41258 41327])
            ("gnus-treat-highlight-signature" variable (:default-value (quote (or t (typep "text/x-vcard")))) nil [41329 41670])
            ("put" code nil nil [41671 41721])
            ("gnus-treat-buttonize" variable (:default-value (quote (and 100000 (typep "text/plain")))) nil [41723 42046])
            ("put" code nil nil [42047 42087])
            ("gnus-treat-buttonize-head" variable (:default-value (quote head)) nil [42089 42405])
            ("put" code nil nil [42406 42451])
            ("gnus-treat-date" variable (:default-value (quote head)) nil [42453 42821])
            ("gnus-treat-emphasize" variable (:default-value 50000) nil [42823 43120])
            ("put" code nil nil [43121 43161])
            ("gnus-treat-strip-cr" variable nil nil [43163 43484])
            ("gnus-treat-unsplit-urls" variable nil nil [43486 43820])
            ("gnus-treat-leading-whitespace" variable nil nil [43822 44166])
            ("gnus-treat-hide-headers" variable (:default-value (quote head)) nil [44168 44471])
            ("gnus-treat-hide-boring-headers" variable nil nil [44473 44788])
            ("gnus-treat-hide-signature" variable nil nil [44790 45094])
            ("gnus-treat-fill-article" variable nil nil [45096 45396])
            ("gnus-treat-hide-citation" variable nil nil [45398 45782])
            ("gnus-treat-hide-citation-maybe" variable nil nil [45784 46219])
            ("gnus-treat-strip-list-identifiers" variable (:default-value (quote head)) nil [46221 46586])
            ("gnus-define-group-parameter" code nil nil [46588 47168])
            ("make-obsolete-variable" code nil nil [47170 47248])
            ("gnus-treat-strip-pem" variable nil nil [47250 47551])
            ("gnus-treat-strip-banner" variable (:default-value t) nil [47553 47934])
            ("gnus-treat-highlight-headers" variable (:default-value (quote head)) nil [47936 48253])
            ("put" code nil nil [48254 48302])
            ("gnus-treat-highlight-citation" variable (:default-value t) nil [48304 48612])
            ("put" code nil nil [48613 48662])
            ("gnus-treat-strip-headers-in-body" variable (:default-value t) nil [48664 49038])
            ("gnus-treat-strip-trailing-blank-lines" variable nil nil [49040 49462])
            ("gnus-treat-strip-leading-blank-lines" variable nil nil [49464 49852])
            ("gnus-treat-strip-multiple-blank-lines" variable nil nil [49854 50178])
            ("gnus-treat-unfold-headers" variable (:default-value (quote head)) nil [50180 50512])
            ("gnus-article-unfold-long-headers" variable nil nil [50514 50937])
            ("gnus-treat-fold-headers" variable nil nil [50939 51253])
            ("gnus-treat-fold-newsgroups" variable (:default-value (quote head)) nil [51255 51605])
            ("gnus-treat-overstrike" variable (:default-value t) nil [51607 51916])
            ("put" code nil nil [51917 51958])
            ("gnus-treat-ansi-sequences" variable (:default-value t) nil [51960 52276])
            ("make-obsolete-variable" code nil nil [52278 52371])
            ("gnus-treat-display-x-face" variable (:default-value (and (not noninteractive) (gnus-image-type-available-p (quote xbm)) (condition-case nil (and (string-match "^0x" (shell-command-to-string "uncompface")) (executable-find "icontopbm")) (error nil)) (quote head))) nil [52373 53611])
            ("put" code nil nil [53612 53657])
            ("gnus-treat-display-face" variable (:default-value (and (not noninteractive) (gnus-image-type-available-p (quote png)) (quote head))) nil [53659 54145])
            ("put" code nil nil [54146 54189])
            ("gnus-treat-display-smileys" variable (:default-value (gnus-image-type-available-p (quote xpm))) nil [54191 54625])
            ("put" code nil nil [54626 54672])
            ("gnus-treat-from-picon" variable (:default-value (if (and (gnus-image-type-available-p (quote xpm)) (gnus-picons-installed-p)) (quote head) nil)) nil [54674 55204])
            ("put" code nil nil [55205 55246])
            ("gnus-treat-mail-picon" variable (:default-value (if (and (gnus-image-type-available-p (quote xpm)) (gnus-picons-installed-p)) (quote head) nil)) nil [55248 55780])
            ("put" code nil nil [55781 55822])
            ("gnus-treat-newsgroups-picon" variable (:default-value (if (and (gnus-image-type-available-p (quote xpm)) (gnus-picons-installed-p)) (quote head) nil)) nil [55824 56383])
            ("put" code nil nil [56384 56431])
            ("gnus-treat-from-gravatar" variable nil nil [56433 56888])
            ("put" code nil nil [56889 56933])
            ("gnus-treat-mail-gravatar" variable nil nil [56935 57392])
            ("put" code nil nil [57393 57437])
            ("gnus-treat-body-boundary" variable (:default-value (if (or gnus-treat-newsgroups-picon gnus-treat-mail-picon gnus-treat-from-picon gnus-treat-from-gravatar gnus-treat-mail-gravatar) (quote head) nil)) nil [57439 58002])
            ("gnus-treat-capitalize-sentences" variable nil nil [58004 58348])
            ("gnus-treat-wash-html" variable nil nil [58350 58663])
            ("gnus-treat-fill-long-lines" variable (:default-value (quote (typep "text/plain"))) nil [58665 59003])
            ("gnus-treat-x-pgp-sig" variable nil nil [59005 59394])
            ("gnus-article-encrypt-protocol-alist" variable (:default-value (quote (("PGP" . mml2015-self-encrypt)))) nil [59396 59476])
            ("gnus-article-encrypt-protocol" variable (:default-value "PGP") nil [59567 59767])
            ("gnus-use-idna" variable (:default-value t) nil [59769 59930])
            ("gnus-article-over-scroll" variable nil nil [59932 60111])
            ("gnus-inhibit-images" variable nil nil [60113 60281])
            ("gnus-blocked-images" variable (:default-value (quote gnus-block-private-groups)) nil [60283 61159])
            ("gnus-english-month-names" variable (:default-value (quote ("January" "February" "March" "April" "May" "June" "July" "August" "September" "October" "November" "December"))) nil [61185 61337])
            ("article-goto-body-goes-to-point-min-p" variable nil nil [61339 61389])
            ("gnus-article-wash-types" variable nil nil [61390 61426])
            ("gnus-article-emphasis-alist" variable nil nil [61427 61467])
            ("gnus-article-image-alist" variable nil nil [61468 61505])
            ("gnus-article-mime-handle-alist-1" variable nil nil [61507 61552])
            ("gnus-treatment-function-alist" variable (:default-value (quote ((gnus-treat-strip-cr gnus-article-remove-cr) (gnus-treat-x-pgp-sig gnus-article-verify-x-pgp-sig) (gnus-treat-strip-banner gnus-article-strip-banner) (gnus-treat-strip-headers-in-body gnus-article-strip-headers-in-body) (gnus-treat-highlight-signature gnus-article-highlight-signature) (gnus-treat-buttonize gnus-article-add-buttons) (gnus-treat-fill-article gnus-article-fill-cited-article) (gnus-treat-fill-long-lines gnus-article-fill-cited-long-lines) (gnus-treat-unsplit-urls gnus-article-unsplit-urls) (gnus-treat-display-x-face gnus-article-display-x-face) (gnus-treat-display-face gnus-article-display-face) (gnus-treat-hide-headers gnus-article-maybe-hide-headers) (gnus-treat-hide-boring-headers gnus-article-hide-boring-headers) (gnus-treat-hide-signature gnus-article-hide-signature) (gnus-treat-strip-list-identifiers gnus-article-hide-list-identifiers) (gnus-treat-leading-whitespace gnus-article-remove-leading-whitespace) (gnus-treat-from-picon gnus-treat-from-picon) (gnus-treat-mail-picon gnus-treat-mail-picon) (gnus-treat-newsgroups-picon gnus-treat-newsgroups-picon) (gnus-treat-strip-pem gnus-article-hide-pem) (gnus-treat-date gnus-article-treat-date) (gnus-treat-from-gravatar gnus-treat-from-gravatar) (gnus-treat-mail-gravatar gnus-treat-mail-gravatar) (gnus-treat-highlight-headers gnus-article-highlight-headers) (gnus-treat-highlight-signature gnus-article-highlight-signature) (gnus-treat-strip-trailing-blank-lines gnus-article-remove-trailing-blank-lines) (gnus-treat-strip-leading-blank-lines gnus-article-strip-leading-blank-lines) (gnus-treat-strip-multiple-blank-lines gnus-article-strip-multiple-blank-lines) (gnus-treat-overstrike gnus-article-treat-overstrike) (gnus-treat-ansi-sequences gnus-article-treat-ansi-sequences) (gnus-treat-unfold-headers gnus-article-treat-unfold-headers) (gnus-treat-fold-newsgroups gnus-article-treat-fold-newsgroups) (gnus-treat-fold-headers gnus-article-treat-fold-headers) (gnus-treat-buttonize-head gnus-article-add-buttons-to-head) (gnus-treat-display-smileys gnus-treat-smiley) (gnus-treat-capitalize-sentences gnus-article-capitalize-sentences) (gnus-treat-wash-html gnus-article-wash-html) (gnus-treat-emphasize gnus-article-emphasize) (gnus-treat-hide-citation gnus-article-hide-citation) (gnus-treat-hide-citation-maybe gnus-article-hide-citation-maybe) (gnus-treat-highlight-citation gnus-article-highlight-citation) (gnus-treat-body-boundary gnus-article-treat-body-boundary)))) nil [61553 64233])
            ("gnus-article-mime-handle-alist" variable nil nil [64235 64278])
            ("article-lapsed-timer" variable nil nil [64279 64312])
            ("gnus-article-current-summary" variable nil nil [64313 64354])
            ("gnus-article-mode-syntax-table" variable (:default-value (let ((table (copy-syntax-table text-mode-syntax-table))) (modify-syntax-entry 62 ")<" table) (modify-syntax-entry 60 "(>" table) (modify-syntax-entry 39 "'" table) (modify-syntax-entry 96 "'" table) table)) nil [64356 64925])
            ("gnus-save-article-buffer" variable nil nil [64927 64964])
            ("gnus-number-of-articles-to-be-saved" variable nil nil [64966 65014])
            ("gnus-inhibit-hiding" variable nil nil [65016 65048])
            ("gnus-article-edit-mode" variable nil nil [65050 65085])
            ("gnus-with-article-headers" function (:arguments ("forms")) nil [65136 65393])
            ("put" code nil nil [65395 65451])
            ("put" code nil nil [65452 65510])
            ("gnus-with-article-buffer" function (:arguments ("forms")) nil [65512 65721])
            ("put" code nil nil [65723 65778])
            ("put" code nil nil [65779 65836])
            ("gnus-article-goto-header" function (:arguments ("header")) nil [65838 65986])
            ("gnus-article-hide-text" function (:arguments ("b" "e" "props")) nil [65988 66136])
            ("gnus-article-unhide-text" function (:arguments ("b" "e")) nil [66138 66296])
            ("gnus-article-hide-text-type" function (:arguments ("b" "e" "type")) nil [66298 66501])
            ("gnus-article-unhide-text-type" function (:arguments ("b" "e" "type")) nil [66503 66713])
            ("gnus-article-delete-text-of-type" function (:arguments ("type")) nil [66715 67507])
            ("gnus-article-delete-invisible-text" function nil nil [67509 67821])
            ("gnus-article-header-rank" function nil nil [67823 68100])
            ("article-hide-headers" function
               (:user-visible-flag t
                :arguments ("_arg" "_delete"))
                nil [68102 70431])
            ("article-hide-boring-headers" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [70433 75219])
            ("gnus-article-hide-header" function (:arguments ("header")) nil [75221 75567])
            ("gnus-article-normalized-header-length" variable (:default-value 40) nil [75569 75652])
            ("article-normalize-headers" function (:user-visible-flag t) nil [75654 76371])
            ("article-treat-dumbquotes" function (:user-visible-flag t) nil [76373 76931])
            ("org-entities" variable nil nil [76933 76954])
            ("article-treat-non-ascii" function (:user-visible-flag t) nil [76956 77706])
            ("article-translate-strings" function (:arguments ("map")) nil [77708 78288])
            ("article-treat-overstrike" function (:user-visible-flag t) nil [78290 79238])
            ("article-treat-ansi-sequences" function (:user-visible-flag t) nil [79240 79498])
            ("gnus-article-treat-unfold-headers" function (:user-visible-flag t) nil [79500 80397])
            ("gnus-article-treat-fold-headers" function (:user-visible-flag t) nil [80399 80645])
            ("gnus-treat-smiley" function (:user-visible-flag t) nil [80647 81073])
            ("gnus-article-remove-images" function (:user-visible-flag t) nil [81075 81321])
            ("w3m-toggle-inline-images" function (:prototype-flag t) nil [81323 81365])
            ("gnus-article-show-images" function (:user-visible-flag t) nil [81367 81905])
            ("gnus-article-treat-fold-newsgroups" function (:user-visible-flag t) nil [81907 82349])
            ("gnus-article-truncate-lines" variable (:default-value (default-value (quote truncate-lines))) nil [82351 82724])
            ("gnus-article-toggle-truncate-lines" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [82726 83448])
            ("gnus-article-treat-body-boundary" function (:user-visible-flag t) nil [83450 84094])
            ("article-fill-long-lines" function (:user-visible-flag t) nil [84096 84756])
            ("article-capitalize-sentences" function (:user-visible-flag t) nil [84758 85040])
            ("article-remove-cr" function (:user-visible-flag t) nil [85042 85405])
            ("article-remove-trailing-blank-lines" function (:user-visible-flag t) nil [85407 85841])
            ("gnus-face-properties-alist" variable nil nil [85843 85878])
            ("article-display-face" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [85880 87690])
            ("article-display-x-face" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [87692 90159])
            ("article-decode-mime-words" function (:user-visible-flag t) nil [90161 90563])
            ("article-decode-charset" function
               (:user-visible-flag t
                :arguments ("prompt"))
                nil [90565 92116])
            ("article-decode-encoded-words" function nil nil [92118 93060])
            ("article-decode-group-name" function nil nil [93062 94097])
            ("article-decode-idna-rhs" function nil nil [94099 94924])
            ("article-de-quoted-unreadable" function
               (:user-visible-flag t
                :arguments ("force" "read-charset"))
                nil [94926 96099])
            ("article-de-base64-unreadable" function
               (:user-visible-flag t
                :arguments ("force" "read-charset"))
                nil [96101 97347])
            ("declare-function" code nil nil [97349 97409])
            ("article-decode-HZ" function (:user-visible-flag t) nil [97411 97619])
            ("article-unsplit-urls" function (:user-visible-flag t) nil [97621 98014])
            ("article-wash-html" function (:user-visible-flag t) nil [98016 98418])
            ("gnus-article-browse-html-temp-list" variable nil nil [98420 98559])
            ("gnus-article-browse-delete-temp" variable (:default-value (quote ask)) nil [98561 99090])
            ("gnus-article-browse-delete-temp-files" function (:arguments ("how")) nil [99167 100391])
            ("gnus-article-browse-html-save-cid-content" function (:arguments ("cid" "handles" "directory")) nil [100393 101480])
            ("gnus-article-browse-html-parts" function (:arguments ("list" "header")) nil [101482 109483])
            ("gnus-article-browse-html-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [109485 111556])
            ("article-hide-list-identifiers" function (:user-visible-flag t) nil [111558 112302])
            ("article-hide-pem" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [112304 113212])
            ("article-strip-banner" function (:user-visible-flag t) nil [113214 114186])
            ("article-really-strip-banner" function (:arguments ("banner")) nil [114188 114913])
            ("article-babel" function (:user-visible-flag t) nil [114915 115326])
            ("article-hide-signature" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [115328 115834])
            ("article-strip-headers-in-body" function (:user-visible-flag t) nil [115836 116071])
            ("article-strip-leading-blank-lines" function (:user-visible-flag t) nil [116073 116394])
            ("article-narrow-to-head" function nil nil [116396 116828])
            ("article-goto-body" function nil nil [116830 117152])
            ("article-strip-multiple-blank-lines" function (:user-visible-flag t) nil [117154 117865])
            ("article-strip-leading-space" function (:user-visible-flag t) nil [117867 118183])
            ("article-strip-trailing-space" function (:user-visible-flag t) nil [118185 118496])
            ("article-strip-blank-lines" function (:user-visible-flag t) nil [118498 118721])
            ("article-strip-all-blank-lines" function (:user-visible-flag t) nil [118723 118995])
            ("gnus-article-narrow-to-signature" function nil nil [118997 119906])
            ("gnus-article-search-signature" function nil nil [119908 120397])
            ("gnus-article-hidden-arg" function nil nil [120399 120584])
            ("gnus-article-check-hidden-text" function (:arguments ("type" "arg")) nil [120586 121076])
            ("gnus-article-hidden-text-p" function (:arguments ("type")) nil [121078 121496])
            ("gnus-article-show-hidden-text" function (:arguments ("type" "_dummy")) nil [121498 121898])
            ("article-time-units" variable
               (:constant-flag t
                :default-value (\` ((year \, (* 365.25 24 60 60)) (week \, (* 7 24 60 60)) (day \, (* 24 60 60)) (hour \, (* 60 60)) (minute . 60) (second . 1))))
                nil [121900 122118])
            ("gnus-article-forward-header" function nil nil [122120 122433])
            ("article-treat-date" function nil nil [122435 122651])
            ("article-date-ut" function
               (:user-visible-flag t
                :arguments ("type" "_highlight" "date-position"))
                nil [122653 125521])
            ("article-transform-date" function (:arguments ("date" "type" "bface" "eface")) nil [125523 127221])
            ("article-make-date-line" function (:arguments ("date" "type")) nil [127223 130089])
            ("article-lapsed-string" function (:arguments ("time" "max-segments")) nil [130091 131557])
            ("article-date-local" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [131559 131729])
            ("article-date-english" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [131731 131919])
            ("article-date-original" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [131921 132227])
            ("article-date-lapsed" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [132229 132412])
            ("article-date-combined-lapsed" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [132414 132615])
            ("article-update-date-lapsed" function nil nil [132617 134011])
            ("gnus-start-date-timer" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [134013 134353])
            ("gnus-stop-date-timer" function (:user-visible-flag t) nil [134355 134542])
            ("article-date-user" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [134544 134792])
            ("article-date-iso8601" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [134794 134957])
            ("gnus-article-save-original-date" function (:arguments ("forms")) nil [134959 135705])
            ("article-remove-leading-whitespace" function (:user-visible-flag t) nil [135928 136279])
            ("article-emphasize" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [136281 137512])
            ("gnus-article-setup-highlight-words" function (:arguments ("highlight-words")) nil [137514 138294])
            ("gnus-summary-article-menu" variable nil nil [138296 138330])
            ("gnus-summary-post-menu" variable nil nil [138331 138362])
            ("gnus-article-save" function (:arguments ("save-buffer" "file" "num")) nil [138387 139730])
            ("gnus-read-save-file-name" function (:arguments ("prompt" "filename" "function" "group" "headers" "variable" "dir-var")) nil [139732 142698])
            ("gnus-article-archive-name" function (:arguments ("_group")) nil [142700 143004])
            ("gnus-article-nndoc-name" function (:arguments ("group")) nil [143006 143233])
            ("gnus-summary-save-in-rmail" function (:arguments ("filename")) nil [143235 143912])
            ("gnus-summary-save-in-mail" function (:arguments ("filename")) nil [143914 144592])
            ("put" code nil nil [144594 144636])
            ("put" code nil nil [144637 144698])
            ("gnus-summary-save-in-file" function (:arguments ("filename" "overwrite")) nil [144699 145308])
            ("put" code nil nil [145310 145353])
            ("put" code nil nil [145354 145424])
            ("put" code nil nil [145425 145487])
            ("gnus-summary-write-to-file" function (:arguments ("filename")) nil [145488 145949])
            ("put" code nil nil [145951 145998])
            ("gnus-summary-save-body-in-file" function (:arguments ("filename" "overwrite")) nil [145999 146697])
            ("put" code nil nil [146699 146747])
            ("put" code nil nil [146748 146833])
            ("gnus-summary-write-body-to-file" function (:arguments ("filename")) nil [146834 147315])
            ("put" code nil nil [147317 147359])
            ("put" code nil nil [147360 147421])
            ("gnus-summary-save-in-pipe" function (:arguments ("command" "raw")) nil [147422 149574])
            ("gnus-summary-pipe-to-muttprint" function (:arguments ("command")) nil [149576 150016])
            ("gnus-capitalize-newsgroup" function (:arguments ("newsgroup")) nil [150055 150260])
            ("gnus-Numeric-save-name" function (:arguments ("newsgroup" "headers" "last-file")) nil [150262 151025])
            ("gnus-numeric-save-name" function (:arguments ("newsgroup" "headers" "last-file")) nil [151027 151763])
            ("gnus-plain-save-name" function (:arguments ("newsgroup" "_headers" "last-file")) nil [151765 152282])
            ("gnus-sender-save-name" function (:arguments ("_newsgroup" "headers" "_last-file")) nil [152284 152588])
            ("article-verify-x-pgp-sig" function (:user-visible-flag t) nil [152590 155195])
            ("article-verify-cancel-lock" function (:user-visible-flag t) nil [155197 155390])
            ("mapc" code nil nil [155412 157313])
            ("put" code nil nil [157348 157393])
            ("set-keymap-parent" code nil nil [157395 157450])
            ("gnus-define-keys" code nil nil [157452 158350])
            ("substitute-key-definition" code nil nil [158352 158445])
            ("gnus-article-send-map" variable nil nil [158447 158477])
            ("gnus-define-keys" code nil nil [158478 158632])
            ("gnus-article-make-menu-bar" function nil nil [158634 160297])
            ("bookmark-make-record-function" variable nil nil [160299 160337])
            ("shr-put-image-function" variable nil nil [160338 160369])
            ("define-derived-mode" code nil nil [160371 162550])
            ("gnus-article-setup-buffer" function nil nil [162552 165014])
            ("gnus-article-stop-animations" function nil nil [165016 165210])
            ("gnus-stop-downloads" function nil nil [165212 165314])
            ("gnus-article-set-window-start" function (:arguments ("line")) nil [165420 165843])
            ("gnus-tmp-internal-hook" variable nil nil [165845 165876])
            ("gnus-article-prepare" function (:arguments ("article" "all-headers" "_header")) nil [165878 170185])
            ("gnus-mime-display-attachment-buttons-in-header" variable nil nil [170187 170242])
            ("gnus-article-prepare-display" function nil nil [170259 170997])
            ("define-derived-mode" code nil nil [171037 171774])
            ("gnus-sticky-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [171776 173268])
            ("gnus-kill-sticky-article-buffer" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [173270 173650])
            ("gnus-kill-sticky-article-buffers" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [173652 174064])
            ("gnus-mime-button-line-format" variable (:default-value "%{%([%p. %d%T]%)%}%e
") nil [174107 174534])
            ("gnus-tmp-type" variable nil nil [174536 174558])
            ("gnus-tmp-type-long" variable nil nil [174559 174586])
            ("gnus-tmp-name" variable nil nil [174587 174609])
            ("gnus-tmp-description" variable nil nil [174610 174639])
            ("gnus-tmp-id" variable nil nil [174640 174660])
            ("gnus-tmp-length" variable nil nil [174661 174685])
            ("gnus-tmp-dots" variable nil nil [174686 174708])
            ("gnus-tmp-info" variable nil nil [174709 174731])
            ("gnus-tmp-pressed-details" variable nil nil [174732 174765])
            ("gnus-mime-button-line-format-alist" variable (:default-value (quote ((116 gnus-tmp-type 115) (84 gnus-tmp-type-long 115) (110 gnus-tmp-name 115) (100 gnus-tmp-description 115) (112 gnus-tmp-id 115) (108 gnus-tmp-length 100) (101 gnus-tmp-dots 115)))) nil [174767 175005])
            ("gnus-mime-button-commands" variable (:default-value (quote ((gnus-article-press-button "" "Toggle Display") (gnus-mime-view-part "v" "View Interactively...") (gnus-mime-view-part-as-type "t" "View As Type...") (gnus-mime-view-part-as-charset "C" "View As charset...") (gnus-mime-save-part "o" "Save...") (gnus-mime-save-part-and-strip "" "Save and Strip") (gnus-mime-replace-part "r" "Replace part") (gnus-mime-delete-part "d" "Delete part") (gnus-mime-copy-part "c" "View As Text, In Other Buffer") (gnus-mime-inline-part "i" "View As Text, In This Buffer") (gnus-mime-view-part-internally "E" "View Internally") (gnus-mime-view-part-externally "e" "View Externally") (gnus-mime-print-part "p" "Print") (gnus-mime-pipe-part "|" "Pipe To Command...") (gnus-mime-action-on-part "." "Take action on the part...")))) nil [175007 175871])
            ("gnus-article-mime-part-status" function nil nil [175873 176101])
            ("gnus-mime-button-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [mouse-2] (quote gnus-article-push-button)) (define-key map [down-mouse-3] (quote gnus-mime-button-menu)) (dolist (c gnus-mime-button-commands) (define-key map (cadr c) (car c))) map)) nil [176103 176376])
            ("easy-menu-define" code nil nil [176378 176578])
            ("gnus-url-button-commands" variable (:default-value (quote ((gnus-article-copy-string "u" "Copy URL to kill ring")))) nil [176580 176673])
            ("gnus-url-button-map" variable (:default-value (let ((map (make-sparse-keymap))) (dolist (c gnus-url-button-commands) (define-key map (cadr c) (car c))) map)) nil [176675 176830])
            ("easy-menu-define" code nil nil [176832 177029])
            ("gnus-bind-mm-vars" function (:arguments ("body")) nil [177031 178022])
            ("gnus-mime-button-menu" function
               (:user-visible-flag t
                :arguments ("event" "prefix"))
                nil [178024 178365])
            ("gnus-mime-view-all-parts" function
               (:user-visible-flag t
                :arguments ("handles"))
                nil [178367 178980])
            ("gnus-article-jump-to-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [178982 179882])
            ("gnus-mime-buttonized-part-id" variable nil nil [179884 180043])
            ("gnus-article-edit-part" function (:arguments ("handles" "current-id")) nil [180066 182392])
            ("gnus-mime-replace-part" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [182395 182750])
            ("gnus-mime-save-part-and-strip" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [182752 184202])
            ("gnus-mime-delete-part" function (:user-visible-flag t) nil [184328 186030])
            ("gnus-mime-save-part" function (:user-visible-flag t) nil [186032 186242])
            ("gnus-mime-pipe-part" function
               (:user-visible-flag t
                :arguments ("cmd"))
                nil [186244 186508])
            ("gnus-mime-view-part" function (:user-visible-flag t) nil [186510 186899])
            ("gnus-mime-view-part-as-type-internal" function nil nil [186901 187486])
            ("gnus-mime-view-part-as-type" function
               (:user-visible-flag t
                :arguments ("mime-type" "pred"))
                nil [187488 188810])
            ("gnus-mime-copy-part" function
               (:user-visible-flag t
                :arguments ("handle" "arg"))
                nil [188812 190813])
            ("gnus-mime-print-part" function
               (:user-visible-flag t
                :arguments ("handle" "filename"))
                nil [190815 191659])
            ("gnus-mime-inline-part" function
               (:user-visible-flag t
                :arguments ("handle" "arg"))
                nil [191661 194165])
            ("gnus-mime-set-charset-parameters" function (:arguments ("handle" "charset")) nil [194167 194891])
            ("gnus-mime-view-part-as-charset" function
               (:user-visible-flag t
                :arguments ("handle" "arg"))
                nil [194893 196334])
            ("gnus-mime-view-part-externally" function
               (:user-visible-flag t
                :arguments ("handle"))
                nil [196336 197062])
            ("gnus-mime-view-part-internally" function
               (:user-visible-flag t
                :arguments ("handle"))
                nil [197064 197807])
            ("gnus-mime-action-on-part" function
               (:user-visible-flag t
                :arguments ("action"))
                nil [197809 198153])
            ("gnus-article-part-wrapper" function (:arguments ("n" "function" "no-handle" "interactive")) nil [198155 201282])
            ("gnus-article-pipe-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [201284 201437])
            ("gnus-article-save-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [201439 201592])
            ("gnus-article-interactively-view-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [201594 201789])
            ("gnus-article-copy-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [201791 201951])
            ("gnus-article-view-part-as-charset" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [201953 202157])
            ("gnus-article-view-part-externally" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202159 202352])
            ("gnus-article-inline-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202354 202520])
            ("gnus-article-save-part-and-strip" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202522 202737])
            ("gnus-article-replace-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202739 202930])
            ("gnus-article-delete-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202932 203144])
            ("gnus-article-view-part-as-type" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [203146 203353])
            ("gnus-article-mime-match-handle-first" function (:arguments ("condition")) nil [203355 204005])
            ("gnus-article-view-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [204007 204790])
            ("gnus-article-mime-total-parts" function nil nil [204792 204951])
            ("gnus-mm-display-part" function (:arguments ("handle")) nil [204953 207880])
            ("gnus-article-goto-part" function (:arguments ("n")) nil [207882 209140])
            ("gnus-insert-mime-button" function (:arguments ("handle" "id" "displayed")) nil [209142 210896])
            ("gnus-widget-press-button" function (:arguments ("elems" "_el")) nil [210898 211011])
            ("gnus-displaying-mime" variable nil nil [211013 211046])
            ("gnus-display-mime" function (:arguments ("ihandles")) nil [211048 212980])
            ("gnus-mime-display-multipart-as-mixed" variable nil nil [212982 213273])
            ("gnus-mime-display-multipart-alternative-as-mixed" variable nil nil [213275 213471])
            ("gnus-mime-display-multipart-related-as-mixed" variable nil nil [213473 213850])
            ("gnus-mime-display-attachment-buttons-in-header" variable (:default-value t) nil [213852 214296])
            ("gnus-mime-display-part" function (:arguments ("handle")) nil [214298 215605])
            ("gnus-mime-part-function" function (:arguments ("handles")) nil [215607 215787])
            ("gnus-mime-display-mixed" function (:arguments ("handles")) nil [215789 215873])
            ("gnus-mime-display-single" function (:arguments ("handle")) nil [215875 218946])
            ("gnus-unbuttonized-mime-type-p" function (:arguments ("type")) nil [218948 219400])
            ("gnus-article-insert-newline" function nil nil [219402 219570])
            ("gnus-mime-display-alternative" function (:arguments ("handles" "preferred" "ibegend" "id")) nil [219572 222639])
            ("gnus-article-wash-status-strings" variable
               (:constant-flag t
                :default-value (let ((alist (quote ((cite "c" "Possible hidden citation text" " " "All citation text visible") (headers "h" "Hidden headers" " " "All headers visible.") (pgp "p" "Encrypted or signed message status hidden" " " "No hidden encryption nor digital signature status") (signature "s" "Signature has been hidden" " " "Signature is visible") (overstrike "o" "Overstrike (^H) characters applied" " " "No overstrike characters applied") (emphasis "e" "/*_Emphasis_*/ characters applied" " " "No /*_emphasis_*/ characters applied")))) result) (dolist (entry alist result) (let ((key (nth 0 entry)) (on (copy-sequence (nth 1 entry))) (on-help (nth 2 entry)) (off (copy-sequence (nth 3 entry))) (off-help (nth 4 entry))) (put-text-property 0 1 (quote help-echo) on-help on) (put-text-property 0 1 (quote help-echo) off-help off) (push (list key on off) result)))))
                nil [222641 223916])
            ("gnus-article-wash-status-entry" function (:arguments ("key" "value")) nil [223918 224074])
            ("gnus-article-wash-status" function nil nil [224076 225146])
            ("gnus-add-wash-type" function (:arguments ("type")) nil [225148 225276])
            ("gnus-delete-wash-type" function (:arguments ("type")) nil [225278 225432])
            ("gnus-add-image" function (:arguments ("category" "image")) nil [225434 225720])
            ("gnus-delete-images" function (:arguments ("category")) nil [225722 226038])
            ("defalias" code nil nil [226040 226120])
            ("gnus-article-maybe-hide-headers" function nil nil [226122 226465])
            ("declare-function" code nil nil [226467 226532])
            ("gnus-shr-put-image" function (:arguments ("data" "alt" "flags")) nil [226534 226992])
            ("gnus-article-mime-handles" function (:arguments ("alist" "id" "all")) nil [226994 228286])
            ("gnus-mime-buttonize-attachments-in-header" function
               (:user-visible-flag t
                :arguments ("interactive"))
                nil [228288 230273])
            ("gnus-output-to-file" function (:arguments ("file-name")) nil [230296 232173])
            ("gnus-narrow-to-page" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [232175 233936])
            ("gnus-article-goto-next-page" function (:user-visible-flag t) nil [233964 234163])
            ("gnus-article-goto-prev-page" function (:user-visible-flag t) nil [234166 234412])
            ("gnus-article-next-page" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [234857 235822])
            ("gnus-article-beginning-of-window" function nil nil [235824 236405])
            ("scroll-in-place" variable nil nil [236407 236431])
            ("gnus-article-next-page-1" function (:arguments ("lines")) nil [236433 236720])
            ("gnus-article-prev-page" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [236722 237431])
            ("gnus-article-only-boring-p" function nil nil [237433 238117])
            ("gnus-article-refer-article" function (:user-visible-flag t) nil [238119 238591])
            ("gnus-article-show-summary" function (:user-visible-flag t) nil [238593 238970])
            ("gnus-article-describe-briefly" function (:user-visible-flag t) nil [238972 239357])
            ("gnus-article-check-buffer" function nil nil [239359 239543])
            ("gnus-pick-mode" variable nil nil [239545 239568])
            ("gnus-article-read-summary-keys" function
               (:user-visible-flag t
                :arguments ("_arg" "key" "not-restore-window"))
                nil [239570 243553])
            ("gnus-article-read-summary-send-keys" function nil nil [243555 243698])
            ("gnus-article-describe-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [243700 244444])
            ("gnus-article-describe-key-briefly" function
               (:user-visible-flag t
                :arguments ("key" "insert"))
                nil [244446 245271])
            ("gnus-agent-summary-mode" variable nil nil [245326 245358])
            ("gnus-draft-mode" variable nil nil [245359 245383])
            ("help-xref-stack-item" variable nil nil [245384 245413])
            ("help-xref-following" variable nil nil [245414 245442])
            ("gnus-article-describe-bindings" function
               (:user-visible-flag t
                :arguments ("prefix"))
                nil [245444 247695])
            ("gnus-article-reply-with-original" function
               (:user-visible-flag t
                :arguments ("wide"))
                nil [247697 248393])
            ("gnus-article-wide-reply-with-original" function (:user-visible-flag t) nil [248395 248663])
            ("gnus-article-followup-with-original" function (:user-visible-flag t) nil [248665 249328])
            ("gnus-article-hide" function
               (:user-visible-flag t
                :arguments ("arg" "force"))
                nil [249330 249790])
            ("gnus-check-group-server" function nil nil [249792 250085])
            ("declare-function" code nil nil [250087 250146])
            ("gnus-request-article-this-buffer" function (:arguments ("article" "group")) nil [250148 256773])
            ("gnus-block-private-groups" function (:arguments ("group")) nil [256775 257070])
            ("gnus-blocked-images" function nil nil [257072 257221])
            ("gnus-article-edit-mode-hook" variable nil nil [257252 257383])
            ("gnus-article-edit-done-function" variable nil nil [257385 257429])
            ("gnus-article-edit-mode-map" variable nil nil [257431 257470])
            ("unless" code nil nil [257515 259051])
            ("easy-menu-define" code nil nil [259053 259776])
            ("define-derived-mode" code nil nil [259778 260386])
            ("gnus-article-edit" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [260388 261042])
            ("gnus-article-edit-article" function (:arguments ("start-func" "exit-func" "quiet")) nil [261044 261663])
            ("gnus-article-edit-done" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [261665 262753])
            ("gnus-flush-original-article-buffer" function nil nil [262755 262945])
            ("gnus-article-edit-exit" function (:user-visible-flag t) nil [262947 263721])
            ("gnus-article-edit-full-stops" function (:user-visible-flag t) nil [263723 264027])
            ("gnus-button-url-regexp" variable (:default-value (concat "\\b\\(\\(www\\.\\|\\(s?https?\\|ftp\\|file\\|gopher\\|" "nntp\\|news\\|telnet\\|wais\\|mailto\\|info\\):\\)" "\\(//[-a-z0-9_.]+:[0-9]*\\)?" (let ((chars "-a-z0-9_=#$@~%&*+\\/[:word:]") (punct "!?:;.,")) (concat "\\(?:" "[" chars punct "]+" "(" "[" chars punct "]+" "[" chars "]*)" "\\(?:" "[" chars punct "]+" "[" chars "]" "\\)?" "\\|" "[" chars punct "]+" "[" chars "]" "\\)")) "\\)")) nil [264139 264855])
            ("gnus-button-valid-fqdn-regexp" variable (:default-value "\\([-A-Za-z0-9]+\\.\\)+[A-Za-z]+") nil [264857 265048])
            ("gnus-button-valid-localpart-regexp" variable (:default-value "[a-z0-9$%(*-=?[_][^<>\")!;:,{}
	 @]*") nil [265122 265351])
            ("gnus-button-man-handler" variable (:default-value (quote manual-entry)) nil [265353 265700])
            ("gnus-button-mid-or-mail-regexp" variable (:default-value (concat "\\b\\(<?" gnus-button-valid-localpart-regexp "@" gnus-button-valid-fqdn-regexp ">?\\)\\b")) nil [265702 265985])
            ("gnus-button-prefer-mid-or-mail" variable (:default-value (quote gnus-button-mid-or-mail-heuristic)) nil [265987 266766])
            ("gnus-button-mid-or-mail-heuristic-alist" variable (:default-value (quote ((-10.0 . ".+\\$.+@") (-10.0 . "#") (-10.0 . "\\*") (-5.0 . "\\+[^+]*\\+.*@") (-5.0 . "@[Nn][Ee][Ww][Ss]") (-5.0 . "@.*[Dd][Ii][Aa][Ll][Uu][Pp]") (-1.0 . "^[^a-z]+@") (-5.0 . "\\.[0-9][0-9]+.*@") (-5.0 . "[a-z].*[A-Z].*[a-z].*[A-Z].*@") (-3.0 . "[A-Z][A-Z][a-z][a-z].*@") (-5.0 . "\\...?.?@") (-2.0 . "^[0-9]") (-1.0 . "^[0-9][0-9]") (-3.0 . "^[0-9][0-9a-fA-F][0-9a-fA-F][^0-9a-fA-F]") (-5.0 . "^[0-9][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][^0-9a-fA-F]") (-3.0 . "[0-9][0-9][0-9][0-9][0-9][^0-9].*@") (-3.0 . "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][^0-9].*@") (-3.0 . "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].*@") (25.0 . "-dated-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]+.*@") (-20.0 . "\\.fsf@") (-20.0 . "^slrn") (-20.0 . "^Pine") (-20.0 . "^alpine\\.") (-20.0 . "_-_") (-20.0 . "\\.ln@") (-30.0 . "@ID-[0-9]+\\.[a-zA-Z]+\\.dfncis\\.de") (-30.0 . "@4[Aa][Xx]\\.com") (10.0 . "^[^0-9]+@") (3.0 . "^[^0-9]+[0-9][0-9]?[0-9]?@") (3.0 . "@stud") (2.0 . "[a-z][a-z][._-][A-Z][a-z].*@") (0.5 . "^[A-Z][a-z]") (0.5 . "^[A-Z][a-z][a-z]") (1.5 . "^[A-Z][a-z][A-Z][a-z][^a-z]") (2.0 . "^[A-Z][a-z][A-Z][a-z][a-z][^a-z]")))) nil [266768 269077])
            ("gnus-button-mid-or-mail-heuristic" function (:arguments ("mid-or-mail")) nil [269079 271738])
            ("gnus-button-handle-mid-or-mail" function (:arguments ("mid-or-mail")) nil [271740 272711])
            ("gnus-button-handle-custom" function (:arguments ("fun" "arg")) nil [272713 272985])
            ("gnus-button-handle-describe-prefix" variable (:default-value "^\\(C-h\\|<?[Ff]1>?\\)") nil [272987 273055])
            ("gnus-button-handle-describe-function" function (:arguments ("url")) nil [273057 273286])
            ("gnus-button-handle-describe-variable" function (:arguments ("url")) nil [273288 273517])
            ("gnus-button-handle-symbol" function (:arguments ("url")) nil [273519 273851])
            ("gnus-button-handle-describe-key" function (:arguments ("url")) nil [273853 274218])
            ("gnus-button-handle-apropos" function (:arguments ("url")) nil [274220 274403])
            ("gnus-button-handle-apropos-command" function (:arguments ("url")) nil [274405 274607])
            ("gnus-button-handle-apropos-variable" function (:arguments ("url")) nil [274609 274813])
            ("gnus-button-handle-apropos-documentation" function (:arguments ("url")) nil [274815 275029])
            ("gnus-button-handle-library" function (:arguments ("url")) nil [275031 275379])
            ("gnus-button-man-level" variable (:default-value 5) nil [275381 275934])
            ("gnus-button-emacs-level" variable (:default-value 5) nil [275936 276511])
            ("gnus-button-message-level" variable (:default-value 5) nil [276513 276837])
            ("gnus-button-browse-level" variable (:default-value 5) nil [276839 277168])
            ("gnus-button-alist" variable (:default-value (quote (("<\\(url:[>
	 ]*?\\)?\\(nntp\\|news\\):[>
	 ]*\\([^>
	 ]*@[^>
	 ]*\\)>" 0 (>= gnus-button-message-level 0) gnus-button-handle-news 3) ((concat "\\b\\(nntp\\|news\\):\\(" gnus-button-valid-localpart-regexp "@[a-z0-9.-]+[a-z]\\)") 0 t gnus-button-handle-news 2) ("\\(\\b<\\(url:[>
	 ]*\\)?\\(nntp\\|news\\):[>
	 ]*\\(//\\)?\\([^>
	 ]*\\)>\\)" 1 (>= gnus-button-message-level 0) gnus-button-fetch-group 5) ("\\b\\(nntp\\|news\\):\\(//\\)?\\([^'\">
	 ]+\\)" 0 (>= gnus-button-message-level 0) gnus-button-fetch-group 3) ("\\bmid:\\(//\\)?\\([^'\">
	 ]+@[^'\">
	 /]+\\)" 0 (>= gnus-button-message-level 0) gnus-button-message-id 2) ("\\bin\\( +article\\| +message\\)? +\\(<\\([^
 @<>]+@[^
 @<>]+\\)>\\)" 2 (>= gnus-button-message-level 0) gnus-button-message-id 3) ("\\b\\(mid\\|message-id\\):? +\\(<\\([^
 @<>]+@[^
 @<>]+\\)>\\)" 2 (>= gnus-button-message-level 0) gnus-button-message-id 3) ("\\(<URL: *\\)mailto: *\\([^> 
	]+\\)>" 0 (>= gnus-button-message-level 0) gnus-url-mailto 2) ("\\bmailto:\\([-a-z.@_+0-9%=?&/]+\\)" 0 (>= gnus-button-message-level 0) gnus-url-mailto 1) ("\\bmailto:\\([^ 
	]+\\)" 0 (>= gnus-button-message-level 0) gnus-url-mailto 1) ("\\binfo://?\\([^'\">
	]+\\)" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url 1) ("\\binfo://\\([^'\">
	 ]+\\)" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url 1) ("\\binfo:\\([^('
	 \"><][^'
	 \"><]*\\)" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url-gnome 1) ("<\\(info:\\(([^)]+)[^>
]*\\)\\)>" 1 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url-kde 2) ("\\((Info-goto-node\\|(info\\)[ 	
]*\\(\"[^\"]*\"\\))" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url 2) ("\\b\\(C-h\\|<?[Ff]1>?\\)[ 	
]+i[ 	
]+d?[ 	
]?m[ 	
]+[^ ]+ ?[^ ]+[ 	
]+RET\\([ 	
]+i[ 	
]+[^ ]+ ?[^ ]+[ 	
]+RET\\([ 	
,]*\\)\\)?" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-keystrokes 0) ("M-x[ 	
]\\(customize-[^ ]+\\)[ 	
]RET[ 	
]\\([^ ]+\\)[ 	
]RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-custom 1 2) ("M-x[ 	
]+apropos[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos 1) ("M-x[ 	
]+apropos-command[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos-command 1) ("M-x[ 	
]+apropos-variable[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos-variable 1) ("M-x[ 	
]+apropos-documentation[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos-documentation 1) ("/\\([a-z][-a-z0-9]+\\.el\\)\\>[^.?]" 1 (>= gnus-button-emacs-level 8) gnus-button-handle-library 1) ("['`‘]\\([a-z][-a-z0-9]+\\.el\\)['’]" 1 (>= gnus-button-emacs-level 8) gnus-button-handle-library 1) ("['`‘]\\([a-z][a-z0-9]+-[a-z0-9]+-[-a-z0-9]*[a-z]\\|\\(gnus\\|message\\)-[-a-z]+\\)['’]" 0 (>= gnus-button-emacs-level 8) gnus-button-handle-symbol 1) ("['`‘]\\([a-z][a-z0-9]+-[a-z]+\\)['’]" 0 (>= gnus-button-emacs-level 9) gnus-button-handle-symbol 1) ("(setq[ 	
]+\\([a-z][a-z0-9]+-[-a-z0-9]+\\)[ 	
]+.+)" 1 (>= gnus-button-emacs-level 7) gnus-button-handle-describe-variable 1) ("\\bM-x[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 1 (>= gnus-button-emacs-level 7) gnus-button-handle-describe-function 1) ("\\b\\(C-h\\|<?[Ff]1>?\\)[ 	
]+f[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-describe-function 2) ("\\b\\(C-h\\|<?[Ff]1>?\\)[ 	
]+v[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-describe-variable 2) ("['`‘]\\(\\(C-h\\|<?[Ff]1>?\\)[ 	
]+k[ 	
]+\\([^'’]+\\)\\)['’]" 1 (>= gnus-button-emacs-level 1) gnus-button-handle-describe-key 3) ("<URL: *\\([^
<>]*\\)>" 1 (>= gnus-button-browse-level 0) gnus-button-embedded-url 1) ("\"URL: *\\([^
\"]*\\)\"" 1 (>= gnus-button-browse-level 0) gnus-button-embedded-url 1) (gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("\\b\\([a-z][a-z]+([1-9])\\)\\W" 0 (and (>= gnus-button-man-level 1) (< gnus-button-man-level 3)) gnus-button-handle-man 1) ("\\b\\([a-z][-_.a-z0-9]+([1-9])\\)\\W" 0 (and (>= gnus-button-man-level 3) (< gnus-button-man-level 5)) gnus-button-handle-man 1) ("\\b\\(\\(?:[a-z][-+_.:a-z0-9]+([1-9][X1a-z]*)\\)\\|\\b\\(?:X([1-9])\\)\\)\\W" 0 (>= gnus-button-man-level 5) gnus-button-handle-man 1) ("^--- \\([^ .]+\\.el\\).*
.*
@@ -?\\([0-9]+\\)" 1 (>= gnus-button-message-level 4) gnus-button-patch 1 2) ("^\\*\\*\\* \\([^ .]+\\.el\\).*
.*
\\*+
\\*\\*\\* \\([0-9]+\\)" 1 (>= gnus-button-message-level 4) gnus-button-patch 1 2) (gnus-button-mid-or-mail-regexp 0 (>= gnus-button-message-level 5) gnus-button-handle-mid-or-mail 1)))) nil [277170 284985])
            ("put" code nil nil [284986 285034])
            ("gnus-header-button-alist" variable (:default-value (quote (("^\\(References\\|Message-I[Dd]\\|^In-Reply-To\\):" "<[^<>]+>" 0 (>= gnus-button-message-level 0) gnus-button-message-id 0) ("^\\(From\\|Reply-To\\):" ": *\\(.+\\)$" 1 (>= gnus-button-message-level 0) gnus-button-reply 1) ("^\\(Cc\\|To\\):" "[^ 	
<>,()\"]+@[^ 	
<>,()\"]+" 0 (>= gnus-button-message-level 0) gnus-msg-mail 0) ("^X-[Uu][Rr][Ll]:" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("^Subject:" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("^[^:]+:" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("^OpenPGP:.*url=" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) gnus-button-openpgp 0) ("^[^:]+:" "\\bmailto:\\([-a-z.@_+0-9%=?&/]+\\)" 0 (>= gnus-button-message-level 0) gnus-url-mailto 1) ("^[^:]+:" "\\(<\\(url: \\)?\\(nntp\\|news\\):\\([^>
 ]*\\)>\\)" 1 (>= gnus-button-message-level 0) gnus-button-message-id 4)))) nil [285036 286731])
            ("put" code nil nil [286732 286787])
            ("gnus-article-push-button" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [286804 287319])
            ("gnus-article-press-button" function (:user-visible-flag t) nil [287321 287678])
            ("gnus-article-highlight" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [287680 288193])
            ("gnus-article-highlight-some" function
               (:user-visible-flag t
                :arguments ("_force"))
                nil [288195 288600])
            ("gnus-article-highlight-headers" function (:user-visible-flag t) nil [288602 289662])
            ("gnus-article-highlight-signature" function (:user-visible-flag t) nil [289664 290361])
            ("gnus-button-in-region-p" function (:arguments ("b" "e" "prop")) nil [290363 290487])
            ("gnus-article-add-buttons" function (:user-visible-flag t) nil [290489 291725])
            ("gnus-article-extend-url-button" function (:arguments ("beg" "start" "end")) nil [291727 293839])
            ("gnus-article-add-buttons-to-head" function (:user-visible-flag t) nil [293883 294829])
            ("gnus-article-add-button" function (:arguments ("from" "to" "fun" "data" "text")) nil [294856 295451])
            ("gnus-article-copy-string" function (:user-visible-flag t) nil [295453 295775])
            ("gnus-article-set-globals" function nil nil [295802 295913])
            ("gnus-signature-toggle" function (:arguments ("end")) nil [295915 296598])
            ("gnus-button-push" function (:arguments ("marker-and-entry")) nil [296600 297987])
            ("gnus-parse-news-url" function (:arguments ("url")) nil [297989 298881])
            ("nntp-port-number" variable nil nil [298883 298908])
            ("gnus-button-handle-news" function (:arguments ("url")) nil [298910 299544])
            ("gnus-button-patch" function
               (:user-visible-flag t
                :arguments ("library" "line"))
                nil [299546 299887])
            ("gnus-button-handle-man" function (:arguments ("url")) nil [299889 300222])
            ("gnus-button-handle-info-url" function (:arguments ("url")) nil [300224 300768])
            ("gnus-button-handle-info-url-gnome" function (:arguments ("url")) nil [300770 301170])
            ("gnus-button-handle-info-url-kde" function (:arguments ("url")) nil [301172 301299])
            ("declare-function" code nil nil [301333 301395])
            ("declare-function" code nil nil [301396 301443])
            ("gnus-button-handle-info-keystrokes" function (:arguments ("url")) nil [301445 302539])
            ("pgg-snarf-keys-region" function (:prototype-flag t) nil [302541 302580])
            ("declare-function" code nil nil [302644 302713])
            ("gnus-button-openpgp" function (:arguments ("url")) nil [302715 302982])
            ("gnus-button-message-id" function (:arguments ("message-id")) nil [302984 303137])
            ("gnus-button-fetch-group" function (:arguments ("address" "_ignore")) nil [303139 304121])
            ("gnus-url-parse-query-string" function (:arguments ("query" "downcase")) nil [304123 304741])
            ("gnus-url-mailto" function (:arguments ("url")) nil [304743 305706])
            ("gnus-button-embedded-url" function (:arguments ("address")) nil [305708 305837])
            ("gnus-next-page-line-format" variable (:default-value "%{%(Next page...%)%}
") nil [305885 305945])
            ("gnus-prev-page-line-format" variable (:default-value "%{%(Previous page...%)%}
") nil [305946 306010])
            ("gnus-prev-page-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [mouse-2] (quote gnus-button-prev-page)) (define-key map "" (quote gnus-button-prev-page)) map)) nil [306012 306187])
            ("gnus-next-page-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [mouse-2] (quote gnus-button-next-page)) (define-key map "" (quote gnus-button-next-page)) map)) nil [306189 306364])
            ("gnus-insert-prev-page-button" function nil nil [306366 306961])
            ("gnus-button-next-page" function
               (:user-visible-flag t
                :arguments ("_args" "_more-args"))
                nil [306963 307216])
            ("gnus-button-prev-page" function
               (:user-visible-flag t
                :arguments ("_args" "_more-args"))
                nil [307218 307471])
            ("gnus-insert-next-page-button" function nil nil [307473 308138])
            ("gnus-article-button-next-page" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [308140 308383])
            ("gnus-article-button-prev-page" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [308385 308628])
            ("gnus-decode-header-methods" variable (:default-value (quote (mail-decode-encoded-word-region))) nil [308630 309128])
            ("gnus-decode-header-methods-cache" variable nil nil [309130 309175])
            ("gnus-multi-decode-header" function (:arguments ("start" "end")) nil [309177 309944])
            ("gnus-inhibit-article-treatments" variable nil nil [309989 310033])
            ("part-number" variable nil nil [310057 310077])
            ("total-parts" variable nil nil [310129 310149])
            ("gnus-treat-type" variable nil nil [310201 310225])
            ("gnus-treat-condition" variable nil nil [310226 310255])
            ("gnus-treat-length" variable nil nil [310256 310282])
            ("gnus-treat-article" function (:arguments ("condition" "part-num" "total" "type")) nil [310284 311389])
            ("gnus-treat-predicate" function (:arguments ("val")) nil [311391 312354])
            ("gnus-article-encrypt-body" function
               (:user-visible-flag t
                :arguments ("protocol" "n"))
                nil [312356 315139])
            ("gnus-mime-security-button-line-format" variable (:default-value "%{%([[%t:%i]%D]%)%}
") nil [315141 315340])
            ("gnus-mime-security-button-end-line-format" variable (:default-value "%{%([[End of %t]%D]%)%}
") nil [315342 315549])
            ("gnus-mime-security-button-line-format-alist" variable (:default-value (quote ((116 gnus-tmp-type 115) (105 gnus-tmp-info 115) (100 gnus-tmp-details 115) (68 gnus-tmp-pressed-details 115)))) nil [315551 315722])
            ("gnus-mime-security-button-commands" variable (:default-value (quote ((gnus-article-press-button "" "Show Detail") (undefined "v") (undefined "t") (undefined "C") (gnus-mime-security-save-part "o" "Save...") (undefined "") (undefined "r") (undefined "d") (undefined "c") (undefined "i") (undefined "E") (undefined "e") (undefined "p") (gnus-mime-security-pipe-part "|" "Pipe To Command...") (undefined ".")))) nil [315724 316171])
            ("gnus-mime-security-button-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [mouse-2] (quote gnus-article-push-button)) (define-key map [down-mouse-3] (quote gnus-mime-security-button-menu)) (dolist (c gnus-mime-security-button-commands) (define-key map (cadr c) (car c))) map)) nil [316173 316473])
            ("easy-menu-define" code nil nil [316475 316769])
            ("gnus-mime-security-button-menu" function
               (:user-visible-flag t
                :arguments ("event" "prefix"))
                nil [316771 317142])
            ("gnus-mime-security-details-buffer" variable nil nil [317144 317190])
            ("gnus-mime-security-button-pressed" variable nil nil [317192 317238])
            ("gnus-mime-security-show-details-inline" variable (:default-value t) nil [317240 317341])
            ("gnus-mime-security-verify-or-decrypt" function (:arguments ("handle")) nil [317343 318103])
            ("gnus-mime-security-show-details" function (:arguments ("handle")) nil [318105 319443])
            ("gnus-mime-security-press-button" function (:arguments ("handle")) nil [319445 319669])
            ("gnus-insert-mime-security-button" function (:arguments ("handle" "_displayed")) nil [319671 321384])
            ("gnus-mime-display-security" function (:arguments ("handle")) nil [321386 322019])
            ("gnus-mime-security-run-function" function (:arguments ("function")) nil [322021 322703])
            ("gnus-mime-security-save-part" function (:user-visible-flag t) nil [322705 322850])
            ("gnus-mime-security-pipe-part" function (:user-visible-flag t) nil [322852 323010])
            ("gnus-art" package nil nil [323012 323031])
            ("run-hooks" code nil nil [323033 323064]))          
      :file "gnus-art.el"
      :pointmax 323092
      :fsize 323109
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 182392 . 182393) (symbol 180046 . 180063) (open-paren 180045 . 180046) (close-paren 157313 . 157314) (symbol 155393 . 155409) (open-paren 155392 . 155393) (close-paren 916 . 917) (symbol 883 . 900) (open-paren 882 . 883)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [861 876])
            ("gnus-cache" include nil nil [877 898])
            ("nnmail" include nil nil [899 916])
            ("nnvirtual" include nil nil [917 937])
            ("gnus-sum" include nil nil [938 957])
            ("gnus-score" include nil nil [958 979])
            ("gnus-srvr" include nil nil [980 1000])
            ("gnus-util" include nil nil [1001 1021])
            ("timer" include nil nil [1022 1038])
            ("cl" include nil nil [1060 1073])
            ("gnus-server-update-server" function (:prototype-flag t) nil [1076 1125])
            ("gnus-agent-customize-category" function (:prototype-flag t) nil [1126 1178])
            ("gnus-agent-directory" variable (:default-value (nnheader-concat gnus-directory "agent/")) nil [1180 1341])
            ("gnus-agent-plugged-hook" variable nil nil [1343 1462])
            ("gnus-agent-unplugged-hook" variable nil nil [1464 1587])
            ("gnus-agent-fetched-hook" variable nil nil [1589 1727])
            ("gnus-agent-handle-level" variable (:default-value gnus-level-subscribed) nil [1729 1901])
            ("gnus-agent-expire-days" variable (:default-value 7) nil [1903 2116])
            ("gnus-agent-expire-all" variable nil nil [2118 2302])
            ("gnus-agent-group-mode-hook" variable nil nil [2304 2422])
            ("gnus-agent-summary-mode-hook" variable nil nil [2424 2546])
            ("gnus-agent-server-mode-hook" variable nil nil [2548 2669])
            ("gnus-agent-confirmation-function" variable (:default-value (quote y-or-n-p)) nil [2671 2826])
            ("gnus-agent-synchronize-flags" variable nil nil [2828 3265])
            ("gnus-agent-go-online" variable (:default-value (quote ask)) nil [3267 3546])
            ("gnus-agent-mark-unread-after-downloaded" variable (:default-value t) nil [3548 3720])
            ("gnus-agent-download-marks" variable (:default-value (quote (download))) nil [3722 3876])
            ("gnus-agent-consider-all-articles" variable nil nil [3878 4438])
            ("gnus-agent-max-fetch-size" variable (:default-value 10000000) nil [4440 4679])
            ("gnus-agent-enable-expiration" variable (:default-value (quote ENABLE)) nil [4681 5250])
            ("gnus-agent-expire-unagentized-dirs" variable (:default-value t) nil [5252 5570])
            ("gnus-agent-auto-agentize-methods" variable nil nil [5572 5880])
            ("gnus-agent-queue-mail" variable (:default-value t) nil [5882 6249])
            ("gnus-agent-prompt-send-queue" variable nil nil [6251 6429])
            ("gnus-agent-article-alist-save-format" variable (:default-value 1) nil [6431 6925])
            ("gnus-agent-history-buffers" variable nil nil [6951 6990])
            ("gnus-agent-buffer-alist" variable nil nil [6991 7027])
            ("gnus-agent-article-alist" variable nil nil [7028 7719])
            ("gnus-agent-group-alist" variable nil nil [7720 7755])
            ("gnus-category-alist" variable nil nil [7756 7788])
            ("gnus-agent-current-history" variable nil nil [7789 7828])
            ("gnus-agent-overview-buffer" variable nil nil [7829 7868])
            ("gnus-category-predicate-cache" variable nil nil [7869 7911])
            ("gnus-category-group-cache" variable nil nil [7912 7950])
            ("gnus-agent-spam-hashtb" variable nil nil [7951 7986])
            ("gnus-agent-file-name" variable nil nil [7987 8020])
            ("gnus-agent-file-coding-system" variable (:default-value (quote raw-text)) nil [8021 8069])
            ("gnus-agent-file-loading-cache" variable nil nil [8070 8112])
            ("gnus-agent-total-fetched-hashtb" variable nil nil [8113 8157])
            ("gnus-agent-inhibit-update-total-fetched-for" variable nil nil [8158 8214])
            ("gnus-agent-need-update-total-fetched-for" variable nil nil [8215 8268])
            ("gnus-headers" variable nil nil [8291 8312])
            ("gnus-score" variable nil nil [8313 8332])
            ("gnus-open-agent" function nil nil [8353 8640])
            ("gnus-agent-create-buffer" function nil nil [8642 8920])
            ("gnus-add-shutdown" code nil nil [8922 8965])
            ("gnus-close-agent" function nil nil [8967 9144])
            ("gnus-agent-with-refreshed-group" function (:arguments ("group" "body")) nil [9177 9685])
            ("gnus-agent-read-file" function (:arguments ("file")) nil [9687 9903])
            ("gnus-agent-method" function nil nil [9905 10086])
            ("gnus-agent-directory" function nil nil [10088 10266])
            ("gnus-agent-lib-file" function (:arguments ("file")) nil [10268 10470])
            ("gnus-agent-cat-set-property" function (:arguments ("category" "property" "value")) nil [10472 10985])
            ("gnus-agent-cat-defaccessor" function (:arguments ("name" "prop-name")) nil [11008 11636])
            ("gnus-agent-cat-name" function (:arguments ("category")) nil [11642 11702])
            ("gnus-agent-cat-defaccessor" code nil nil [11704 11796])
            ("gnus-agent-cat-defaccessor" code nil nil [11797 11892])
            ("gnus-agent-cat-defaccessor" code nil nil [11893 11977])
            ("gnus-agent-cat-defaccessor" code nil nil [11978 12066])
            ("gnus-agent-cat-defaccessor" code nil nil [12067 12157])
            ("gnus-agent-cat-defaccessor" code nil nil [12158 12249])
            ("gnus-agent-cat-defaccessor" code nil nil [12250 12337])
            ("gnus-agent-cat-defaccessor" code nil nil [12338 12425])
            ("gnus-agent-cat-defaccessor" code nil nil [12426 12509])
            ("gnus-agent-cat-defaccessor" code nil nil [12510 12613])
            ("defsetf" code nil nil [12813 12870])
            ("gnus-agent-set-cat-groups" function (:arguments ("category" "groups")) nil [12872 14353])
            ("gnus-agent-cat-make" function (:arguments ("name" "default-agent-predicate")) nil [14355 14498])
            ("gnus-agent-read-group" function nil nil [14500 14772])
            ("gnus-agent-start-fetch" function nil nil [14805 14922])
            ("gnus-agent-stop-fetch" function nil nil [14924 15090])
            ("gnus-agent-with-fetch" function (:arguments ("forms")) nil [15092 15284])
            ("put" code nil nil [15286 15338])
            ("put" code nil nil [15339 15393])
            ("gnus-agent-append-to-list" function (:arguments ("tail" "value")) nil [15395 15493])
            ("gnus-agent-message" function (:arguments ("level" "args")) nil [15495 15600])
            ("gnus-agent-mode-hook" variable nil nil [15632 15706])
            ("gnus-agent-mode" variable nil nil [15708 15736])
            ("gnus-agent-mode-status" variable (:default-value (quote (gnus-agent-mode " Plugged"))) nil [15737 15798])
            ("gnus-agent-mode" function nil nil [15800 17110])
            ("gnus-agent-group-mode-map" variable (:default-value (make-sparse-keymap)) nil [17112 17167])
            ("gnus-define-keys" code nil nil [17168 17505])
            ("gnus-agent-group-make-menu-bar" function nil nil [17507 18238])
            ("gnus-agent-summary-mode-map" variable (:default-value (make-sparse-keymap)) nil [18240 18297])
            ("gnus-define-keys" code nil nil [18298 18606])
            ("gnus-agent-summary-make-menu-bar" function nil nil [18608 19133])
            ("gnus-agent-server-mode-map" variable (:default-value (make-sparse-keymap)) nil [19135 19191])
            ("gnus-define-keys" code nil nil [19192 19331])
            ("gnus-agent-server-make-menu-bar" function nil nil [19333 19654])
            ("gnus-agent-make-mode-line-string" function (:arguments ("string" "mouse-button" "mouse-func")) nil [19656 19860])
            ("gnus-agent-toggle-plugged" function
               (:user-visible-flag t
                :arguments ("set-to"))
                nil [19862 20864])
            ("gnus-agent-while-plugged" function (:arguments ("body")) nil [20866 21107])
            ("put" code nil nil [21109 21164])
            ("put" code nil nil [21165 21222])
            ("gnus-agent-close-connections" function nil nil [21224 21421])
            ("gnus-unplugged" function (:user-visible-flag t) nil [21438 21540])
            ("gnus-plugged" function (:user-visible-flag t) nil [21557 21653])
            ("gnus-slave-unplugged" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [21670 21820])
            ("gnus-agentize" function (:user-visible-flag t) nil [21837 23058])
            ("gnus-agent-queue-setup" function (:arguments ("group-name")) nil [23060 23643])
            ("gnus-agent-send-mail" function nil nil [23645 24105])
            ("gnus-agent-insert-meta-information" function (:arguments ("type" "method")) nil [24107 24657])
            ("gnus-agent-restore-gcc" function nil nil [24659 24917])
            ("gnus-agent-any-covered-gcc" function nil nil [24919 25348])
            ("gnus-agent-possibly-save-gcc" function nil nil [25365 25696])
            ("gnus-agent-possibly-do-gcc" function nil nil [25698 25852])
            ("gnus-agent-fetch-groups" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [25887 26139])
            ("gnus-agent-fetch-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [26141 26724])
            ("gnus-agent-add-group" function
               (:user-visible-flag t
                :arguments ("category" "arg"))
                nil [26726 27435])
            ("gnus-agent-remove-group" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [27437 27808])
            ("gnus-agent-synchronize-flags" function (:user-visible-flag t) nil [27810 28112])
            ("gnus-agent-possibly-synchronize-flags" function (:user-visible-flag t) nil [28114 28459])
            ("gnus-agent-synchronize-flags-server" function (:arguments ("method")) nil [28461 29622])
            ("gnus-agent-possibly-synchronize-flags-server" function (:arguments ("method")) nil [29624 30127])
            ("gnus-agent-rename-group" function (:arguments ("old-group" "new-group")) nil [30144 31633])
            ("gnus-agent-delete-group" function (:arguments ("group")) nil [31650 32582])
            ("gnus-agent-add-server" function (:user-visible-flag t) nil [32618 33289])
            ("gnus-agent-remove-server" function (:user-visible-flag t) nil [33291 33929])
            ("gnus-agent-read-servers" function nil nil [33931 34455])
            ("gnus-agent-read-servers-validate" function nil nil [34457 35162])
            ("gnus-agent-read-servers-validate-native" function (:arguments ("native-method")) nil [35164 35479])
            ("gnus-agent-write-servers" function nil nil [35481 35884])
            ("gnus-agent-mark-article" function
               (:user-visible-flag t
                :arguments ("n" "unmark"))
                nil [35916 36591])
            ("gnus-agent-unmark-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [36593 36866])
            ("gnus-agent-toggle-mark" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [36868 37143])
            ("gnus-summary-set-agent-mark" function (:arguments ("article" "unmark")) nil [37145 37953])
            ("gnus-agent-get-undownloaded-list" function nil nil [37970 40236])
            ("gnus-agent-catchup" function (:user-visible-flag t) nil [40238 40867])
            ("gnus-agent-summary-fetch-series" function (:user-visible-flag t) nil [40869 41956])
            ("gnus-agent-summary-fetch-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [41958 43485])
            ("gnus-agent-fetch-selected-article" function nil nil [43487 44060])
            ("gnus-agent-synchronize-group-flags" function (:arguments ("group" "actions" "server")) nil [44094 45871])
            ("gnus-agent-save-active" function (:arguments ("method" "groups-p")) nil [45873 46646])
            ("gnus-agent-write-active" function (:arguments ("file" "new")) nil [46648 47049])
            ("gnus-agent-possibly-alter-active" function (:arguments ("group" "active" "info")) nil [47066 49313])
            ("gnus-agent-save-group-info" function (:arguments ("method" "group" "active")) nil [49315 50581])
            ("gnus-agent-get-group-info" function (:arguments ("method" "group")) nil [50583 51579])
            ("gnus-agent-decoded-group-names" variable nil nil [51581 51677])
            ("gnus-agent-decoded-group-name" function (:arguments ("group")) nil [51679 52008])
            ("gnus-agent-group-path" function (:arguments ("group")) nil [52010 52695])
            ("gnus-agent-group-pathname" function (:arguments ("group")) nil [52697 53174])
            ("gnus-agent-get-function" function (:arguments ("method")) nil [53176 53299])
            ("gnus-agent-covered-methods" function nil nil [53301 53475])
            ("gnus-agent-history-buffer" function nil nil [53500 53599])
            ("gnus-agent-open-history" function nil nil [53601 54107])
            ("gnus-agent-close-history" function nil nil [54109 54378])
            ("gnus-agent-fetch-articles" function (:arguments ("group" "articles")) nil [54402 60693])
            ("gnus-agent-unfetch-articles" function (:arguments ("group" "articles")) nil [60695 61978])
            ("gnus-agent-crosspost" function (:arguments ("crosses" "article" "date")) nil [61980 63216])
            ("gnus-agent-backup-overview-buffer" function nil nil [63218 63707])
            ("gnus-agent-check-overview-buffer" function (:arguments ("buffer")) nil [63709 65118])
            ("gnus-agent-flush-server" function (:arguments ("server-or-method")) nil [65120 65699])
            ("gnus-agent-flush-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [65701 66796])
            ("gnus-agent-flush-cache" function (:user-visible-flag t) nil [66798 67883])
            ("gnus-agent-find-parameter" function (:arguments ("group" "symbol")) nil [67900 68767])
            ("gnus-agent-fetch-headers" function (:arguments ("group")) nil [68769 74173])
            ("gnus-agent-read-article-number" function nil nil [74175 74987])
            ("gnus-agent-copy-nov-line" function (:arguments ("article")) nil [74989 75590])
            ("gnus-agent-braid-nov" function (:arguments ("articles" "file")) nil [75592 78347])
            ("gnus-agent-read-agentview" variable nil nil [78441 78475])
            ("gnus-agent-load-alist" function (:arguments ("group")) nil [78477 78968])
            ("gnus-agent-read-agentview" function (:arguments ("file")) nil [78970 81134])
            ("gnus-agent-save-alist" function (:arguments ("group" "articles" "state")) nil [81136 83111])
            ("gnus-agent-article-local" variable nil nil [83113 83150])
            ("gnus-agent-article-local-times" variable nil nil [83151 83194])
            ("gnus-agent-file-loading-local" variable nil nil [83195 83237])
            ("gnus-agent-load-local" function (:arguments ("method")) nil [83239 83998])
            ("gnus-agent-read-and-cache-local" function (:arguments ("file")) nil [84000 84403])
            ("gnus-agent-read-local" function (:arguments ("file")) nil [84405 85893])
            ("gnus-agent-save-local" function (:arguments ("force")) nil [85895 87107])
            ("gnus-agent-get-local" function (:arguments ("group" "gmane" "method")) nil [87109 88041])
            ("gnus-agent-set-local" function (:arguments ("group" "min" "max" "gmane" "method" "local")) nil [88043 88854])
            ("gnus-agent-article-name" function (:arguments ("article" "group")) nil [88856 89018])
            ("gnus-agent-batch-confirmation" function (:arguments ("msg")) nil [89020 89132])
            ("gnus-agent-batch-fetch" function (:user-visible-flag t) nil [89149 89368])
            ("gnus-agent-fetch-session" function (:user-visible-flag t) nil [89370 91089])
            ("gnus-agent-short-article" variable (:default-value 500) nil [91091 91184])
            ("gnus-agent-long-article" variable (:default-value 1000) nil [91186 91277])
            ("gnus-agent-low-score" variable nil nil [91279 91375])
            ("gnus-agent-high-score" variable nil nil [91377 91476])
            ("gnus-agent-fetch-group-1" function (:arguments ("group" "method")) nil [91478 99963])
            ("gnus-category-mode-hook" variable nil nil [99998 100080])
            ("gnus-category-line-format" variable (:default-value "     %(%20c%): %g
") nil [100082 100357])
            ("gnus-category-mode-line-format" variable (:default-value "Gnus: %%b") nil [100359 100467])
            ("gnus-agent-predicate" variable (:default-value (quote false)) nil [100469 100573])
            ("gnus-category-buffer" variable (:default-value "*Agent Category*") nil [100601 100649])
            ("gnus-tmp-name" variable nil nil [100651 100673])
            ("gnus-tmp-groups" variable nil nil [100674 100698])
            ("gnus-category-line-format-alist" variable (:default-value (\` ((99 gnus-tmp-name 115) (103 gnus-tmp-groups 100)))) nil [100700 100795])
            ("gnus-category-mode-line-format-alist" variable (:default-value (\` ((117 user-defined 115)))) nil [100797 100868])
            ("gnus-category-line-format-spec" variable nil nil [100870 100913])
            ("gnus-category-mode-line-format-spec" variable nil nil [100914 100962])
            ("gnus-category-mode-map" variable nil nil [100964 100999])
            ("put" code nil nil [101000 101046])
            ("unless" code nil nil [101048 101556])
            ("gnus-category-menu-hook" variable nil nil [101558 101677])
            ("gnus-category-make-menu-bar" function nil nil [101679 102296])
            ("define-derived-mode" code nil nil [102298 102902])
            ("defalias" code nil nil [102904 102961])
            ("gnus-category-insert-line" function (:arguments ("category")) nil [102963 103327])
            ("gnus-enter-category-buffer" function (:user-visible-flag t) nil [103329 103507])
            ("gnus-category-setup-buffer" function nil nil [103509 103690])
            ("gnus-category-prepare" function nil nil [103692 103999])
            ("gnus-category-name" function nil nil [104001 104144])
            ("gnus-category-read" function nil nil [104146 105537])
            ("gnus-category-write" function nil nil [105539 106280])
            ("gnus-category-edit-predicate" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [106282 107001])
            ("gnus-category-edit-score" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [107003 107731])
            ("gnus-category-edit-groups" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [107733 108408])
            ("gnus-category-kill" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [108410 108711])
            ("gnus-category-copy" function
               (:user-visible-flag t
                :arguments ("category" "to"))
                nil [108713 109169])
            ("gnus-category-add" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [109171 109472])
            ("gnus-category-list" function (:user-visible-flag t) nil [109474 109570])
            ("gnus-category-exit" function (:user-visible-flag t) nil [109572 109718])
            ("gnus-category-not" variable (:default-value (list (quote !) (quote not) (intern (format "%c" 172)))) nil [109776 109844])
            ("gnus-category-predicate-alist" variable (:default-value (quote ((spam . gnus-agent-spam-p) (short . gnus-agent-short-p) (long . gnus-agent-long-p) (low . gnus-agent-low-scored-p) (high . gnus-agent-high-scored-p) (read . gnus-agent-read-p) (true . gnus-agent-true) (false . gnus-agent-false)))) nil [109846 110216])
            ("gnus-agent-spam-p" function nil nil [110218 110646])
            ("gnus-agent-short-p" function nil nil [110648 110785])
            ("gnus-agent-long-p" function nil nil [110787 110921])
            ("gnus-agent-low-scored-p" function nil nil [110923 111046])
            ("gnus-agent-high-scored-p" function nil nil [111048 111174])
            ("gnus-agent-read-p" function nil nil [111176 111362])
            ("gnus-category-make-function" function (:arguments ("predicate")) nil [111364 111625])
            ("gnus-agent-true" function nil nil [111627 111671])
            ("gnus-agent-false" function nil nil [111673 111722])
            ("gnus-category-make-function-1" function (:arguments ("predicate")) nil [111724 112315])
            ("gnus-get-predicate" function (:arguments ("predicate")) nil [112317 112591])
            ("gnus-predicate-implies-unread" function (:arguments ("predicate")) nil [112593 112961])
            ("gnus-function-implies-unread-1" function (:arguments ("function")) nil [112963 115391])
            ("gnus-group-category" function (:arguments ("group")) nil [115393 115872])
            ("gnus-agent-expire-current-dirs" variable nil nil [115874 115913])
            ("gnus-agent-expire-stats" variable nil nil [115914 115946])
            ("gnus-agent-expire-group" function
               (:user-visible-flag t
                :arguments ("group" "articles" "force"))
                nil [115948 117845])
            ("gnus-agent-expire-group-1" function (:arguments ("group" "overview" "active" "articles" "force")) nil [117847 130680])
            ("gnus-agent-expire" function
               (:user-visible-flag t
                :arguments ("articles" "group" "force"))
                nil [130682 133108])
            ("gnus-agent-expire-done-message" function nil nil [133110 133689])
            ("gnus-agent-expire-unagentized-dirs" function nil nil [133691 137362])
            ("gnus-agent-batch" function (:user-visible-flag t) nil [137379 137679])
            ("gnus-agent-unread-articles" function (:arguments ("group")) nil [137681 138652])
            ("gnus-agent-uncached-articles" function (:arguments ("articles" "group" "cached-header")) nil [138654 140165])
            ("gnus-agent-retrieve-headers" function (:arguments ("articles" "group" "fetch-old")) nil [140167 145872])
            ("gnus-agent-request-article" function (:arguments ("article" "group")) nil [145874 146609])
            ("gnus-agent-store-article" function (:arguments ("article" "group")) nil [146611 147282])
            ("gnus-agent-regenerate-group" function
               (:user-visible-flag t
                :arguments ("group" "reread"))
                nil [147284 155245])
            ("gnus-agent-regenerate" function
               (:user-visible-flag t
                :arguments ("_clean" "reread"))
                nil [155262 155809])
            ("gnus-agent-go-online" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [155811 156195])
            ("gnus-agent-toggle-group-plugged" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [156197 156775])
            ("gnus-agent-group-covered-p" function (:arguments ("group")) nil [156777 156869])
            ("gnus-agent-update-files-total-fetched-for" function (:arguments ("group" "delta" "method" "path")) nil [156871 158165])
            ("gnus-agent-update-view-total-fetched-for" function (:arguments ("group" "agent-over" "method" "path")) nil [158167 159133])
            ("gnus-agent-total-fetched-for" function (:arguments ("group" "method" "no-inhibit")) nil [159135 159959])
            ("gnus-agent" package nil nil [159961 159982]))          
      :file "gnus-agent.el"
      :pointmax 160012
      :fsize 160011
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 11639 . 11640) (symbol 10988 . 11005) (open-paren 10987 . 10988) (close-paren 1073 . 1074) (symbol 1040 . 1057) (open-paren 1039 . 1040)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [897 910])
            ("gnus" include nil nil [913 928])
            ("gnus-sum" include nil nil [929 948])
            ("unless" code nil nil [971 1054])
            ("gnus-cache-active-file" variable (:default-value (expand-file-name "active" gnus-cache-directory)) nil [1057 1204])
            ("gnus-cache-enter-articles" variable (:default-value (quote (ticked dormant))) nil [1206 1405])
            ("gnus-cache-remove-articles" variable (:default-value (quote (read))) nil [1407 1598])
            ("gnus-cacheable-groups" variable nil nil [1600 1938])
            ("gnus-uncacheable-groups" variable nil nil [1940 2287])
            ("gnus-cache-overview-coding-system" variable (:default-value (quote raw-text)) nil [2289 2385])
            ("gnus-cache-coding-system" variable (:default-value (quote raw-text)) nil [2387 2474])
            ("gnus-cache-removable-articles" variable nil nil [2504 2546])
            ("gnus-cache-buffer" variable nil nil [2547 2577])
            ("gnus-cache-active-hashtb" variable nil nil [2578 2615])
            ("gnus-cache-active-altered" variable nil nil [2616 2654])
            ("gnus-cache-total-fetched-hashtb" variable nil nil [2655 2699])
            ("declare-function" code nil nil [2701 2772])
            ("nnml-generate-nov-databases-directory" function (:prototype-flag t) nil [2774 2830])
            ("nnvirtual-find-group-art" function (:prototype-flag t) nil [2831 2879])
            ("gnus-cache-open" function nil nil [2917 3113])
            ("ignore-errors" code nil nil [3184 3245])
            ("gnus-cache-close" function nil nil [3247 3393])
            ("gnus-cache-save-buffers" function nil nil [3395 4780])
            ("gnus-cache-possibly-enter-article" function (:arguments ("group" "article" "ticked" "dormant" "unread" "force")) nil [4782 7443])
            ("gnus-cache-enter-remove-article" function (:arguments ("article")) nil [7445 7605])
            ("gnus-cache-possibly-remove-articles" function nil nil [7607 8165])
            ("gnus-cache-possibly-remove-articles-1" function nil nil [8167 8995])
            ("gnus-cache-request-article" function (:arguments ("article" "group")) nil [8997 9413])
            ("gnus-cache-possibly-alter-active" function (:arguments ("group" "active")) nil [9415 9841])
            ("gnus-cache-retrieve-headers" function (:arguments ("articles" "group" "fetch-old")) nil [9843 11457])
            ("gnus-cache-enter-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [11459 12266])
            ("gnus-cache-remove-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [12268 13241])
            ("gnus-cached-article-p" function (:arguments ("article")) nil [13243 13377])
            ("gnus-summary-insert-cached-articles" function (:user-visible-flag t) nil [13379 13898])
            ("gnus-summary-limit-include-cached" function (:user-visible-flag t) nil [13900 14242])
            ("gnus-cache-change-buffer" function (:arguments ("group")) nil [14269 15209])
            ("gnus-cache-member-of-class" function (:arguments ("class" "ticked" "dormant" "unread")) nil [15264 15522])
            ("gnus-cache-decoded-group-names" variable nil nil [15524 15737])
            ("gnus-cache-unified-group-names" variable nil nil [15739 16350])
            ("gnus-cache-decoded-group-name" function (:arguments ("group")) nil [16352 16880])
            ("gnus-cache-file-name" function (:arguments ("group" "article")) nil [16882 17611])
            ("gnus-cache-update-article" function (:arguments ("group" "article")) nil [17613 17955])
            ("gnus-cache-possibly-remove-article" function (:arguments ("article" "ticked" "dormant" "unread" "force")) nil [17957 19245])
            ("gnus-cache-articles-in-group" function (:arguments ("group")) nil [19247 20011])
            ("gnus-cache-braid-nov" function (:arguments ("group" "cached" "file")) nil [20013 21099])
            ("gnus-cache-braid-heads" function (:arguments ("group" "cached")) nil [21101 22185])
            ("gnus-jog-cache" function (:user-visible-flag t) nil [22202 22933])
            ("gnus-cache-read-active" function (:arguments ("force")) nil [22935 23613])
            ("gnus-cache-write-active" function (:arguments ("force")) nil [23615 23961])
            ("gnus-cache-possibly-update-active" function (:arguments ("group" "active")) nil [23963 24648])
            ("gnus-cache-update-active" function (:arguments ("group" "number" "low")) nil [24650 25215])
            ("gnus-cache-generate-active" function
               (:user-visible-flag t
                :arguments ("directory"))
                nil [25232 27249])
            ("gnus-cache-generate-nov-databases" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [27266 27597])
            ("gnus-cache-move-cache" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [27599 27762])
            ("gnus-cache-fully-p" function (:arguments ("group")) nil [27764 28234])
            ("gnus-cache-rename-group" function (:arguments ("old-group" "new-group")) nil [28251 29388])
            ("gnus-cache-delete-group" function (:arguments ("group")) nil [29405 30228])
            ("gnus-cache-inhibit-update-total-fetched-for" variable nil nil [30230 30286])
            ("gnus-cache-need-update-total-fetched-for" variable nil nil [30287 30340])
            ("gnus-cache-with-refreshed-group" function (:arguments ("group" "body")) nil [30342 30727])
            ("gnus-cache-update-file-total-fetched-for" function (:arguments ("group" "file" "subtract")) nil [30729 31587])
            ("gnus-cache-update-overview-total-fetched-for" function (:arguments ("group" "file")) nil [31589 32181])
            ("gnus-cache-rename-group-total-fetched-for" function (:arguments ("old-group" "new-group")) nil [32183 32582])
            ("gnus-cache-delete-group-total-fetched-for" function (:arguments ("group")) nil [32584 32806])
            ("gnus-cache-total-fetched-for" function (:arguments ("group" "no-inhibit")) nil [32808 33410])
            ("gnus-cache" package nil nil [33412 33433]))          
      :file "gnus-cache.el"
      :pointmax 33463
      :fsize 33462
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 1054 . 1055) (symbol 951 . 968) (open-paren 950 . 951) (close-paren 910 . 911) (symbol 879 . 896) (open-paren 878 . 879)))
    (semanticdb-table "semanticdb-table"
      :file "nnvirtual.el"
      :fsize 27793
      :lastmodtime '(23525 29557 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [933 946])
            ("gnus" include nil nil [949 964])
            ("gnus-sum" include nil nil [965 984])
            ("gnus-art" include nil nil [985 1004])
            ("gnus-range" include nil nil [1005 1026])
            ("gnus-win" include nil nil [1027 1046])
            ("message" include nil nil [1047 1065])
            ("score-mode" include nil nil [1066 1087])
            ("gmm-utils" include nil nil [1088 1108])
            ("gnus-global-score-files" variable nil nil [1110 1746])
            ("gnus-score-file-single-match-alist" variable nil nil [1748 2385])
            ("gnus-score-file-multiple-match-alist" variable nil nil [2387 3051])
            ("gnus-score-file-suffix" variable (:default-value "SCORE") nil [3053 3169])
            ("gnus-adaptive-file-suffix" variable (:default-value "ADAPT") nil [3171 3326])
            ("gnus-score-find-score-files-function" variable (:default-value (quote gnus-score-find-bnews)) nil [3328 4667])
            ("gnus-score-interactive-default-score" variable (:default-value 1000) nil [4669 4849])
            ("gnus-score-expiry-days" variable (:default-value 7) nil [4851 5097])
            ("gnus-update-score-entry-dates" variable (:default-value t) nil [5099 5358])
            ("gnus-decay-scores" variable nil nil [5360 5696])
            ("gnus-decay-score-function" variable (:default-value (quote gnus-decay-score)) nil [5698 5954])
            ("gnus-score-decay-constant" variable (:default-value 3) nil [5956 6088])
            ("gnus-score-decay-scale" variable (:default-value 0.05) nil [6090 6218])
            ("gnus-home-score-file" variable nil nil [6220 7431])
            ("gnus-home-adapt-file" variable nil nil [7433 7767])
            ("gnus-default-adaptive-score-alist" variable (:default-value (\` ((gnus-kill-file-mark) (gnus-unread-mark) (gnus-read-mark (from (\, (+ 2 gnus-score-decay-constant))) (subject (\, (+ 27 gnus-score-decay-constant)))) (gnus-catchup-mark (subject (\, (+ -7 (* -1 gnus-score-decay-constant))))) (gnus-killed-mark (from (\, (- -1 gnus-score-decay-constant))) (subject (\, (+ -17 (* -1 gnus-score-decay-constant))))) (gnus-del-mark (from (\, (- -1 gnus-score-decay-constant))) (subject (\, (+ -12 (* -1 gnus-score-decay-constant)))))))) nil [7769 8675])
            ("gnus-adaptive-word-length-limit" variable nil nil [8677 8950])
            ("gnus-ignored-adaptive-words" variable nil nil [8952 9113])
            ("gnus-default-ignored-adaptive-words" variable (:default-value (quote ("a" "i" "the" "to" "of" "and" "in" "is" "it" "for" "that" "if" "you" "this" "be" "on" "with" "not" "have" "are" "or" "as" "from" "can" "but" "by" "at" "an" "will" "no" "all" "was" "do" "there" "my" "one" "so" "we" "they" "what" "would" "any" "which" "about" "get" "your" "use" "some" "me" "then" "name" "like" "out" "when" "up" "time" "other" "more" "only" "just" "end" "also" "know" "how" "new" "should" "been" "than" "them" "he" "who" "make" "may" "people" "these" "now" "their" "here" "into" "first" "could" "way" "had" "see" "work" "well" "were" "two" "very" "where" "while" "us" "because" "good" "same" "even" "much" "most" "many" "such" "long" "his" "over" "last" "since" "right" "before" "our" "without" "too" "those" "why" "must" "part" "being" "current" "back" "still" "go" "point" "value" "each" "did" "both" "true" "off" "say" "another" "state" "might" "under" "start" "try" "re"))) nil [9115 10236])
            ("gnus-default-adaptive-word-score-alist" variable (:default-value (\` (((\, gnus-read-mark) . 30) ((\, gnus-catchup-mark) . -10) ((\, gnus-killed-mark) . -20) ((\, gnus-del-mark) . -15)))) nil [10238 10543])
            ("gnus-adaptive-word-minimum" variable nil nil [10545 10733])
            ("gnus-adaptive-word-no-group-words" variable nil nil [10735 10895])
            ("gnus-score-mimic-keymap" variable nil nil [10897 11049])
            ("gnus-score-exact-adapt-limit" variable (:default-value 10) nil [11051 11557])
            ("gnus-score-uncacheable-files" variable (:default-value "ADAPT$") nil [11559 11741])
            ("gnus-adaptive-pretty-print" variable nil nil [11743 11947])
            ("gnus-score-default-header" variable nil nil [11949 12635])
            ("gnus-score-default-type" variable nil nil [12637 13401])
            ("gnus-score-default-fold" variable nil nil [13403 13551])
            ("gnus-score-default-duration" variable nil nil [13553 13945])
            ("gnus-score-after-write-file-function" variable nil nil [13947 14139])
            ("gnus-score-thread-simplify" variable nil nil [14141 14287])
            ("gnus-inhibit-slow-scoring" variable nil nil [14289 14679])
            ("gnus-score-use-all-scores" variable (:default-value t) nil [14708 14809])
            ("gnus-adaptive-word-syntax-table" variable (:default-value (let ((table (copy-syntax-table (standard-syntax-table))) (numbers (quote (48 49 50 51 52 53 54 55 56 57)))) (while numbers (modify-syntax-entry (pop numbers) " " table)) (modify-syntax-entry 39 "w" table) table)) nil [14811 15134])
            ("gnus-scores-exclude-files" variable nil nil [15136 15174])
            ("gnus-internal-global-score-files" variable nil nil [15175 15220])
            ("gnus-score-file-list" variable nil nil [15221 15254])
            ("gnus-short-name-score-file-cache" variable nil nil [15256 15301])
            ("gnus-score-help-winconf" variable nil nil [15303 15339])
            ("gnus-adaptive-score-alist" variable (:default-value gnus-default-adaptive-score-alist) nil [15340 15408])
            ("gnus-adaptive-word-score-alist" variable (:default-value gnus-default-adaptive-word-score-alist) nil [15409 15487])
            ("gnus-score-trace" variable nil nil [15488 15517])
            ("gnus-score-edit-buffer" variable nil nil [15518 15553])
            ("gnus-score-alist" variable nil nil [15555 16270])
            ("gnus-score-cache" variable nil nil [16272 16301])
            ("gnus-scores-articles" variable nil nil [16302 16335])
            ("gnus-score-index" variable nil nil [16336 16365])
            ("gnus-header-index" variable
               (:constant-flag t
                :default-value (quote (("number" 0 gnus-score-integer) ("subject" 1 gnus-score-string) ("from" 2 gnus-score-string) ("date" 3 gnus-score-date) ("message-id" 4 gnus-score-string) ("references" 5 gnus-score-string) ("chars" 6 gnus-score-integer) ("lines" 7 gnus-score-integer) ("xref" 8 gnus-score-string) ("extra" 9 gnus-score-string) ("head" -1 gnus-score-body) ("body" -1 gnus-score-body) ("all" -1 gnus-score-body) ("followup" 2 gnus-score-followup) ("thread" 5 gnus-score-thread))))
                nil [16368 16943])
            ("gnus-define-keys" code nil nil [16975 17421])
            ("gnus-summary-lower-score" function
               (:user-visible-flag t
                :arguments ("score" "symp"))
                nil [17589 18090])
            ("gnus-score-kill-help-buffer" function nil nil [18092 18292])
            ("gnus-summary-increase-score" function
               (:user-visible-flag t
                :arguments ("score" "symp"))
                nil [18294 25382])
            ("appt-select-lowest-window" function (:prototype-flag t) nil [25384 25428])
            ("gnus-score-insert-help" function (:arguments ("string" "alist" "idx")) nil [25430 26910])
            ("gnus-summary-header" function (:arguments ("header" "no-err" "extra")) nil [26912 27485])
            ("gnus-newsgroup-score-alist" function nil nil [27487 27769])
            ("gnus-score-get" function (:arguments ("symbol" "alist")) nil [27771 27955])
            ("gnus-summary-score-entry" function (:arguments ("header" "match" "type" "score" "date" "prompt" "silent" "extra")) nil [27957 31198])
            ("gnus-summary-score-effect" function
               (:user-visible-flag t
                :arguments ("header" "match" "type" "score" "extra"))
                nil [31200 32735])
            ("gnus-score-set-mark-below" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [32836 33286])
            ("gnus-score-update-lines" function nil nil [33288 33494])
            ("gnus-score-update-all-lines" function nil nil [33496 33911])
            ("gnus-score-set-expunge-below" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [33913 34304])
            ("gnus-score-followup-article" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [34306 34834])
            ("gnus-score-followup-thread" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [34836 35346])
            ("gnus-score-set" function (:arguments ("symbol" "value" "alist" "warn")) nil [35348 35904])
            ("gnus-summary-raise-score" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [35906 36124])
            ("gnus-summary-set-score" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [36126 36756])
            ("gnus-summary-current-score" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [36758 37115])
            ("gnus-score-change-score-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [37117 37348])
            ("gnus-score-edit-exit-function" variable nil nil [37350 37388])
            ("gnus-score-edit-current-scores" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [37389 38171])
            ("gnus-score-edit-all-score" function (:user-visible-flag t) nil [38173 38496])
            ("gnus-score-edit-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [38498 39201])
            ("gnus-score-edit-file-at-point" function (:arguments ("format")) nil [39203 40334])
            ("gnus-score-load-file" function (:arguments ("file")) nil [40336 44602])
            ("gnus-score-load" function (:arguments ("file")) nil [44604 44977])
            ("gnus-score-remove-from-cache" function (:arguments ("file")) nil [44979 45103])
            ("gnus-score-load-score-alist" function (:arguments ("file")) nil [45105 46122])
            ("gnus-score-check-syntax" function (:arguments ("alist" "file")) nil [46124 47414])
            ("gnus-score-transform-old-to-new" function (:arguments ("alist")) nil [47416 48100])
            ("gnus-score-save" function nil nil [48102 49858])
            ("gnus-score-load-files" function (:arguments ("score-files")) nil [49860 50742])
            ("gnus-score-headers" function (:arguments ("score-files" "trace")) nil [50744 54300])
            ("gnus-score-lower-thread" function (:arguments ("thread" "score-adjust")) nil [54302 55155])
            ("gnus-score-orphans" function (:arguments ("score")) nil [55157 56134])
            ("gnus-score-integer" function (:arguments ("scores" "header" "now" "expire" "trace")) nil [56136 57917])
            ("gnus-score-date" function (:arguments ("scores" "header" "now" "expire" "trace")) nil [57919 59981])
            ("gnus-score-decode-text-parts" function nil nil [59983 60922])
            ("gnus-score-body" function (:arguments ("scores" "header" "now" "expire" "trace")) nil [60924 66476])
            ("gnus-score-thread" function (:arguments ("scores" "header" "now" "expire" "trace")) nil [66478 66603])
            ("gnus-score-followup" function (:arguments ("scores" "header" "now" "expire" "trace" "thread")) nil [66605 70258])
            ("gnus-score-add-followups" function (:arguments ("header" "score" "scores" "thread")) nil [70260 70873])
            ("gnus-score-string" function (:arguments ("score-list" "header" "now" "expire" "trace")) nil [70875 80114])
            ("gnus-enter-score-words-into-hashtb" function (:arguments ("hashtb")) nil [80116 80980])
            ("gnus-score-string<" function (:arguments ("a1" "a2")) nil [80982 81213])
            ("gnus-current-score-file-nondirectory" function (:arguments ("score-file")) nil [81215 81439])
            ("gnus-score-adaptive" function nil nil [81441 85787])
            ("gnus-score-edit-done" function nil nil [85789 86083])
            ("gnus-score-find-trace" function (:user-visible-flag t) nil [86085 88476])
            ("gnus-score-find-favourite-words" function (:user-visible-flag t) nil [88478 89767])
            ("gnus-summary-rescore" function (:user-visible-flag t) nil [89769 90025])
            ("gnus-score-flush-cache" function (:user-visible-flag t) nil [90027 90274])
            ("gnus-add-shutdown" code nil nil [90276 90319])
            ("gnus-score-file-alist-cache" variable nil nil [90321 90361])
            ("gnus-score-close" function nil nil [90363 90557])
            ("gnus-summary-raise-same-subject-and-select" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [90595 90960])
            ("gnus-summary-raise-same-subject" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [90962 91298])
            ("gnus-score-delta-default" function (:arguments ("level")) nil [91300 91423])
            ("gnus-summary-raise-thread" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [91425 92066])
            ("gnus-summary-lower-same-subject-and-select" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [92068 92281])
            ("gnus-summary-lower-same-subject" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [92283 92454])
            ("gnus-summary-lower-thread" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [92456 92656])
            ("gnus-score-score-files" function (:arguments ("group")) nil [92684 94146])
            ("gnus-score-score-files-1" function (:arguments ("dir")) nil [94148 94982])
            ("gnus-score-file-regexp" function nil nil [94984 95180])
            ("gnus-score-find-bnews" function (:arguments ("group")) nil [95182 98426])
            ("gnus-score-find-single" function (:arguments ("group")) nil [98428 98658])
            ("gnus-score-find-hierarchical" function (:arguments ("group")) nil [98660 99467])
            ("gnus-score-file-rank" function (:arguments ("file")) nil [99469 100113])
            ("gnus-sort-score-files" function (:arguments ("files")) nil [100115 100404])
            ("gnus-score-find-alist" function (:arguments ("group")) nil [100406 101589])
            ("gnus-all-score-files" function (:arguments ("group")) nil [101591 103773])
            ("gnus-possibly-score-headers" function (:arguments ("trace")) nil [103775 103982])
            ("gnus-score-file-name" function (:arguments ("newsgroup" "suffix")) nil [103984 104856])
            ("gnus-score-search-global-directories" function
               (:user-visible-flag t
                :arguments ("files"))
                nil [104858 105426])
            ("gnus-score-default-fold-toggle" function (:user-visible-flag t) nil [105428 105770])
            ("gnus-home-score-file" function (:arguments ("group" "adapt")) nil [105794 106708])
            ("gnus-hierarchial-home-score-file" function (:arguments ("group")) nil [106710 107055])
            ("gnus-hierarchial-home-adapt-file" function (:arguments ("group")) nil [107057 107408])
            ("gnus-current-home-score-file" function (:arguments ("group")) nil [107410 107539])
            ("gnus-decay-score" function (:arguments ("score")) nil [107567 107851])
            ("gnus-decay-scores" function (:arguments ("alist" "day")) nil [107853 108582])
            ("gnus-score" package nil nil [108584 108605]))          
      :file "gnus-score.el"
      :pointmax 108635
      :fsize 108634
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 946 . 947) (symbol 915 . 932) (open-paren 914 . 915)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [903 916])
            ("gnus" include nil nil [919 934])
            ("gnus-start" include nil nil [935 956])
            ("gnus-spec" include nil nil [957 977])
            ("gnus-group" include nil nil [978 999])
            ("gnus-int" include nil nil [1000 1019])
            ("gnus-range" include nil nil [1020 1041])
            ("gnus-cloud" include nil nil [1042 1063])
            ("gnus-group-make-nnir-group" function (:prototype-flag t) nil [1065 1110])
            ("gnus-server-mode-hook" variable nil nil [1112 1229])
            ("gnus-server-exit-hook" variable nil nil [1231 1349])
            ("gnus-server-line-format" variable (:default-value "     {%(%h:%w%)} %s%a%c
") nil [1351 1816])
            ("gnus-server-mode-line-format" variable (:default-value "Gnus: %%b") nil [1818 1970])
            ("gnus-server-browse-in-group-buffer" variable nil nil [1972 2215])
            ("gnus-tmp-how" variable nil nil [2242 2263])
            ("gnus-tmp-name" variable nil nil [2264 2286])
            ("gnus-tmp-where" variable nil nil [2287 2310])
            ("gnus-tmp-status" variable nil nil [2311 2335])
            ("gnus-tmp-agent" variable nil nil [2336 2359])
            ("gnus-tmp-cloud" variable nil nil [2360 2383])
            ("gnus-tmp-news-server" variable nil nil [2384 2413])
            ("gnus-tmp-news-method" variable nil nil [2414 2443])
            ("gnus-tmp-user-defined" variable nil nil [2444 2474])
            ("gnus-inserted-opened-servers" variable nil nil [2476 2517])
            ("gnus-server-line-format-alist" variable (:default-value (\` ((104 gnus-tmp-how 115) (110 gnus-tmp-name 115) (119 gnus-tmp-where 115) (115 gnus-tmp-status 115) (97 gnus-tmp-agent 115) (99 gnus-tmp-cloud 115)))) nil [2519 2718])
            ("gnus-server-mode-line-format-alist" variable (:default-value (\` ((83 gnus-tmp-news-server 115) (77 gnus-tmp-news-method 115) (117 gnus-tmp-user-defined 115)))) nil [2720 2864])
            ("gnus-server-line-format-spec" variable nil nil [2866 2907])
            ("gnus-server-mode-line-format-spec" variable nil nil [2908 2954])
            ("gnus-server-killed-servers" variable nil nil [2955 2994])
            ("gnus-server-mode-map" variable nil nil [2996 3025])
            ("gnus-server-menu-hook" variable nil nil [3027 3157])
            ("gnus-server-make-menu-bar" function nil nil [3159 4534])
            ("gnus-server-mode-map" variable nil nil [4536 4569])
            ("put" code nil nil [4570 4614])
            ("unless" code nil nil [4616 5730])
            ("gnus-server-agent" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "PaleTurquoise" :bold t)) (((class color) (background dark)) (:foreground "PaleTurquoise" :bold t)) (t (:bold t))))
                :type "face")
                nil [5732 6011])
            ("put" code nil nil [6044 6104])
            ("put" code nil nil [6105 6156])
            ("gnus-server-cloud" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "ForestGreen" :bold t)) (((class color) (background dark)) (:foreground "PaleGreen" :bold t)) (t (:bold t))))
                :type "face")
                nil [6158 6434])
            ("gnus-server-cloud-host" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "ForestGreen" :inverse-video t :italic t)) (((class color) (background dark)) (:foreground "PaleGreen" :inverse-video t :italic t)) (t (:inverse-video t :italic t))))
                :type "face")
                nil [6436 6768])
            ("gnus-server-opened" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Green3" :bold t)) (((class color) (background dark)) (:foreground "Green1" :bold t)) (t (:bold t))))
                :type "face")
                nil [6770 7033])
            ("put" code nil nil [7066 7128])
            ("put" code nil nil [7129 7181])
            ("gnus-server-closed" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Steel Blue" :italic t)) (((class color) (background dark)) (:foreground "LightBlue" :italic t)) (t (:italic t))))
                :type "face")
                nil [7183 7464])
            ("put" code nil nil [7497 7559])
            ("put" code nil nil [7560 7612])
            ("gnus-server-denied" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Red" :bold t)) (((class color) (background dark)) (:foreground "Pink" :bold t)) (t (:inverse-video t :bold t))))
                :type "face")
                nil [7614 7889])
            ("put" code nil nil [7922 7984])
            ("put" code nil nil [7985 8037])
            ("gnus-server-offline" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Orange" :bold t)) (((class color) (background dark)) (:foreground "Yellow" :bold t)) (t (:inverse-video t :bold t))))
                :type "face")
                nil [8039 8321])
            ("put" code nil nil [8354 8418])
            ("put" code nil nil [8419 8472])
            ("gnus-server-font-lock-keywords" variable (:default-value (quote (("(\\(agent\\))" 1 (quote gnus-server-agent)) ("(\\(cloud[-]sync\\))" 1 (quote gnus-server-cloud)) ("(\\(CLOUD[-]HOST\\))" 1 (quote gnus-server-cloud-host)) ("(\\(opened\\))" 1 (quote gnus-server-opened)) ("(\\(closed\\))" 1 (quote gnus-server-closed)) ("(\\(offline\\))" 1 (quote gnus-server-offline)) ("(\\(denied\\))" 1 (quote gnus-server-denied))))) nil [8474 8844])
            ("gnus-server-mode" function (:user-visible-flag t) nil [8846 9719])
            ("gnus-server-insert-server-line" function (:arguments ("name" "method")) nil [9721 10878])
            ("gnus-enter-server-buffer" function nil nil [10880 11371])
            ("gnus-server-setup-buffer" function nil nil [11373 11580])
            ("gnus-server-prepare" function nil nil [11582 12653])
            ("gnus-server-server-name" function nil nil [12655 12794])
            ("gnus-server-named-server" function nil nil [12796 13034])
            ("defalias" code nil nil [13036 13091])
            ("gnus-server-edit-buffer" variable
               (:constant-flag t
                :default-value "*Gnus edit server*")
                nil [13093 13148])
            ("gnus-server-update-server" function (:arguments ("server")) nil [13150 13976])
            ("gnus-server-set-info" function (:arguments ("server" "info")) nil [13978 14907])
            ("gnus-server-kill-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [14944 15986])
            ("gnus-server-yank-server" function (:user-visible-flag t) nil [15988 16798])
            ("gnus-server-exit" function (:user-visible-flag t) nil [16800 16991])
            ("gnus-server-list-servers" function (:user-visible-flag t) nil [16993 17274])
            ("gnus-server-set-status" function (:arguments ("method" "status")) nil [17276 17502])
            ("gnus-opened-servers-remove" function (:arguments ("method")) nil [17504 17695])
            ("gnus-server-open-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [17697 18082])
            ("gnus-server-open-all-servers" function (:user-visible-flag t) nil [18084 18253])
            ("gnus-server-close-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [18255 18635])
            ("gnus-server-offline-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [18637 19031])
            ("gnus-server-close-all-servers" function (:user-visible-flag t) nil [19033 19287])
            ("gnus-server-deny-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [19289 19659])
            ("gnus-server-remove-denials" function (:user-visible-flag t) nil [19661 19912])
            ("gnus-server-copy-server" function
               (:user-visible-flag t
                :arguments ("from" "to"))
                nil [19914 20643])
            ("gnus-server-add-server" function (:arguments ("how" "where")) nil [20645 21092])
            ("gnus-server-goto-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [21094 21426])
            ("gnus-server-edit-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [21428 21975])
            ("gnus-server-show-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [21977 22354])
            ("gnus-server-scan-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [22356 22775])
            ("gnus-server-read-server-in-server-buffer" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [22777 23003])
            ("gnus-server-read-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [23005 23318])
            ("gnus-server-pick-server" function (:arguments ("e")) nil [23320 23451])
            ("gnus-browse-menu-hook" variable nil nil [23487 23617])
            ("gnus-browse-subscribe-newsgroup-method" variable (:default-value (quote gnus-subscribe-alphabetically)) nil [23619 24696])
            ("gnus-browse-mode-hook" variable nil nil [24698 24732])
            ("gnus-browse-mode-map" variable nil nil [24733 24766])
            ("put" code nil nil [24767 24811])
            ("unless" code nil nil [24813 25684])
            ("gnus-browse-make-menu-bar" function nil nil [25686 26239])
            ("gnus-browse-current-method" variable nil nil [26241 26280])
            ("gnus-browse-return-buffer" variable nil nil [26281 26319])
            ("gnus-browse-buffer" variable (:default-value "*Gnus Browse Server*") nil [26321 26371])
            ("gnus-browse-foreign-server" function (:arguments ("server" "return-buffer")) nil [26373 30427])
            ("define-derived-mode" code nil nil [30429 31178])
            ("gnus-browse-read-group" function
               (:user-visible-flag t
                :arguments ("no-article" "number"))
                nil [31180 31737])
            ("gnus-browse-select-group" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [31739 31920])
            ("gnus-browse-next-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [31922 32067])
            ("gnus-browse-prev-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [32069 32182])
            ("gnus-browse-unsubscribe-current-group" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [32184 32765])
            ("gnus-browse-group-name" function nil nil [32767 33085])
            ("gnus-browse-describe-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [33087 33249])
            ("gnus-browse-delete-group" function
               (:user-visible-flag t
                :arguments ("group" "force"))
                nil [33251 33709])
            ("gnus-browse-unsubscribe-group" function nil nil [33711 35193])
            ("gnus-browse-exit" function (:user-visible-flag t) nil [35195 35630])
            ("gnus-browse-describe-briefly" function (:user-visible-flag t) nil [35632 36000])
            ("gnus-server-regenerate-server" function (:user-visible-flag t) nil [36002 36712])
            ("gnus-server-compact-server" function (:user-visible-flag t) nil [36848 37946])
            ("gnus-server-toggle-cloud-server" function (:user-visible-flag t) nil [37948 38675])
            ("gnus-server-toggle-cloud-method-server" function (:user-visible-flag t) nil [38677 39552])
            ("gnus-srvr" package nil nil [39554 39574]))          
      :file "gnus-srvr.el"
      :pointmax 39603
      :fsize 39602
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 916 . 917) (symbol 885 . 902) (open-paren 884 . 885)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gmm" customgroup (:user-visible-flag t) nil [1082 1214])
            ("gmm-verbose" variable (:default-value 7) nil [1295 1609])
            ("gmm-regexp-concat" function (:arguments ("regexp")) nil [1626 1921])
            ("gmm-message" function (:arguments ("level" "args")) nil [1938 2480])
            ("gmm-error" function (:arguments ("level" "args")) nil [2497 2852])
            ("gmm-widget-p" function (:arguments ("symbol")) nil [2869 2961])
            ("widget-create-child-value" function (:prototype-flag t) nil [2963 3011])
            ("widget-convert" function (:prototype-flag t) nil [3012 3049])
            ("widget-default-get" function (:prototype-flag t) nil [3050 3091])
            ("define-widget" code nil nil [3889 4438])
            ("define-widget" code nil nil [4440 5282])
            ("gmm-tool-bar-style" variable (:default-value (if (and (boundp (quote tool-bar-mode)) tool-bar-mode (memq (display-visual-class) (list (quote static-gray) (quote gray-scale) (quote static-color) (quote pseudo-color)))) (quote gnome) (quote retro))) nil [5284 5630])
            ("tool-bar-map" variable nil nil [5632 5653])
            ("gmm-tool-bar-from-list" function (:arguments ("icon-list" "zap-list" "default-map")) nil [5670 7887])
            ("defun-gmm" function (:arguments ("name" "function" "arg-list" "body")) nil [7889 8224])
            ("gmm-customize-mode" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [8226 8540])
            ("define-obsolete-function-alias" code nil nil [8542 8627])
            ("gmm-utils" package nil nil [8629 8649]))          
      :file "gmm-utils.el"
      :pointmax 8678
      :fsize 8677
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [918 931])
            ("mm-util" include nil nil [933 951])
            ("gnus-util" include nil nil [987 1007])
            ("gnus-score-edit-done-hook" variable nil nil [1046 1175])
            ("gnus-score-mode-hook" variable nil nil [1177 1284])
            ("gnus-score-menu-hook" variable nil nil [1286 1406])
            ("gnus-score-edit-exit-function" variable nil nil [1408 1498])
            ("gnus-score-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map emacs-lisp-mode-map) (define-key map "" (quote gnus-score-edit-exit)) (define-key map "" (quote gnus-score-edit-insert-date)) (define-key map "" (quote gnus-score-pretty-print)) map)) nil [1500 1793])
            ("score-mode-syntax-table" variable (:default-value (let ((table (copy-syntax-table lisp-mode-syntax-table))) (modify-syntax-entry 124 "w" table) table)) nil [1795 1982])
            ("score-mode-coding-system" variable (:default-value mm-universal-coding-system) nil [2032 2092])
            ("define-derived-mode" code nil nil [2109 2360])
            ("gnus-score-make-menu-bar" function nil nil [2362 2691])
            ("gnus-score-edit-insert-date" function (:user-visible-flag t) nil [2693 2841])
            ("gnus-score-pretty-print" function (:user-visible-flag t) nil [2843 3128])
            ("gnus-score-edit-exit" function (:user-visible-flag t) nil [3130 3668])
            ("score-mode" package nil nil [3670 3691]))          
      :file "score-mode.el"
      :pointmax 3721
      :fsize 3720
      :lastmodtime '(23525 29558 0 0)
      :unmatched-syntax '((close-paren 931 . 932) (symbol 900 . 917) (open-paren 899 . 900)))
    (semanticdb-table "semanticdb-table"
      :file "mm-bodies.el"
      :fsize 9974
      :lastmodtime '(23525 29555 0 0))
    (semanticdb-table "semanticdb-table"
      :file "mm-decode.el"
      :fsize 65543
      :lastmodtime '(23525 29555 0 0))
    (semanticdb-table "semanticdb-table"
      :file "mm-view.el"
      :fsize 20267
      :lastmodtime '(23525 29555 0 0))
    (semanticdb-table "semanticdb-table"
      :file "mm-uu.el"
      :fsize 24148
      :lastmodtime '(23525 29555 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1806 1819])
            ("gnus-util" include nil nil [1822 1842])
            ("gnus" include nil nil [1843 1858])
            ("gnus-undo" customgroup (:user-visible-flag t) nil [1860 1928])
            ("gnus-undo-limit" variable (:default-value 2000) nil [1930 2044])
            ("gnus-undo-mode" variable nil nil [2046 2403])
            ("gnus-undo-mode-hook" variable nil nil [2405 2523])
            ("gnus-undo-actions" variable nil nil [2550 2580])
            ("gnus-undo-boundary" variable (:default-value t) nil [2581 2610])
            ("gnus-undo-last" variable nil nil [2611 2638])
            ("gnus-undo-boundary-inhibit" variable nil nil [2639 2678])
            ("gnus-undo-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map "\237" gnus-undo "" gnus-undo "u" gnus-undo [(control /)] gnus-undo) map)) nil [2708 3001])
            ("gnus-undo-make-menu-bar" function nil nil [3003 3231])
            ("define-minor-mode" code nil nil [3233 3662])
            ("gnus-disable-undo" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [3690 3880])
            ("gnus-undo-boundary" function nil nil [3882 4049])
            ("gnus-undo-force-boundary" function nil nil [4051 4176])
            ("gnus-undo-register" function (:arguments ("form")) nil [4178 4390])
            ("put" code nil nil [4392 4441])
            ("put" code nil nil [4442 4493])
            ("gnus-undo-register-1" function (:arguments ("function")) nil [4495 5253])
            ("gnus-undo" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [5255 5878])
            ("gnus-undo" package nil nil [5880 5900]))          
      :file "gnus-undo.el"
      :pointmax 5929
      :fsize 5928
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 1819 . 1820) (symbol 1788 . 1805) (open-paren 1787 . 1788)))
    (semanticdb-table "semanticdb-table"
      :file "nnoo.el"
      :fsize 10637
      :lastmodtime '(23525 29557 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1380 1393])
            ("gnus" include nil nil [1396 1411])
            ("gnus-art" include nil nil [1412 1431])
            ("gnus-picon-news-directories" variable (:default-value (quote ("news"))) nil [1454 1605])
            ("gnus-picon-user-directories" variable (:default-value (quote ("users" "usenix" "local" "misc"))) nil [1607 1777])
            ("gnus-picon-domain-directories" variable (:default-value (quote ("domains"))) nil [1779 1985])
            ("gnus-picon-file-types" variable (:default-value (let ((types (list "xbm"))) (when (gnus-image-type-available-p (quote gif)) (push "gif" types)) (when (gnus-image-type-available-p (quote xpm)) (push "xpm" types)) types)) nil [1987 2298])
            ("gnus-picon-properties" variable (:default-value (quote (:color-symbols (("None" . "white"))))) nil [2300 2474])
            ("gnus-picon-style" variable (:default-value (quote inline)) nil [2476 2739])
            ("gnus-picon-inhibit-top-level-domains" variable (:default-value t) nil [2741 2935])
            ("gnus-picon-glyph-alist" variable nil nil [2962 3091])
            ("gnus-picon-cache" variable nil nil [3092 3121])
            ("gnus-picon-split-address" function (:arguments ("address")) nil [3139 3392])
            ("gnus-picon-find-face" function (:arguments ("address" "directories" "exact")) nil [3394 4258])
            ("gnus-picon-find-image" function (:arguments ("directory")) nil [4260 4524])
            ("gnus-picon-insert-glyph" function (:arguments ("glyph" "category" "nostring")) nil [4526 5001])
            ("gnus-picon-create-glyph" function (:arguments ("file")) nil [5003 5227])
            ("declare-function" code nil nil [5277 5346])
            ("gnus-picon-transform-address" function (:arguments ("header" "category")) nil [5348 7754])
            ("gnus-picon-transform-newsgroups" function (:arguments ("header")) nil [7756 8836])
            ("gnus-treat-from-picon" function (:user-visible-flag t) nil [8986 9356])
            ("gnus-treat-mail-picon" function (:user-visible-flag t) nil [9373 9802])
            ("gnus-treat-newsgroups-picon" function (:user-visible-flag t) nil [9819 10282])
            ("gnus-picon" package nil nil [10284 10305]))          
      :file "gnus-picon.el"
      :pointmax 10335
      :fsize 10334
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 1393 . 1394) (symbol 1362 . 1379) (open-paren 1361 . 1362)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [993 1006])
            ("nnmail-extra-headers" variable nil nil [1009 1038])
            ("gnus-newsgroup-name" variable nil nil [1039 1067])
            ("nnheader-file-coding-system" variable nil nil [1068 1104])
            ("jka-compr-compression-info-list" variable nil nil [1105 1145])
            ("mail-utils" include nil nil [1303 1324])
            ("mm-util" include nil nil [1325 1343])
            ("gnus-util" include nil nil [1344 1364])
            ("gnus-range-add" function (:prototype-flag t) nil [1365 1404])
            ("gnus-remove-from-range" function (:prototype-flag t) nil [1405 1452])
            ("gnus-sorted-intersection" function (:prototype-flag t) nil [1510 1559])
            ("gnus-intersection" function (:prototype-flag t) nil [1560 1602])
            ("gnus-sorted-complement" function (:prototype-flag t) nil [1603 1650])
            ("gnus-sorted-difference" function (:prototype-flag t) nil [1651 1698])
            ("gnus-verbose-backends" variable (:default-value 7) nil [1700 2086])
            ("gnus-nov-is-evil" variable nil nil [2088 2234])
            ("nnheader-max-head-length" variable (:default-value 8192) nil [2236 2758])
            ("nnheader-head-chop-length" variable (:default-value 2048) nil [2760 2929])
            ("nnheader-read-timeout" variable (:default-value (if (memq system-type (quote (windows-nt cygwin))) 1.0 0.01)) nil [2931 3988])
            ("nnheader-file-name-translation-alist" variable (:default-value (if (memq system-type (quote (windows-nt cygwin))) (mapcar (lambda (c) (cons c 95)) (quote (58 42 34 60 62 63))))) nil [3990 4486])
            ("nnheader-directory-separator-character" variable (:default-value (string-to-char (substring (file-name-as-directory ".") -1))) nil [4488 4708])
            ("nnmail-message-id" function (:prototype-flag t) nil [4710 4748])
            ("mail-position-on-field" function (:prototype-flag t) nil [4749 4794])
            ("gnus-buffer-live-p" function (:prototype-flag t) nil [4795 4837])
            ("mail-header-number" function (:arguments ("header")) nil [5342 5437])
            ("mail-header-set-number" function (:arguments ("header" "number")) nil [5439 5560])
            ("mail-header-subject" function (:arguments ("header")) nil [5562 5658])
            ("mail-header-set-subject" function (:arguments ("header" "subject")) nil [5660 5786])
            ("mail-header-from" function (:arguments ("header")) nil [5788 5880])
            ("mail-header-set-from" function (:arguments ("header" "from")) nil [5882 5995])
            ("mail-header-date" function (:arguments ("header")) nil [5997 6080])
            ("mail-header-set-date" function (:arguments ("header" "date")) nil [6082 6193])
            ("defalias" code nil nil [6195 6245])
            ("mail-header-id" function (:arguments ("header")) nil [6246 6325])
            ("defalias" code nil nil [6327 6385])
            ("mail-header-set-id" function (:arguments ("header" "id")) nil [6386 6487])
            ("mail-header-references" function (:arguments ("header")) nil [6489 6584])
            ("mail-header-set-references" function (:arguments ("header" "ref")) nil [6586 6706])
            ("mail-header-chars" function (:arguments ("header")) nil [6708 6814])
            ("mail-header-set-chars" function (:arguments ("header" "chars")) nil [6816 6945])
            ("mail-header-lines" function (:arguments ("header")) nil [6947 7032])
            ("mail-header-set-lines" function (:arguments ("header" "lines")) nil [7034 7150])
            ("mail-header-xref" function (:arguments ("header")) nil [7152 7242])
            ("mail-header-set-xref" function (:arguments ("header" "xref")) nil [7244 7355])
            ("mail-header-extra" function (:arguments ("header")) nil [7357 7454])
            ("mail-header-set-extra" function (:arguments ("header" "extra")) nil [7456 7570])
            ("make-mail-header" function (:arguments ("init")) nil [7572 7702])
            ("make-full-mail-header" function (:arguments ("number" "subject" "from" "date" "id" "references" "chars" "lines" "xref" "extra")) nil [7704 7977])
            ("nnheader-fake-message-id" variable (:default-value 1) nil [8026 8061])
            ("nnheader-generate-fake-message-id" function (:arguments ("number")) nil [8063 8319])
            ("nnheader-fake-message-id-p" function (:arguments ("id")) nil [8321 8479])
            ("nnheader-remove-cr-followed-by-lf" function nil nil [8516 8650])
            ("nnheader-header-value" function nil nil [8652 8760])
            ("ietf-drums-unfold-fws" function (:prototype-flag t) nil [8762 8808])
            ("nnheader-parse-naked-head" function (:arguments ("number")) nil [8810 11848])
            ("nnheader-parse-head" function (:arguments ("naked")) nil [11850 12418])
            ("nnheader-nov-skip-field" function nil nil [12420 12492])
            ("nnheader-nov-field" function nil nil [12494 12604])
            ("nnheader-nov-read-integer" function nil nil [12606 12843])
            ("nnheader-nov-parse-extra" function nil nil [12845 13161])
            ("nnheader-uniquify-message-id" variable nil nil [13183 13224])
            ("nnheader-nov-read-message-id" function (:arguments ("number")) nil [13227 13598])
            ("nnheader-parse-nov" function nil nil [13600 14174])
            ("nnheader-insert-nov" function (:arguments ("header")) nil [14184 15266])
            ("nnheader-parse-overview-file" function (:arguments ("file")) nil [15268 15579])
            ("nnheader-write-overview-file" function (:arguments ("file" "headers")) nil [15581 15725])
            ("nnheader-insert-header" function (:arguments ("header")) nil [15727 16177])
            ("nnheader-insert-article-line" function (:arguments ("article")) nil [16179 16448])
            ("nnheader-nov-delete-outside-range" function (:arguments ("beg" "end")) nil [16450 16813])
            ("nnheader-find-nov-line" function (:arguments ("article")) nil [16815 18207])
            ("nntp-server-buffer" variable nil nil [18270 18301])
            ("nntp-process-response" variable nil nil [18302 18336])
            ("nnheader-callback-function" variable nil nil [18338 18377])
            ("nnheader-init-server-buffer" function nil nil [18379 18819])
            ("nnheader-file-error" function (:arguments ("file")) nil [18862 19154])
            ("nnheader-insert-head" function (:arguments ("file")) nil [19156 20265])
            ("nnheader-article-p" function nil nil [20267 20651])
            ("nnheader-insert-references" function (:arguments ("references" "message-id")) nil [20653 21389])
            ("declare-function" code nil nil [21391 21488])
            ("nnheader-replace-header" function (:arguments ("header" "new-value")) nil [21490 21792])
            ("nnheader-narrow-to-headers" function nil nil [21794 22028])
            ("nnheader-get-lines-and-char" function nil nil [22030 22294])
            ("nnheader-remove-body" function nil nil [22296 22498])
            ("nnheader-set-temp-buffer" function (:arguments ("name" "noerase")) nil [22500 22759])
            ("nnheader-numerical-files" variable (:default-value (if (boundp (quote jka-compr-compression-info-list)) (concat "\\([0-9]+\\)\\(" (mapconcat (lambda (i) (aref i 0)) jka-compr-compression-info-list "\\|") "\\)?") "[0-9]+$")) nil [22761 23028])
            ("nnheader-numerical-short-files" variable (:default-value (concat "^" nnheader-numerical-files)) nil [23030 23153])
            ("nnheader-numerical-full-files" variable (:default-value (concat "/" nnheader-numerical-files)) nil [23155 23282])
            ("nnheader-file-to-number" function (:arguments ("file")) nil [23284 23566])
            ("nnheader-directory-files-is-safe" variable (:default-value (not (eq system-type (quote windows-nt)))) nil [23568 23877])
            ("nnheader-directory-files-safe" function (:arguments ("args")) nil [23879 24148])
            ("nnheader-directory-articles" function (:arguments ("dir")) nil [24150 24483])
            ("nnheader-article-to-file-alist" function (:arguments ("dir")) nil [24485 24848])
            ("nnheader-fold-continuation-lines" function nil nil [24850 24997])
            ("nnheader-translate-file-chars" function (:arguments ("file" "full")) nil [24999 25821])
            ("nnheader-report" function (:arguments ("backend" "args")) nil [25823 26083])
            ("nnheader-get-report-string" function (:arguments ("backend")) nil [26085 26298])
            ("nnheader-get-report" function (:arguments ("backend")) nil [26300 26442])
            ("nnheader-insert" function (:arguments ("format" "args")) nil [26444 26827])
            ("nnheader-replace-chars-in-string" function (:arguments ("string" "from" "to")) nil [26829 26929])
            ("nnheader-replace-duplicate-chars-in-string" function (:arguments ("string" "from" "to")) nil [26931 27397])
            ("nnheader-file-to-group" function (:arguments ("file" "top")) nil [27399 27768])
            ("nnheader-message" function (:arguments ("level" "args")) nil [27770 28081])
            ("nnheader-be-verbose" function (:arguments ("level")) nil [28083 28262])
            ("nnheader-pathname-coding-system" variable (:default-value (quote iso-8859-1)) nil [28264 28416])
            ("nnheader-group-pathname" function (:arguments ("group" "dir" "file")) nil [28418 29012])
            ("nnheader-concat" function (:arguments ("dir" "files")) nil [29014 29146])
            ("nnheader-ms-strip-cr" function nil nil [29148 29278])
            ("nnheader-file-size" function (:arguments ("file")) nil [29280 29392])
            ("nnheader-find-etc-directory" function (:arguments ("package" "file" "first")) nil [29394 30472])
            ("ange-ftp-path-format" variable nil nil [30474 30503])
            ("efs-path-regexp" variable nil nil [30504 30528])
            ("nnheader-re-read-dir" function (:arguments ("path")) nil [30529 30930])
            ("nnheader-file-coding-system" variable (:default-value (quote raw-text)) nil [30932 31027])
            ("nnheader-insert-file-contents" function (:arguments ("filename" "visit" "beg" "end" "replace")) nil [31029 31543])
            ("nnheader-insert-nov-file" function (:arguments ("file" "first")) nil [31545 32401])
            ("nnheader-find-file-noselect" function (:arguments ("args")) nil [32403 32952])
            ("nnheader-directory-regular-files" function (:arguments ("dir")) nil [32954 33215])
            ("nnheader-directory-files" function (:arguments ("args")) nil [33217 33526])
            ("nnheader-skeleton-replace" function (:arguments ("from" "to" "regexp")) nil [33528 34227])
            ("nnheader-replace-string" function (:arguments ("from" "to")) nil [34229 34375])
            ("nnheader-replace-regexp" function (:arguments ("from" "to")) nil [34377 34532])
            ("nnheader-strip-cr" function nil nil [34534 34641])
            ("defalias" code nil nil [34643 34690])
            ("defalias" code nil nil [34691 34758])
            ("nnheader-accept-process-output" function (:arguments ("process")) nil [34851 35061])
            ("nnheader-update-marks-actions" function (:arguments ("backend-marks" "actions")) nil [35063 35583])
            ("nnheader-insert-buffer-substring" function (:arguments ("buffer" "start" "end")) nil [35585 36011])
            ("nnheader-last-message-time" variable (:default-value (quote (0 0))) nil [36013 36055])
            ("nnheader-message-maybe" function (:arguments ("args")) nil [36056 36288])
            ("run-hooks" code nil nil [36290 36321])
            ("nnheader" package nil nil [36323 36342]))          
      :file "nnheader.el"
      :pointmax 36370
      :fsize 36369
      :lastmodtime '(23525 29556 0 0)
      :unmatched-syntax '((close-paren 13224 . 13225) (symbol 13164 . 13180) (open-paren 13163 . 13164) (close-paren 1006 . 1007) (symbol 975 . 992) (open-paren 974 . 975)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus-sum" include nil nil [1767 1786])
            ("gnus-bookmark" customgroup (:user-visible-flag t) nil [2386 2484])
            ("gnus-bookmark-default-file" variable (:default-value (cond ((file-exists-p "~/.gnus.bmk") "~/.gnus.bmk") (t (nnheader-concat gnus-directory "bookmarks.el")))) nil [2486 2767])
            ("gnus-bookmark-file-coding-system" variable (:default-value (if (mm-coding-system-p (quote iso-2022-7bit)) (quote iso-2022-7bit))) nil [2769 2996])
            ("gnus-bookmark-sort-flag" variable (:default-value t) nil [2998 3255])
            ("gnus-bookmark-bmenu-toggle-infos" variable (:default-value t) nil [3257 3625])
            ("gnus-bookmark-bmenu-file-column" variable (:default-value 30) nil [3627 3905])
            ("gnus-bookmark-use-annotations" variable nil nil [3907 4056])
            ("gnus-bookmark-bookmark-inline-details" variable (:default-value (quote (author))) nil [4058 4487])
            ("gnus-bookmark-bookmark-details" variable (:default-value (quote (author subject date group annotation))) nil [4489 5015])
            ("gnus-bookmark-menu-heading" variable
               (:default-value (quote ((t (:inherit font-lock-type-face))))
                :type "face")
                nil [5017 5216])
            ("gnus-bookmark-end-of-version-stamp-marker" variable
               (:constant-flag t
                :default-value "-*- End Of Bookmark File Format Version Stamp -*-
")
                nil [5218 5402])
            ("gnus-bookmark-file-format-version" variable (:constant-flag t) nil [5404 5550])
            ("gnus-bookmark-alist" variable nil nil [5552 5908])
            ("gnus-bookmark-set" function (:user-visible-flag t) nil [5925 7052])
            ("gnus-bookmark-make-record" function (:arguments ("group" "message-id" "author" "date" "subject" "annotation")) nil [7054 7589])
            ("gnus-bookmark-set-bookmark-name" function (:arguments ("group" "author" "subject")) nil [7591 8247])
            ("gnus-bookmark-write-file" function (:user-visible-flag t) nil [8249 9103])
            ("gnus-bookmark-insert-file-format-version-stamp" function nil nil [9105 9709])
            ("gnus-bookmark-jump" function
               (:user-visible-flag t
                :arguments ("bmk-name"))
                nil [9726 10663])
            ("gnus-bookmark-already-loaded" variable nil nil [10665 10706])
            ("gnus-bookmark-alist-from-buffer" function nil nil [10708 11205])
            ("gnus-bookmark-load" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [11207 11964])
            ("gnus-bookmark-maybe-load-default-file" function nil nil [11966 12273])
            ("gnus-bookmark-maybe-sort-alist" function nil nil [12275 12616])
            ("gnus-bookmark-bmenu-list" function (:user-visible-flag t) nil [12633 14262])
            ("gnus-bookmark-bmenu-surreptitiously-rebuild-list" function nil nil [14264 14538])
            ("gnus-bookmark-get-annotation" function (:arguments ("bookmark")) nil [14540 14719])
            ("gnus-bookmark-get-bookmark" function (:arguments ("bookmark")) nil [14721 14946])
            ("gnus-bookmark-get-bookmark-record" function (:arguments ("bookmark")) nil [14948 15168])
            ("gnus-bookmark-name-from-full-record" function (:arguments ("full-record")) nil [15170 15318])
            ("gnus-bookmark-bmenu-bookmark-column" variable nil nil [15320 15368])
            ("gnus-bookmark-bmenu-hidden-bookmarks" variable nil nil [15369 15417])
            ("gnus-bookmark-bmenu-mode-map" variable nil nil [15418 15459])
            ("if" code nil nil [15461 17036])
            ("put" code nil nil [17117 17169])
            ("defalias" code nil nil [17216 17278])
            ("define-derived-mode" code nil nil [17280 19089])
            ("gnus-bookmark-bmenu-toggle-infos" variable nil nil [19121 19166])
            ("gnus-bookmark-bmenu-toggle-infos" function
               (:user-visible-flag t
                :arguments ("show"))
                nil [19168 19724])
            ("gnus-bookmark-bmenu-show-infos" function (:arguments ("force")) nil [19726 20835])
            ("gnus-bookmark-insert-details" function (:arguments ("bmk-name")) nil [20837 21336])
            ("gnus-bookmark-kill-line" function (:arguments ("newline-too")) nil [21338 21630])
            ("gnus-bookmark-get-details" function (:arguments ("bmk-name" "details-list")) nil [21632 21911])
            ("gnus-bookmark-bmenu-hide-infos" function (:arguments ("force")) nil [21913 23324])
            ("gnus-bookmark-bmenu-check-position" function nil nil [23326 23789])
            ("gnus-bookmark-bmenu-bookmark" function nil nil [23791 24693])
            ("gnus-bookmark-show-details" function (:arguments ("bookmark")) nil [24695 25281])
            ("gnus-bookmark-bmenu-show-details" function (:user-visible-flag t) nil [25283 25547])
            ("gnus-bookmark-bmenu-mark" function (:user-visible-flag t) nil [25549 25930])
            ("gnus-bookmark-bmenu-unmark" function
               (:user-visible-flag t
                :arguments ("backup"))
                nil [25932 26565])
            ("gnus-bookmark-bmenu-backup-unmark" function (:user-visible-flag t) nil [26567 26888])
            ("gnus-bookmark-bmenu-delete" function (:user-visible-flag t) nil [26890 27336])
            ("gnus-bookmark-bmenu-delete-backwards" function (:user-visible-flag t) nil [27338 27753])
            ("gnus-bookmark-bmenu-select" function (:user-visible-flag t) nil [27755 28239])
            ("gnus-bookmark-bmenu-select-by-mouse" function (:arguments ("event")) nil [28241 28369])
            ("gnus-bookmark-bmenu-load" function (:user-visible-flag t) nil [28371 28697])
            ("gnus-bookmark-bmenu-execute-deletions" function (:user-visible-flag t) nil [28699 30017])
            ("gnus-bookmark-delete" function (:arguments ("bookmark" "batch")) nil [30019 30754])
            ("gnus-bookmark" package nil nil [30756 30780]))          
      :file "gnus-bookmark.el"
      :pointmax 30813
      :fsize 30812
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus-art" include nil nil [8177 8196])
            ("gnus-sum" include nil nil [8197 8216])
            ("gnus-outlook-deuglify-version" variable
               (:constant-flag t
                :default-value "1.5 Gnus version")
                nil [8218 8315])
            ("gnus-outlook-deuglify" customgroup (:user-visible-flag t) nil [8351 8501])
            ("gnus-outlook-deuglify-unwrap-min" variable (:default-value 45) nil [8503 8689])
            ("gnus-outlook-deuglify-unwrap-max" variable (:default-value 95) nil [8691 8860])
            ("gnus-outlook-deuglify-cite-marks" variable (:default-value ">|#%") nil [8862 9021])
            ("gnus-outlook-deuglify-unwrap-stop-chars" variable nil nil [9023 9329])
            ("gnus-outlook-deuglify-no-wrap-chars" variable (:default-value "`") nil [9331 9543])
            ("gnus-outlook-deuglify-attrib-cut-regexp" variable (:default-value "\\(On \\|Am \\)?\\(Mon\\|Tue\\|Wed\\|Thu\\|Fri\\|Sat\\|Sun\\),[^,]+, ") nil [9545 9830])
            ("gnus-outlook-deuglify-attrib-verb-regexp" variable (:default-value "wrote\\|writes\\|says\\|schrieb\\|schreibt\\|meinte\\|skrev\\|a écrit\\|schreef\\|escribió") nil [9832 10115])
            ("gnus-outlook-deuglify-attrib-end-regexp" variable (:default-value ": *\\|\\.\\.\\.") nil [10117 10319])
            ("gnus-outlook-display-hook" variable nil nil [10321 10535])
            ("gnus-outlook-display-article-buffer" function nil nil [10551 11077])
            ("gnus-article-outlook-unwrap-lines" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [11094 12342])
            ("gnus-outlook-rearrange-article" function (:arguments ("attr-start")) nil [12344 13406])
            ("gnus-outlook-repair-attribution-outlook" function nil nil [13507 14093])
            ("gnus-outlook-repair-attribution-block" function nil nil [14283 14802])
            ("gnus-outlook-repair-attribution-other" function nil nil [14883 15541])
            ("gnus-article-outlook-repair-attribution" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [15558 15987])
            ("gnus-article-outlook-rearrange-citation" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [15989 16444])
            ("gnus-outlook-deuglify-article" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [16461 17051])
            ("gnus-article-outlook-deuglify-article" function (:user-visible-flag t) nil [17068 17232])
            ("deuglify" package nil nil [17234 17253]))          
      :file "deuglify.el"
      :pointmax 17327
      :fsize 17328
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "mm-url.el"
      :fsize 13612
      :lastmodtime '(23525 29555 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nndiary" include nil nil [1240 1258])
            ("message" include nil nil [1259 1277])
            ("gnus-art" include nil nil [1278 1297])
            ("gnus-diary" customgroup (:user-visible-flag t) nil [1299 1412])
            ("gnus-diary-summary-line-format" variable (:default-value "%U%R%z %uD: %(%s%) (%ud)
") nil [1414 1596])
            ("gnus-diary-time-format" variable (:default-value "%a, %b %e %y, %H:%M") nil [1598 1832])
            ("gnus-diary-delay-format-function" variable (:default-value (quote gnus-diary-delay-format-english)) nil [1834 2585])
            ("gnus-diary-version" variable
               (:constant-flag t
                :default-value nndiary-version)
                nil [2587 2668])
            ("gnus-diary-kill-entire-line" function nil nil [2750 2856])
            ("gnus-diary-delay-format-french" function (:arguments ("past" "delay")) nil [2938 3674])
            ("gnus-diary-delay-format-english" function (:arguments ("past" "delay")) nil [3677 4143])
            ("gnus-diary-header-schedule" function (:arguments ("headers")) nil [4146 4482])
            ("gnus-user-format-function-d" function (:arguments ("header")) nil [4670 5941])
            ("gnus-user-format-function-D" function (:arguments ("header")) nil [6129 6455])
            ("gnus-article-sort-by-schedule" function (:arguments ("h1" "h2")) nil [6537 6972])
            ("gnus-thread-sort-by-schedule" function (:arguments ("h1" "h2")) nil [6975 7106])
            ("gnus-summary-sort-by-schedule" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [7108 7354])
            ("gnus-summary-misc-menu" variable nil nil [7356 7387])
            ("add-hook" code nil nil [7420 7704])
            ("gnus-diary-update-group-parameters" function (:arguments ("group")) nil [7787 9231])
            ("gnus-diary-maybe-update-group-parameters" function (:arguments ("group")) nil [9450 9617])
            ("add-hook" code nil nil [9619 9708])
            ("add-hook" code nil nil [9837 9925])
            ("add-hook" code nil nil [9926 10017])
            ("gnus-diary-header-value-history" variable nil nil [10099 10195])
            ("gnus-diary-narrow-to-headers" function nil nil [10197 10623])
            ("gnus-diary-add-header" function (:arguments ("str")) nil [10625 11008])
            ("gnus-diary-check-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [11010 13118])
            ("add-hook" code nil nil [13120 13218])
            ("define-key" code nil nil [13220 13287])
            ("define-key" code nil nil [13288 13365])
            ("gnus-diary-version" function (:user-visible-flag t) nil [13447 13577])
            ("gnus-diary" package nil nil [13579 13600]))          
      :file "gnus-diary.el"
      :pointmax 13630
      :fsize 13629
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "nndiary.el"
      :fsize 55666
      :lastmodtime '(23525 29556 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [2907 2920])
            ("gnus" include nil nil [2923 2938])
            ("gnus-int" include nil nil [2939 2958])
            ("gnus-sum" include nil nil [2959 2978])
            ("gnus-art" include nil nil [2979 2998])
            ("gnus-util" include nil nil [2999 3019])
            ("nnmail" include nil nil [3020 3037])
            ("easymenu" include nil nil [3038 3057])
            ("registry" include nil nil [3058 3077])
            ("gnus-adaptive-word-syntax-table" variable nil nil [3079 3119])
            ("gnus-registry-dirty" variable (:default-value t) nil [3121 3202])
            ("gnus-registry" customgroup (:user-visible-flag t) nil [3204 3288])
            ("gnus-registry-marks" variable (:default-value (quote ((Important :char 105 :image "summary_important") (Work :char 119 :image "summary_work") (Personal :char 112 :image "summary_personal") (To-Do :char 116 :image "summary_todo") (Later :char 108 :image "summary_later")))) nil [3290 3903])
            ("gnus-registry-default-mark" variable (:default-value (quote To-Do)) nil [3905 4062])
            ("gnus-registry-unfollowed-addresses" variable (:default-value (list (regexp-quote user-mail-address))) nil [4064 4433])
            ("gnus-registry-unfollowed-groups" variable (:default-value (quote ("delayed$" "drafts$" "queue$" "INBOX$" "^nnmairix:" "archive"))) nil [4435 4939])
            ("gnus-registry-install" variable (:default-value (quote ask)) nil [4941 5192])
            ("gnus-registry-enabled" variable nil nil [5194 5228])
            ("gnus-summary-misc-menu" variable nil nil [5230 5261])
            ("gnus-registry-misc-menus" variable nil nil [5295 5332])
            ("make-obsolete-variable" code nil nil [5365 5427])
            ("make-obsolete-variable" code nil nil [5428 5499])
            ("make-obsolete-variable" code nil nil [5500 5567])
            ("make-obsolete-variable" code nil nil [5568 5632])
            ("make-obsolete-variable" code nil nil [5633 5712])
            ("make-obsolete-variable" code nil nil [5745 5814])
            ("gnus-registry-track-extra" variable (:default-value (quote (subject sender recipient))) nil [5816 6301])
            ("gnus-registry-split-strategy" variable nil nil [6303 7311])
            ("gnus-registry-minimum-subject-length" variable (:default-value 5) nil [7313 7474])
            ("gnus-registry-extra-entries-precious" variable (:default-value (quote (mark))) nil [7476 7884])
            ("gnus-registry-cache-file" variable (:default-value (nnheader-concat (or gnus-dribble-directory gnus-home-directory "~/") ".gnus.registry.eieio")) nil [7886 8111])
            ("gnus-registry-max-entries" variable nil nil [8113 8349])
            ("gnus-registry-prune-factor" variable (:default-value 0.1) nil [8351 8925])
            ("gnus-registry-default-sort-function" variable (:default-value (function gnus-registry-sort-by-creation-time)) nil [8927 9289])
            ("gnus-registry-sort-by-creation-time" function (:arguments ("l" "r")) nil [9291 9513])
            ("gnus-registry-fixup-registry" function (:arguments ("db")) nil [9515 10193])
            ("gnus-registry-make-db" function (:arguments ("file")) nil [10195 10658])
            ("gnus-registry-db" variable (:default-value (gnus-registry-make-db)) nil [10660 10769])
            ("gnus-registry-remake-db" function
               (:user-visible-flag t
                :arguments ("forsure"))
                nil [10809 11170])
            ("gnus-registry-load" function (:user-visible-flag t) nil [11172 12070])
            ("gnus-registry-read" function (:arguments ("file")) nil [12072 12567])
            ("gnus-registry-save" function
               (:user-visible-flag t
                :arguments ("file" "db"))
                nil [12569 13146])
            ("gnus-registry-remove-ignored" function nil nil [13148 13683])
            ("gnus-registry-action" function (:arguments ("action" "data-header" "from" "to" "method")) nil [13727 14684])
            ("gnus-registry-spool-action" function (:arguments ("id" "group" "subject" "sender" "recipients")) nil [14686 15435])
            ("gnus-registry-handle-action" function (:arguments ("id" "from" "to" "subject" "sender" "recipients")) nil [15437 17041])
            ("gnus-registry-split-fancy-with-parent" function nil nil [17169 19291])
            ("gnus-registry--split-fancy-with-parent-internal" function (:arguments ("spec" "references" "refstr" "sender" "subject" "recipients" "log-agent")) nil [19293 24507])
            ("gnus-registry-post-process-groups" function (:arguments ("mode" "key" "groups")) nil [24509 27737])
            ("gnus-registry-follow-group-p" function (:arguments ("group")) nil [27739 28174])
            ("gnus-registry-ignore-group-p" function (:arguments ("group")) nil [28425 29448])
            ("gnus-registry-wash-for-keywords" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [29450 30456])
            ("gnus-registry-keywords" function nil nil [30458 30643])
            ("gnus-registry-find-keywords" function (:arguments ("keyword")) nil [30645 30860])
            ("gnus-registry-register-message-ids" function nil nil [30862 31633])
            ("gnus-registry-fetch-message-id-fast" function (:arguments ("article")) nil [31661 31958])
            ("gnus-registry-extract-addresses" function (:arguments ("text")) nil [31960 32627])
            ("gnus-registry-sort-addresses" function (:arguments ("addresses")) nil [32629 32812])
            ("gnus-registry-simplify-subject" function (:arguments ("subject")) nil [32814 32933])
            ("gnus-registry-fetch-simplified-message-subject-fast" function (:arguments ("article")) nil [32935 33364])
            ("gnus-registry-fetch-sender-fast" function (:arguments ("article")) nil [33366 33466])
            ("gnus-registry-fetch-recipients-fast" function (:arguments ("article")) nil [33468 33702])
            ("gnus-registry-fetch-header-fast" function (:arguments ("article" "header")) nil [33704 34072])
            ("gnus-registry-do-marks" function (:arguments ("type" "function")) nil [34097 34515])
            ("gnus-registry--set/remove-mark" function (:arguments ("mark" "remove" "articles")) nil [34620 35713])
            ("gnus-registry-install-shortcuts" function nil nil [35775 38364])
            ("make-obsolete" code nil nil [38366 38479])
            ("defalias" code nil nil [38483 38571])
            ("gnus-registry-article-marks-to-chars" function (:arguments ("headers")) nil [38672 39043])
            ("gnus-registry-article-marks-to-names" function (:arguments ("headers")) nil [39144 39414])
            ("gnus-registry-read-mark" function nil nil [39416 39765])
            ("gnus-registry-set-article-mark" function
               (:user-visible-flag t
                :arguments ("articles"))
                nil [39767 40059])
            ("gnus-registry-remove-article-mark" function
               (:user-visible-flag t
                :arguments ("articles"))
                nil [40061 40357])
            ("gnus-registry-set-article-mark-internal" function (:arguments ("mark" "articles" "remove" "show-message")) nil [40359 41150])
            ("gnus-registry-get-article-marks" function
               (:user-visible-flag t
                :arguments ("articles"))
                nil [41152 41682])
            ("gnus-registry-group-count" function (:arguments ("id")) nil [41684 41838])
            ("gnus-registry-get-or-make-entry" function (:arguments ("id")) nil [41840 42257])
            ("gnus-registry-delete-entries" function (:arguments ("idlist")) nil [42259 42352])
            ("gnus-registry-get-id-key" function (:arguments ("id" "key")) nil [42354 42456])
            ("gnus-registry-set-id-key" function (:arguments ("id" "key" "vals")) nil [42458 42747])
            ("gnus-registry-insert" function (:arguments ("db" "id" "entry")) nil [42749 43048])
            ("gnus-registry-import-eld" function (:arguments ("file")) nil [43050 44879])
            ("gnus-registry-initialize" function (:user-visible-flag t) nil [44896 45119])
            ("gnus-registry-install-hooks" function (:user-visible-flag t) nil [45174 45751])
            ("gnus-registry-unload-hook" function (:user-visible-flag t) nil [45753 46353])
            ("add-hook" code nil nil [46355 46419])
            ("gnus-registry-install-p" function (:user-visible-flag t) nil [46421 47082])
            ("gnus-try-warping-via-registry" function (:user-visible-flag t) nil [47125 49117])
            ("gnus-registry-remove-extra-data" function
               (:user-visible-flag t
                :arguments ("extra"))
                nil [49119 49978])
            ("gnus-registry" package nil nil [50003 50027]))          
      :file "gnus-registry.el"
      :pointmax 50060
      :fsize 50059
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((symbol 38480 . 38481) (close-paren 2920 . 2921) (symbol 2889 . 2906) (open-paren 2888 . 2889)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gravatar" include nil nil [872 891])
            ("gnus-art" include nil nil [892 911])
            ("mail-extr" include nil nil [912 932])
            ("gnus-gravatar" customgroup (:user-visible-flag t) nil [984 1053])
            ("gnus-gravatar-size" variable nil nil [1055 1248])
            ("gnus-gravatar-properties" variable (:default-value (quote (:ascent center :relief 1))) nil [1250 1428])
            ("gnus-gravatar-too-ugly" variable (:default-value gnus-article-x-face-too-ugly) nil [1430 1647])
            ("gnus-gravatar-transform-address" function (:arguments ("header" "category" "force")) nil [1649 2538])
            ("gnus-gravatar-insert" function (:arguments ("gravatar" "header" "address" "category")) nil [2540 4197])
            ("gnus-treat-from-gravatar" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [4214 4585])
            ("gnus-treat-mail-gravatar" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [4602 5051])
            ("gnus-gravatar" package nil nil [5053 5077]))          
      :file "gnus-gravatar.el"
      :pointmax 5110
      :fsize 5109
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [945 958])
            ("gnus" include nil nil [961 976])
            ("gnus-art" include nil nil [977 996])
            ("gnus-range" include nil nil [997 1018])
            ("gnus-kill-file-mode-hook" variable nil nil [1020 1134])
            ("gnus-kill-expiry-days" variable (:default-value 7) nil [1136 1303])
            ("gnus-kill-save-kill-file" variable nil nil [1305 1448])
            ("gnus-winconf-kill-file" variable nil nil [1450 1533])
            ("gnus-kill-killed" variable (:default-value t) nil [1535 1831])
            ("gnus-raise" function (:arguments ("field" "expression" "level")) nil [1836 1970])
            ("gnus-lower" function (:arguments ("field" "expression" "level")) nil [1972 2110])
            ("gnus-kill-file-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map emacs-lisp-mode-map) (gnus-define-keymap map "" gnus-kill-file-kill-by-subject "" gnus-kill-file-kill-by-author "" gnus-kill-file-kill-by-thread "" gnus-kill-file-kill-by-xref "" gnus-kill-file-apply-buffer "" gnus-kill-file-apply-last-sexp "" gnus-kill-file-exit) map)) nil [2145 2632])
            ("define-derived-mode" code nil nil [2634 5526])
            ("gnus-kill-file-edit-file" function
               (:user-visible-flag t
                :arguments ("newsgroup"))
                nil [5528 6582])
            ("gnus-kill-set-kill-buffer" function nil nil [6637 6850])
            ("gnus-kill-file-enter-kill" function (:arguments ("field" "regexp" "dont-move")) nil [6852 7335])
            ("gnus-kill-file-kill-by-subject" function (:user-visible-flag t) nil [7337 7600])
            ("gnus-kill-file-kill-by-author" function (:user-visible-flag t) nil [7602 7829])
            ("gnus-kill-file-kill-by-thread" function (:user-visible-flag t) nil [7831 8060])
            ("gnus-kill-file-kill-by-xref" function (:user-visible-flag t) nil [8062 8613])
            ("gnus-kill-file-raise-followups-to-author" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [8615 9304])
            ("gnus-kill-file-apply-buffer" function (:user-visible-flag t) nil [9306 9630])
            ("gnus-kill-file-apply-string" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [9632 9912])
            ("gnus-kill-file-apply-last-sexp" function (:user-visible-flag t) nil [9914 10446])
            ("gnus-kill-file-exit" function (:user-visible-flag t) nil [10448 11084])
            ("gnus-expunge" function (:arguments ("marks")) nil [11105 11262])
            ("gnus-apply-kill-file-unless-scored" function nil nil [11264 11811])
            ("gnus-apply-kill-file-internal" function nil nil [11813 13837])
            ("gnus-kill-parse-gnus-kill-file" function nil nil [13865 14540])
            ("gnus-kill-parse-rn-kill-file" function nil nil [14567 15626])
            ("gnus-kill" function (:arguments ("field" "regexp" "exe-command" "all" "silent")) nil [15729 18125])
            ("gnus-pp-gnus-kill" function (:arguments ("object")) nil [18127 19102])
            ("gnus-execute-1" function (:arguments ("function" "regexp" "form" "header")) nil [19104 20447])
            ("gnus-execute" function (:arguments ("field" "regexp" "form" "backward" "unread")) nil [20449 22256])
            ("defalias" code nil nil [22273 22318])
            ("gnus-batch-score" function (:user-visible-flag t) nil [22334 23571])
            ("gnus-kill" package nil nil [23573 23593]))          
      :file "gnus-kill.el"
      :pointmax 23622
      :fsize 23621
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 958 . 959) (symbol 927 . 944) (open-paren 926 . 927)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nndraft" include nil nil [1209 1227])
            ("gnus-draft" include nil nil [1228 1249])
            ("parse-time-string" function (:prototype-flag t) nil [1250 1300])
            ("gnus-delay" customgroup (:user-visible-flag t) nil [1302 1400])
            ("gnus-delay-group" variable (:default-value "delayed") nil [1402 1522])
            ("gnus-delay-header" variable (:default-value "X-Gnus-Delayed") nil [1524 1664])
            ("gnus-delay-default-delay" variable (:default-value "3d") nil [1666 1773])
            ("gnus-delay-default-hour" variable (:default-value 8) nil [1775 1932])
            ("gnus-delay-article" function
               (:user-visible-flag t
                :arguments ("delay"))
                nil [1949 4940])
            ("gnus-delay-send-queue" function (:user-visible-flag t) nil [4957 6115])
            ("gnus-delay-initialize" function (:arguments ("no-keymap" "no-check")) nil [6132 6561])
            ("gnus-delay" package nil nil [6563 6584]))          
      :file "gnus-delay.el"
      :pointmax 6660
      :fsize 6660
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "nndraft.el"
      :fsize 11905
      :lastmodtime '(23525 29556 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [884 899])
            ("gnus-sum" include nil nil [900 919])
            ("message" include nil nil [920 938])
            ("gnus-msg" include nil nil [939 958])
            ("nndraft" include nil nil [959 977])
            ("gnus-agent" include nil nil [978 999])
            ("cl" include nil nil [1019 1032])
            ("gnus-draft-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map "Dt" gnus-draft-toggle-sending "e" gnus-draft-edit-message "De" gnus-draft-edit-message "Ds" gnus-draft-send-message "DS" gnus-draft-send-all-messages) map)) nil [1057 1379])
            ("gnus-draft-make-menu-bar" function nil nil [1381 1817])
            ("define-minor-mode" code nil nil [1819 2262])
            ("gnus-draft-toggle-sending" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [2278 2751])
            ("gnus-draft-edit-message" function (:user-visible-flag t) nil [2753 3675])
            ("gnus-draft-send-message" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [3677 4336])
            ("gnus-draft-send" function (:arguments ("article" "group" "interactive")) nil [4338 6943])
            ("gnus-draft-send-all-messages" function (:user-visible-flag t) nil [6945 7164])
            ("gnus-group-send-queue" function (:user-visible-flag t) nil [7166 8040])
            ("gnus-draft-reminder" function (:user-visible-flag t) nil [8057 8478])
            ("gnus-draft-setup-hook" variable nil nil [8480 8629])
            ("gnus-draft-setup" function (:arguments ("narticle" "group" "restore" "dont-pop")) nil [8632 10558])
            ("gnus-draft-article-sendable-p" function (:arguments ("article")) nil [10560 10693])
            ("gnus-draft-check-draft-articles" function (:arguments ("articles")) nil [10695 11622])
            ("gnus-draft-clear-marks" function nil nil [11624 11761])
            ("gnus-draft" package nil nil [11763 11784]))          
      :file "gnus-draft.el"
      :pointmax 11814
      :fsize 11813
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 1032 . 1033) (symbol 1001 . 1018) (open-paren 1000 . 1001)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("ignore-errors" code nil nil [1115 1157])
            ("gnus-sum" include nil nil [1158 1177])
            ("gnus-group" include nil nil [1178 1199])
            ("gnus-int" include nil nil [1200 1219])
            ("gnus-art" include nil nil [1220 1239])
            ("gnus-util" include nil nil [1240 1260])
            ("ignore-errors" code nil nil [1261 1305])
            ("gnus-fun" include nil nil [1324 1343])
            ("gnus-notifications" customgroup (:user-visible-flag t) nil [1345 1458])
            ("gnus-notifications-use-google-contacts" variable (:default-value t) nil [1460 1601])
            ("gnus-notifications-use-gravatar" variable (:default-value t) nil [1603 1730])
            ("gnus-notifications-minimum-level" variable (:default-value 1) nil [1732 1974])
            ("gnus-notifications-timeout" variable nil nil [1976 2214])
            ("gnus-notifications-sent" variable nil nil [2216 2284])
            ("gnus-notifications-id-to-msg" variable nil nil [2286 2366])
            ("gnus-notifications-action" function (:arguments ("id" "key")) nil [2368 3009])
            ("gnus-notifications-notify" function (:arguments ("from" "subject" "photo-file")) nil [3011 3723])
            ("declare-function" code nil nil [3725 3808])
            ("gnus-notifications-get-photo" function (:arguments ("mail-address")) nil [3810 4481])
            ("gnus-notifications-get-photo-file" function (:arguments ("mail-address")) nil [4483 4975])
            ("gnus-notifications" function nil nil [4992 8196])
            ("gnus-notifications" package nil nil [8198 8227]))          
      :file "gnus-notifications.el"
      :pointmax 8265
      :fsize 8264
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [922 937])
            ("gnus-msg" include nil nil [938 957])
            ("cl" include nil nil [977 990])
            ("gnus-mailing-list-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map "h" gnus-mailing-list-help "s" gnus-mailing-list-subscribe "u" gnus-mailing-list-unsubscribe "p" gnus-mailing-list-post "o" gnus-mailing-list-owner "a" gnus-mailing-list-archive) map)) nil [1022 1391])
            ("gnus-mailing-list-menu" variable nil nil [1393 1424])
            ("gnus-mailing-list-make-menu-bar" function nil nil [1426 1924])
            ("turn-on-gnus-mailing-list-mode" function nil nil [1941 2079])
            ("gnus-mailing-list-insinuate" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [2096 2794])
            ("define-minor-mode" code nil nil [2811 3239])
            ("gnus-mailing-list-help" function (:user-visible-flag t) nil [3255 3567])
            ("gnus-mailing-list-subscribe" function (:user-visible-flag t) nil [3569 3903])
            ("gnus-mailing-list-unsubscribe" function (:user-visible-flag t) nil [3905 4255])
            ("gnus-mailing-list-post" function (:user-visible-flag t) nil [4257 4565])
            ("gnus-mailing-list-owner" function (:user-visible-flag t) nil [4567 4882])
            ("gnus-mailing-list-archive" function (:user-visible-flag t) nil [4884 5319])
            ("gnus-mailing-list-message" function (:arguments ("address")) nil [5344 5643])
            ("gnus-ml" package nil nil [5645 5663]))          
      :file "gnus-ml.el"
      :pointmax 5690
      :fsize 5689
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 990 . 991) (symbol 959 . 976) (open-paren 958 . 959)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1077 1090])
            ("gnus-art" include nil nil [1093 1112])
            ("mm-decode" include nil nil [1132 1152])
            ("mm-url" include nil nil [1155 1172])
            ("url" include nil nil [1173 1187])
            ("url-cache" include nil nil [1188 1208])
            ("xml" include nil nil [1209 1223])
            ("browse-url" include nil nil [1224 1245])
            ("mm-util" include nil nil [1246 1264])
            ("help-fns" include nil nil [1265 1284])
            ("url-queue" include nil nil [1285 1305])
            ("gnus-html-image-cache-ttl" variable (:default-value (days-to-time 7)) nil [1307 1708])
            ("gnus-html-image-automatic-caching" variable (:default-value t) nil [1710 1860])
            ("gnus-html-frame-width" variable (:default-value 70) nil [1862 1995])
            ("gnus-max-image-proportion" variable (:default-value 0.9) nil [1997 2375])
            ("gnus-html-image-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "u" (quote gnus-article-copy-string)) (define-key map "i" (quote gnus-html-insert-image)) (define-key map "v" (quote gnus-html-browse-url)) map)) nil [2377 2597])
            ("gnus-html-displayed-image-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "a" (quote gnus-html-show-alt-text)) (define-key map "i" (quote gnus-html-browse-image)) (define-key map "" (quote gnus-html-browse-url)) (define-key map "u" (quote gnus-article-copy-string)) (define-key map [tab] (quote widget-forward)) map)) nil [2599 2923])
            ("gnus-html-encode-url" function (:arguments ("url")) nil [2925 3019])
            ("gnus-html-cache-expired" function (:arguments ("url" "ttl")) nil [3021 3447])
            ("gnus-article-html" function (:arguments ("handle")) nil [3464 4664])
            ("gnus-article-mouse-face" variable nil nil [4666 4698])
            ("gnus-html-pre-wash" function nil nil [4700 4955])
            ("gnus-html-wash-images" function nil nil [4957 8145])
            ("gnus-html-display-image" function (:arguments ("url" "start" "end" "alt-text")) nil [8147 8880])
            ("gnus-html-wash-tags" function nil nil [8882 12175])
            ("gnus-html-insert-image" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [12177 12355])
            ("gnus-html-show-alt-text" function (:user-visible-flag t) nil [12357 12515])
            ("gnus-html-browse-image" function (:user-visible-flag t) nil [12517 12654])
            ("gnus-html-browse-url" function (:user-visible-flag t) nil [12656 12957])
            ("gnus-html-schedule-image-fetching" function (:arguments ("buffer" "image")) nil [12959 13277])
            ("gnus-html-image-fetched" function (:arguments ("status" "buffer" "image")) nil [13279 13889])
            ("gnus-html-get-image-data" function (:arguments ("url")) nil [13891 14233])
            ("gnus-html-maximum-image-size" function nil nil [14235 14720])
            ("declare-function" code nil nil [14756 14825])
            ("gnus-html-put-image" function (:arguments ("data" "url" "alt-text")) nil [14827 17106])
            ("gnus-html-image-url-blocked-p" function (:arguments ("url" "blocked-images")) nil [17108 17562])
            ("gnus-html-prefetch-images" function (:arguments ("summary")) nil [17579 18297])
            ("gnus-html" package nil nil [18299 18319]))          
      :file "gnus-html.el"
      :pointmax 18348
      :fsize 18347
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 1152 . 1153) (symbol 1114 . 1131) (open-paren 1113 . 1114) (close-paren 1090 . 1091) (symbol 1059 . 1076) (open-paren 1058 . 1059)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [1017 1032])
            ("gnus-sum" include nil nil [1033 1052])
            ("format-spec" include nil nil [1053 1075])
            ("sieve-mode" function (:prototype-flag t) nil [1076 1111])
            ("sieve" include nil nil [1133 1149])
            ("gnus-sieve" customgroup (:user-visible-flag t) nil [1166 1240])
            ("gnus-sieve-file" variable (:default-value "~/.sieve") nil [1242 1346])
            ("gnus-sieve-region-start" variable (:default-value "
## Begin Gnus Sieve Script
") nil [1348 1533])
            ("gnus-sieve-region-end" variable (:default-value "
## End Gnus Sieve Script
") nil [1535 1714])
            ("gnus-sieve-select-method" variable nil nil [1716 1936])
            ("gnus-sieve-crosspost" variable (:default-value t) nil [1938 2073])
            ("gnus-sieve-update-shell-command" variable (:default-value "echo put %f | sieveshell %s") nil [2075 2395])
            ("gnus-sieve-update" function (:user-visible-flag t) nil [2412 3011])
            ("gnus-sieve-generate" function (:user-visible-flag t) nil [3028 3791])
            ("gnus-sieve-guess-rule-for-article" function nil nil [3793 4037])
            ("gnus-sieve-article-add-rule" function nil nil [4054 4519])
            ("gnus-sieve-string-list" function (:arguments ("list")) nil [4572 4820])
            ("gnus-sieve-test-list" function (:arguments ("list")) nil [4822 5144])
            ("gnus-sieve-test-token" function (:arguments ("token")) nil [5174 5833])
            ("gnus-sieve-test" function (:arguments ("test")) nil [5835 6320])
            ("gnus-sieve-script" function (:arguments ("method" "crosspost")) nil [6322 7684])
            ("gnus-sieve" package nil nil [7686 7707]))          
      :file "gnus-sieve.el"
      :pointmax 7737
      :fsize 7736
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 1149 . 1150) (symbol 1113 . 1130) (open-paren 1112 . 1113)))
    (semanticdb-table "semanticdb-table"
      :file "nnimap.el"
      :fsize 75819
      :lastmodtime '(23525 29556 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [895 908])
            ("gnus" include nil nil [911 926])
            ("gnus-int" include nil nil [927 946])
            ("nnheader" include nil nil [947 966])
            ("nntp" include nil nil [967 982])
            ("nnmail" include nil nil [983 1000])
            ("gnus-demon" customgroup (:user-visible-flag t) nil [1002 1064])
            ("gnus-demon-handlers" variable nil nil [1066 2036])
            ("gnus-demon-timestep" variable (:default-value 60) nil [2038 2156])
            ("gnus-demon-timers" variable nil nil [2183 2257])
            ("gnus-inhibit-demon" variable nil nil [2258 2339])
            ("gnus-demon-add-handler" function (:arguments ("function" "time" "idle")) nil [2357 2665])
            ("gnus-demon-remove-handler" function (:arguments ("function" "no-init")) nil [2667 2878])
            ("gnus-demon-idle-since" function nil nil [2880 3020])
            ("gnus-demon-run-callback" function (:arguments ("func" "idle" "time" "special")) nil [3022 4133])
            ("gnus-demon-init" function (:user-visible-flag t) nil [4135 5591])
            ("gnus-demon-time-to-step" function (:arguments ("time")) nil [5593 6749])
            ("gnus-add-shutdown" code nil nil [6751 6795])
            ("gnus-demon-cancel" function (:user-visible-flag t) nil [6797 7015])
            ("gnus-demon-add-disconnection" function nil nil [7017 7167])
            ("gnus-demon-close-connections" function nil nil [7169 7260])
            ("gnus-demon-add-nntp-close-connection" function nil nil [7262 7522])
            ("gnus-demon-nntp-close-connection" function nil nil [7524 7689])
            ("gnus-demon-add-scanmail" function nil nil [7691 7839])
            ("gnus-demon-scan-mail" function nil nil [7841 8204])
            ("gnus-demon-add-rescan" function nil nil [8206 8355])
            ("gnus-demon-scan-news" function nil nil [8357 8621])
            ("gnus-demon-add-scan-timestamps" function nil nil [8623 8786])
            ("gnus-demon-scan-timestamps" function nil nil [8788 9337])
            ("gnus-demon" package nil nil [9339 9360]))          
      :file "gnus-demon.el"
      :pointmax 9390
      :fsize 9389
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 908 . 909) (symbol 877 . 894) (open-paren 876 . 877)))
    (semanticdb-table "semanticdb-table"
      :file "nntp.el"
      :fsize 75891
      :lastmodtime '(23525 29557 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [950 963])
            ("gnus" include nil nil [966 981])
            ("gnus-art" include nil nil [982 1001])
            ("message" include nil nil [1002 1020])
            ("gnus-msg" include nil nil [1021 1040])
            ("mm-decode" include nil nil [1041 1061])
            ("yenc" include nil nil [1062 1077])
            ("gnus-extract" customgroup (:user-visible-flag t) nil [1079 1172])
            ("gnus-extract-view" customgroup (:user-visible-flag t) nil [1174 1258])
            ("gnus-extract-archive" customgroup (:user-visible-flag t) nil [1260 1351])
            ("gnus-extract-post" customgroup (:user-visible-flag t) nil [1353 1466])
            ("gnus-uu-default-view-rules" variable (:default-value (quote (("\\.te?xt$\\|\\.doc$\\|read.*me\\|\\.c?$\\|\\.h$\\|\\.bat$\\|\\.asm$\\|makefile" "cat %s | sed 's/$//'") ("\\.pas$" "cat %s | sed 's/$//'") ("\\.[1-9]$" "groff -mandoc -Tascii %s | sed s/.//g") ("\\.\\(jpe?g\\|gif\\|tiff?\\|p[pgb]m\\|xwd\\|xbm\\|pcx\\)$" "display") ("\\.tga$" "tgatoppm %s | ee -") ("\\.\\(wav\\|aiff\\|hcom\\|u[blw]\\|s[bfw]\\|voc\\|smp\\)$" "sox -v .5 %s -t .au -u - > /dev/audio") ("\\.au$" "cat %s > /dev/audio") ("\\.midi?$" "playmidi -f") ("\\.mod$" "str32") ("\\.ps$" "ghostview") ("\\.dvi$" "xdvi") ("\\.html$" "xmosaic") ("\\.mpe?g$" "mpeg_play") ("\\.\\(flc\\|fli\\|rle\\|iff\\|pfx\\|avi\\|sme\\|rpza\\|dl\\|qt\\|rsrc\\|mov\\)$" "xanim") ("\\.\\(tar\\|arj\\|zip\\|zoo\\|arc\\|gz\\|Z\\|lzh\\|ar\\|lha\\)$" "gnus-uu-archive")))) nil [1501 3686])
            ("gnus-uu-user-view-rules" variable nil nil [3688 3941])
            ("gnus-uu-user-view-rules-end" variable (:default-value (quote (("" "file")))) nil [3943 4231])
            ("gnus-uu-default-archive-rules" variable (:default-value (quote (("\\.tar$" "tar xf") ("\\.zip$" "unzip -o") ("\\.ar$" "ar x") ("\\.arj$" "unarj x") ("\\.zoo$" "zoo -e") ("\\.\\(lzh\\|lha\\)$" "lha x") ("\\.Z$" "uncompress") ("\\.gz$" "gunzip") ("\\.arc$" "arc -x")))) nil [4264 4669])
            ("gnus-uu-destructive-archivers" variable (:default-value (list "uncompress" "gunzip")) nil [4671 4740])
            ("gnus-uu-user-archive-rules" variable nil nil [4742 5159])
            ("gnus-uu-ignore-files-by-name" variable nil nil [5161 5639])
            ("gnus-uu-ignore-files-by-type" variable nil nil [5641 6140])
            ("gnus-uu-ext-to-mime-list" variable
               (:constant-flag t
                :default-value (quote (("\\.gif$" "image/gif") ("\\.jpe?g$" "image/jpeg") ("\\.tiff?$" "image/tiff") ("\\.xwd$" "image/xwd") ("\\.pbm$" "image/pbm") ("\\.pgm$" "image/pgm") ("\\.ppm$" "image/ppm") ("\\.xbm$" "image/xbm") ("\\.pcx$" "image/pcx") ("\\.tga$" "image/tga") ("\\.ps$" "image/postscript") ("\\.fli$" "video/fli") ("\\.wav$" "audio/wav") ("\\.aiff$" "audio/aiff") ("\\.hcom$" "audio/hcom") ("\\.voc$" "audio/voc") ("\\.smp$" "audio/smp") ("\\.mod$" "audio/mod") ("\\.dvi$" "image/dvi") ("\\.mpe?g$" "video/mpeg") ("\\.au$" "audio/basic") ("\\.\\(te?xt\\|doc\\|c\\|h\\)$" "text/plain") ("\\.\\(c\\|h\\)$" "text/source") ("read.*me" "text/plain") ("\\.html$" "text/html") ("\\.bat$" "text/bat") ("\\.[1-6]$" "text/man") ("\\.flc$" "video/flc") ("\\.rle$" "video/rle") ("\\.pfx$" "video/pfx") ("\\.avi$" "video/avi") ("\\.sme$" "video/sme") ("\\.rpza$" "video/prza") ("\\.dl$" "video/dl") ("\\.qt$" "video/qt") ("\\.rsrc$" "video/rsrc") ("\\..*$" "unknown/unknown"))))
                nil [6166 7299])
            ("gnus-uu-tmp-dir" variable (:default-value temporary-file-directory) nil [7337 7506])
            ("gnus-uu-do-not-unpack-archives" variable nil nil [7508 7706])
            ("gnus-uu-ignore-default-view-rules" variable nil nil [7708 7936])
            ("gnus-uu-grabbed-file-functions" variable nil nil [7938 8283])
            ("gnus-uu-ignore-default-archive-rules" variable nil nil [8285 8537])
            ("gnus-uu-kill-carriage-return" variable (:default-value t) nil [8539 8713])
            ("gnus-uu-view-with-metamail" variable nil nil [8715 8996])
            ("gnus-uu-unmark-articles-not-decoded" variable nil nil [8998 9199])
            ("gnus-uu-correct-stripped-uucode" variable nil nil [9201 9408])
            ("gnus-uu-save-in-digest" variable nil nil [9410 9821])
            ("gnus-uu-pre-uudecode-hook" variable nil nil [9823 9952])
            ("gnus-uu-digest-headers" variable (:default-value (quote ("^Date:" "^From:" "^To:" "^Cc:" "^Subject:" "^Message-ID:" "^Keywords:" "^Summary:" "^References:" "^Content-Type:" "^Content-Transfer-Encoding:" "^MIME-Version:" "^Content-Disposition:" "^Content-Description:" "^Content-ID:"))) nil [9954 10439])
            ("gnus-uu-save-separate-articles" variable nil nil [10441 10596])
            ("gnus-uu-be-dangerous" variable (:default-value (quote ask)) nil [10598 10968])
            ("gnus-uu-saved-article-name" variable nil nil [10993 11032])
            ("gnus-uu-begin-string" variable (:default-value "^begin[ 	]+0?[0-7][0-7][0-7][ 	]+\\(.*\\)$") nil [11034 11110])
            ("gnus-uu-end-string" variable (:default-value "^end[ 	]*$") nil [11111 11152])
            ("gnus-uu-body-line" variable (:default-value "^M") nil [11154 11185])
            ("let" code nil nil [11186 11357])
            ("gnus-uu-shar-begin-string" variable (:default-value "^#! */bin/sh") nil [11429 11478])
            ("gnus-uu-shar-name-marker" variable (:default-value "begin 0?[0-7][0-7][0-7][ 	]+\\(\\(\\w\\|[.\\:]\\)*\\b\\)") nil [11480 11575])
            ("gnus-uu-postscript-begin-string" variable (:default-value "^%!PS-") nil [11577 11626])
            ("gnus-uu-postscript-end-string" variable (:default-value "^%%EOF$") nil [11627 11675])
            ("gnus-uu-file-name" variable nil nil [11677 11707])
            ("gnus-uu-uudecode-process" variable nil nil [11708 11745])
            ("gnus-uu-binhex-article-name" variable nil nil [11746 11786])
            ("gnus-uu-yenc-article-name" variable nil nil [11787 11825])
            ("gnus-uu-work-dir" variable nil nil [11827 11856])
            ("gnus-uu-output-buffer-name" variable (:default-value " *Gnus UU Output*") nil [11858 11913])
            ("gnus-uu-default-dir" variable (:default-value gnus-article-save-directory) nil [11915 11971])
            ("gnus-uu-digest-from-subject" variable nil nil [11972 12012])
            ("gnus-uu-digest-buffer" variable nil nil [12013 12047])
            ("gnus-uu-decode-uu" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [12063 12215])
            ("gnus-uu-decode-uu-and-save" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [12217 12551])
            ("gnus-uu-decode-unshar" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [12553 12722])
            ("gnus-uu-decode-unshar-and-save" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [12724 13062])
            ("gnus-uu-decode-save" function
               (:user-visible-flag t
                :arguments ("n" "file"))
                nil [13064 13507])
            ("gnus-uu-decode-binhex" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [13509 13942])
            ("gnus-uu-decode-yenc" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [13944 14307])
            ("gnus-uu-decode-uu-view" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [14309 14508])
            ("gnus-uu-decode-uu-and-save-view" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [14510 14858])
            ("gnus-uu-decode-unshar-view" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [14860 15065])
            ("gnus-uu-decode-unshar-and-save-view" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [15067 15415])
            ("gnus-uu-decode-save-view" function
               (:user-visible-flag t
                :arguments ("n" "file"))
                nil [15417 15871])
            ("gnus-uu-decode-binhex-view" function
               (:user-visible-flag t
                :arguments ("n" "file"))
                nil [15873 16327])
            ("gnus-uu-digest-mail-forward" function
               (:user-visible-flag t
                :arguments ("n" "post"))
                nil [16362 18836])
            ("gnus-uu-digest-post-forward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [18838 18982])
            ("gnus-message-process-mark" function (:arguments ("unmarkp" "new-marked")) nil [19005 19481])
            ("gnus-new-processable" function (:arguments ("unmarkp" "articles")) nil [19483 19669])
            ("gnus-uu-mark-by-regexp" function
               (:user-visible-flag t
                :arguments ("regexp" "unmark"))
                nil [19671 20295])
            ("gnus-uu-unmark-by-regexp" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [20297 20528])
            ("gnus-uu-mark-series" function
               (:user-visible-flag t
                :arguments ("silent"))
                nil [20530 20939])
            ("gnus-uu-mark-region" function
               (:user-visible-flag t
                :arguments ("beg" "end" "unmark"))
                nil [20941 21351])
            ("gnus-uu-unmark-region" function
               (:user-visible-flag t
                :arguments ("beg" "end"))
                nil [21353 21516])
            ("gnus-uu-mark-buffer" function (:user-visible-flag t) nil [21518 21668])
            ("gnus-uu-unmark-buffer" function (:user-visible-flag t) nil [21670 21827])
            ("gnus-uu-mark-thread" function (:user-visible-flag t) nil [21829 22203])
            ("gnus-uu-unmark-thread" function (:user-visible-flag t) nil [22205 22535])
            ("gnus-uu-invert-processable" function (:user-visible-flag t) nil [22537 22932])
            ("gnus-uu-mark-over" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [22934 23419])
            ("gnus-uu-mark-sparse" function (:user-visible-flag t) nil [23421 24300])
            ("gnus-uu-mark-all" function (:user-visible-flag t) nil [24302 24874])
            ("gnus-uu-decode-postscript" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [24956 25135])
            ("gnus-uu-decode-postscript-view" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [25137 25347])
            ("gnus-uu-decode-postscript-and-save" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [25349 25710])
            ("gnus-uu-decode-postscript-and-save-view" function
               (:user-visible-flag t
                :arguments ("n" "dir"))
                nil [25712 26083])
            ("gnus-uu-decode-with-method" function (:arguments ("method" "n" "save" "not-insert" "scan" "cdir")) nil [26110 26954])
            ("gnus-uu-scan-directory" function (:arguments ("dir" "rec")) nil [26956 27418])
            ("gnus-uu-save-files" function (:arguments ("files" "dir")) nil [27420 28143])
            ("gnus-uu-save-article" function (:arguments ("buffer" "in-state")) nil [28294 33821])
            ("gnus-uu-binhex-body-line" variable (:default-value "^[^:]...............................................................$") nil [33865 33972])
            ("gnus-uu-binhex-begin-line" variable (:default-value "^:...............................................................$") nil [33973 34078])
            ("gnus-uu-binhex-end-line" variable (:default-value ":$") nil [34079 34118])
            ("gnus-uu-binhex-article" function (:arguments ("buffer" "in-state")) nil [34120 35238])
            ("gnus-uu-yenc-article" function (:arguments ("buffer" "in-state")) nil [35249 36165])
            ("gnus-uu-decode-postscript-article" function (:arguments ("process-buffer" "in-state")) nil [36182 36994])
            ("gnus-uu-get-actions" function (:arguments ("files")) nil [37015 37474])
            ("gnus-uu-get-action" function (:arguments ("file-name")) nil [37476 38009])
            ("gnus-uu-reginize-string" function (:arguments ("string")) nil [38071 39127])
            ("gnus-uu-get-list-of-articles" function (:arguments ("n")) nil [39129 39914])
            ("gnus-uu-string<" function (:arguments ("l1" "l2")) nil [39916 39977])
            ("gnus-uu-find-articles-matching" function (:arguments ("subject" "only-unread" "do-not-translate")) nil [39979 41216])
            ("gnus-uu-expand-numbers" function (:arguments ("string-list" "translate")) nil [41218 42515])
            ("gnus-uu-has-been-grabbed" variable nil nil [43616 43653])
            ("gnus-uu-unmark-list-of-grabbed" function (:arguments ("dont-unmark-last-article")) nil [43655 44226])
            ("gnus-uu-grab-articles" function (:arguments ("articles" "process-function" "sloppy" "limit" "no-errors")) nil [44457 49015])
            ("gnus-uu-grab-view" function (:arguments ("file")) nil [49017 49294])
            ("gnus-uu-grab-move" function (:arguments ("file")) nil [49296 49601])
            ("gnus-uu-part-number" function (:arguments ("article")) nil [49603 50136])
            ("gnus-uu-uudecode-sentinel" function (:arguments ("process" "event")) nil [50138 50228])
            ("gnus-uu-uustrip-article" function (:arguments ("process-buffer" "in-state")) nil [50230 53667])
            ("gnus-uu-unshar-warning" variable (:default-value "*** WARNING ***

Shell archives are an archaic method of bundling files for distribution
across computer networks.  During the unpacking process, arbitrary commands
are executed on your system, and all kinds of nasty things can happen.
Please examine the archive very carefully before you instruct Emacs to
unpack it.  You can browse the archive buffer using \\[scroll-other-window].

If you are unsure what to do, please answer \"no\".") nil [53669 54316])
            ("gnus-uu-unshar-article" function (:arguments ("process-buffer" "in-state")) nil [54401 55515])
            ("gnus-uu-choose-action" function (:arguments ("file-name" "file-action-list" "no-ignore")) nil [55730 56463])
            ("gnus-uu-treat-archive" function (:arguments ("file-path")) nil [56465 57732])
            ("gnus-uu-dir-files" function (:arguments ("dir")) nil [57734 58023])
            ("gnus-uu-unpack-files" function (:arguments ("files" "ignore")) nil [58025 58945])
            ("gnus-uu-ls-r" function (:arguments ("dir")) nil [58947 59246])
            ("gnus-uu-directory-files" function (:arguments ("dir" "full")) nil [59266 59587])
            ("gnus-uu-check-correct-stripped-uucode" function (:arguments ("start" "end")) nil [59589 60356])
            ("gnus-uu-tmp-alist" variable nil nil [60358 60388])
            ("gnus-uu-initialize" function (:arguments ("scan")) nil [60390 61317])
            ("gnus-uu-clean-up" function nil nil [61381 61672])
            ("gnus-uu-command" function (:arguments ("action" "file")) nil [61847 62039])
            ("gnus-uu-delete-work-dir" function (:arguments ("dir")) nil [62041 62892])
            ("add-hook" code nil nil [62911 62971])
            ("add-hook" code nil nil [62972 63039])
            ("gnus-uu-post-encode-method" variable (:default-value (quote gnus-uu-post-encode-uuencode)) nil [63323 63948])
            ("gnus-uu-post-include-before-composing" variable nil nil [63950 64306])
            ("gnus-uu-post-length" variable (:default-value 990) nil [64308 64510])
            ("gnus-uu-post-threaded" variable nil nil [64512 64905])
            ("gnus-uu-post-separate-description" variable (:default-value t) nil [64907 65287])
            ("gnus-uu-post-binary-separator" variable (:default-value "--binary follows this line--") nil [65289 65358])
            ("gnus-uu-post-message-id" variable nil nil [65359 65395])
            ("gnus-uu-post-inserted-file-name" variable nil nil [65396 65440])
            ("gnus-uu-winconf-post-news" variable nil nil [65441 65479])
            ("gnus-uu-post-news" function (:user-visible-flag t) nil [65481 66204])
            ("gnus-uu-post-insert-binary-in-article" function (:user-visible-flag t) nil [66206 66444])
            ("gnus-uu-post-encode-uuencode" function (:arguments ("path" "file-name")) nil [66514 66749])
            ("gnus-uu-post-encode-mime-uuencode" function (:arguments ("path" "file-name")) nil [66799 66965])
            ("gnus-uu-post-encode-mime" function (:arguments ("path" "file-name")) nil [67012 67249])
            ("gnus-uu-post-make-mime" function (:arguments ("file-name" "encoding")) nil [67273 67885])
            ("gnus-uu-post-encode-file" function (:arguments ("command" "path" "file-name")) nil [67969 68148])
            ("gnus-uu-post-news-inews" function (:user-visible-flag t) nil [68150 68681])
            ("gnus-uu-post-insert-binary" function nil nil [68811 69798])
            ("gnus-uu-post-encoded" function (:arguments ("file-name" "threaded")) nil [69850 73446])
            ("gnus-uu" package nil nil [73448 73466]))          
      :file "gnus-uu.el"
      :pointmax 73493
      :fsize 73492
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 963 . 964) (symbol 932 . 949) (open-paren 931 . 932)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [1157 1172])
            ("mh-e" include nil nil [1173 1188])
            ("mh-comp" include nil nil [1189 1207])
            ("gnus-msg" include nil nil [1208 1227])
            ("gnus-sum" include nil nil [1228 1247])
            ("mh-lib-progs" variable nil nil [1249 1270])
            ("gnus-rcvstore-options" variable nil nil [1272 1477])
            ("gnus-summary-save-article-folder" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [1479 1937])
            ("gnus-summary-save-in-folder" function (:arguments ("folder")) nil [1939 3209])
            ("gnus-Folder-save-name" function (:arguments ("newsgroup" "headers" "last-folder")) nil [3211 3618])
            ("gnus-folder-save-name" function (:arguments ("newsgroup" "headers" "last-folder")) nil [3620 3999])
            ("gnus-mh" package nil nil [4001 4019]))          
      :file "gnus-mh.el"
      :pointmax 4046
      :fsize 4045
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [866 879])
            ("gnus" include nil nil [882 897])
            ("gnus-range" include nil nil [898 919])
            ("gnus-art" include nil nil [920 939])
            ("message" include nil nil [940 958])
            ("gnus-cite" customgroup (:user-visible-flag t) nil [1013 1151])
            ("gnus-cited-opened-text-button-line-format" variable (:default-value "%(%{[-]%}%)
") nil [1153 1299])
            ("gnus-cited-closed-text-button-line-format" variable (:default-value "%(%{[+]%}%)
") nil [1301 1447])
            ("gnus-cited-lines-visible" variable nil nil [1449 1800])
            ("gnus-cite-parse-max-size" variable (:default-value 25000) nil [1802 2025])
            ("gnus-cite-max-prefix" variable (:default-value 20) nil [2027 2150])
            ("gnus-supercite-regexp" variable (:default-value (concat "^\\(" message-cite-prefix-regexp "\\)? *" ">>>>> +\"\\([^\"
]+\\)\" +==")) nil [2152 2430])
            ("gnus-supercite-secondary-regexp" variable (:default-value "^.*\"\\([^\"
]+\\)\" +==") nil [2432 2659])
            ("gnus-cite-minimum-match-count" variable (:default-value 2) nil [2661 2817])
            ("gnus-cite-attribution-prefix" variable (:default-value "In article\\|in <\\|On \\(Mon\\|Tue\\|Wed\\|Thu\\|Fri\\|Sat\\|Sun\\),\\|----- ?Original Message ?-----") nil [3356 3597])
            ("gnus-cite-attribution-suffix" variable (:default-value "\\(\\(wrote\\|writes\\|said\\|says\\|>\\)\\(:\\|\\.\\.\\.\\)\\|----- ?Original Message ?-----\\)[ 	]*$") nil [3599 3898])
            ("gnus-cite-unsightly-citation-regexp" variable (:default-value "^-----Original Message-----
From: \\(.+
\\)+
") nil [3900 4116])
            ("gnus-cite-ignore-quoted-from" variable (:default-value t) nil [4118 4386])
            ("gnus-cite-attribution" variable
               (:default-value (quote ((t (:italic t))))
                :type "face")
                nil [4388 4495])
            ("put" code nil nil [4528 4596])
            ("put" code nil nil [4597 4652])
            ("gnus-cite-attribution-face" variable (:default-value (quote gnus-cite-attribution)) nil [4654 4880])
            ("gnus-cite-1" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "light blue")) (((class color) (background light)) (:foreground "MidnightBlue")) (t (:italic t))))
                :type "face")
                nil [4882 5125])
            ("put" code nil nil [5158 5206])
            ("put" code nil nil [5207 5252])
            ("gnus-cite-2" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "light cyan")) (((class color) (background light)) (:foreground "firebrick")) (t (:italic t))))
                :type "face")
                nil [5254 5494])
            ("put" code nil nil [5527 5575])
            ("put" code nil nil [5576 5621])
            ("gnus-cite-3" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "light yellow")) (((class color) (background light)) (:foreground "dark green")) (t (:italic t))))
                :type "face")
                nil [5623 5866])
            ("put" code nil nil [5899 5947])
            ("put" code nil nil [5948 5993])
            ("gnus-cite-4" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "light pink")) (((class color) (background light)) (:foreground "OrangeRed")) (t (:italic t))))
                :type "face")
                nil [5995 6235])
            ("put" code nil nil [6268 6316])
            ("put" code nil nil [6317 6362])
            ("gnus-cite-5" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "pale green")) (((class color) (background light)) (:foreground "dark khaki")) (t (:italic t))))
                :type "face")
                nil [6364 6605])
            ("put" code nil nil [6638 6686])
            ("put" code nil nil [6687 6732])
            ("gnus-cite-6" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "beige")) (((class color) (background light)) (:foreground "dark violet")) (t (:italic t))))
                :type "face")
                nil [6734 6971])
            ("put" code nil nil [7004 7052])
            ("put" code nil nil [7053 7098])
            ("gnus-cite-7" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "orange")) (((class color) (background light)) (:foreground "SteelBlue4")) (t (:italic t))))
                :type "face")
                nil [7100 7337])
            ("put" code nil nil [7370 7418])
            ("put" code nil nil [7419 7464])
            ("gnus-cite-8" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "magenta")) (((class color) (background light)) (:foreground "magenta")) (t (:italic t))))
                :type "face")
                nil [7466 7701])
            ("put" code nil nil [7734 7782])
            ("put" code nil nil [7783 7828])
            ("gnus-cite-9" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "violet")) (((class color) (background light)) (:foreground "violet")) (t (:italic t))))
                :type "face")
                nil [7830 8063])
            ("put" code nil nil [8096 8144])
            ("put" code nil nil [8145 8190])
            ("gnus-cite-10" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "plum1")) (((class color) (background light)) (:foreground "medium purple")) (t (:italic t))))
                :type "face")
                nil [8192 8425])
            ("put" code nil nil [8458 8508])
            ("put" code nil nil [8509 8555])
            ("gnus-cite-11" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "turquoise")) (((class color) (background light)) (:foreground "turquoise")) (t (:italic t))))
                :type "face")
                nil [8557 8790])
            ("put" code nil nil [8823 8873])
            ("put" code nil nil [8874 8920])
            ("gnus-cite-face-list" variable (:default-value (quote (gnus-cite-1 gnus-cite-2 gnus-cite-3 gnus-cite-4 gnus-cite-5 gnus-cite-6 gnus-cite-7 gnus-cite-8 gnus-cite-9 gnus-cite-10 gnus-cite-11))) nil [8922 9900])
            ("gnus-cite-hide-percentage" variable (:default-value 50) nil [9902 10046])
            ("gnus-cite-hide-absolute" variable (:default-value 10) nil [10048 10196])
            ("gnus-cite-blank-line-after-header" variable (:default-value t) nil [10198 10359])
            ("gnus-article-boring-faces" variable (:default-value (cons (quote gnus-signature) gnus-cite-face-list)) nil [10445 10812])
            ("gnus-cite-article" variable nil nil [10839 10869])
            ("gnus-cite-overlay-list" variable nil nil [10870 10905])
            ("gnus-cite-prefix-alist" variable nil nil [10907 10942])
            ("gnus-cite-attribution-alist" variable nil nil [11023 11063])
            ("gnus-cite-loose-prefix-alist" variable nil nil [11189 11230])
            ("gnus-cite-loose-attribution-alist" variable nil nil [11345 11391])
            ("gnus-cited-opened-text-button-line-format-alist" variable (:default-value (\` ((98 (marker-position beg) 100) (101 (marker-position end) 100) (110 (count-lines beg end) 100) (108 (- end beg) 100)))) nil [11735 11918])
            ("gnus-cited-opened-text-button-line-format-spec" variable nil nil [11919 11978])
            ("gnus-cited-closed-text-button-line-format-alist" variable (:default-value gnus-cited-opened-text-button-line-format-alist) nil [11979 12085])
            ("gnus-cited-closed-text-button-line-format-spec" variable nil nil [12086 12145])
            ("gnus-article-highlight-citation" function
               (:user-visible-flag t
                :arguments ("force" "same-buffer"))
                nil [12163 14612])
            ("gnus-dissect-cited-text" function nil nil [14614 16443])
            ("gnus-article-fill-cited-long-lines" function nil nil [16445 16532])
            ("gnus-article-fill-cited-article" function
               (:user-visible-flag t
                :arguments ("width" "long-lines"))
                nil [16534 18290])
            ("gnus-article-foldable-buffer" function (:arguments ("prefix")) nil [18292 19010])
            ("gnus-article-hide-citation" function
               (:user-visible-flag t
                :arguments ("arg" "force"))
                nil [19012 22186])
            ("gnus-article-toggle-cited-text" function (:arguments ("args" "arg")) nil [22188 23638])
            ("gnus-article-hide-citation-maybe" function
               (:user-visible-flag t
                :arguments ("arg" "force"))
                nil [23640 24976])
            ("gnus-article-hide-citation-in-followups" function (:user-visible-flag t) nil [24978 25308])
            ("gnus-cite-parse-maybe" function (:arguments ("force" "no-overlay")) nil [25335 25920])
            ("gnus-cite-delete-overlays" function nil nil [25922 26277])
            ("gnus-cite-parse-wrapper" function nil nil [26279 26574])
            ("gnus-cite-parse" function nil nil [26576 30224])
            ("gnus-cite-parse-attributions" function nil nil [30226 31411])
            ("gnus-cite-connect-attributions" function nil nil [31413 33228])
            ("gnus-cite-match-attributions" function (:arguments ("sort" "after" "fun")) nil [33230 35900])
            ("gnus-cite-find-loose" function (:arguments ("prefix")) nil [35902 36253])
            ("gnus-cite-add-face" function (:arguments ("number" "prefix" "face")) nil [36255 36848])
            ("gnus-cite-toggle" function (:arguments ("prefix")) nil [36850 37854])
            ("gnus-cite-find-prefix" function (:arguments ("line")) nil [37856 38138])
            ("gnus-cite-localize" function nil nil [38140 38467])
            ("gnus-message-max-citation-depth" variable (:default-value (length gnus-cite-face-list)) nil [38596 38708])
            ("gnus-message-cite-prefix-regexp" variable (:default-value (concat "^\\(?:" message-cite-prefix-regexp "\\)")) nil [38710 38803])
            ("gnus-message-search-citation-line" function (:arguments ("limit")) nil [38805 39551])
            ("gnus-message-citation-keywords" variable (:default-value (\` ((gnus-message-search-citation-line (\,@ (let ((list nil) (count 1)) (dolist (face gnus-cite-face-list (nreverse list)) (push (list count (list (quote quote) face) (quote prepend) t) list) (setq count (1+ count))))))))) nil [39553 39962])
            ("font-lock-defaults-computed" variable nil nil [39964 40000])
            ("font-lock-keywords" variable nil nil [40001 40028])
            ("font-lock-set-defaults" variable nil nil [40029 40060])
            ("font-lock-set-defaults" function (:prototype-flag t) nil [40062 40108])
            ("define-minor-mode" code nil nil [40110 41361])
            ("turn-on-gnus-message-citation-mode" function nil nil [41363 41483])
            ("turn-off-gnus-message-citation-mode" function nil nil [41484 41607])
            ("gnus-cite" package nil nil [41609 41629]))          
      :file "gnus-cite.el"
      :pointmax 41704
      :fsize 41703
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 879 . 880) (symbol 848 . 865) (open-paren 847 . 848)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1127 1140])
            ("gnus" include nil nil [1143 1158])
            ("gnus-art" include nil nil [1159 1178])
            ("gnus-duplicate" customgroup (:user-visible-flag t) nil [1180 1263])
            ("gnus-save-duplicate-list" variable nil nil [1265 1497])
            ("gnus-duplicate-list-length" variable (:default-value 10000) nil [1499 1658])
            ("gnus-duplicate-file" variable (:default-value (nnheader-concat gnus-directory "suppression")) nil [1660 1843])
            ("gnus-dup-list" variable nil nil [1869 1895])
            ("gnus-dup-hashtb" variable nil nil [1896 1924])
            ("gnus-dup-list-dirty" variable nil nil [1926 1958])
            ("gnus-add-shutdown" code nil nil [1995 2036])
            ("gnus-dup-close" function nil nil [2038 2232])
            ("gnus-dup-open" function nil nil [2234 2606])
            ("gnus-dup-read" function nil nil [2608 2782])
            ("gnus-dup-save" function nil nil [2784 3046])
            ("gnus-dup-enter-articles" function nil nil [3081 4066])
            ("gnus-dup-suppress-articles" function nil nil [4068 4889])
            ("gnus-dup-unsuppress-article" function (:arguments ("article")) nil [4891 5220])
            ("gnus-dup" package nil nil [5222 5241]))          
      :file "gnus-dup.el"
      :pointmax 5269
      :fsize 5268
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 1140 . 1141) (symbol 1109 . 1126) (open-paren 1108 . 1109)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [953 966])
            ("gnus" include nil nil [969 984])
            ("gnus-group" include nil nil [985 1006])
            ("gnus-start" include nil nil [1007 1028])
            ("gnus-util" include nil nil [1029 1049])
            ("gnus-topic" customgroup (:user-visible-flag t) nil [1051 1115])
            ("gnus-topic-mode" variable nil nil [1117 1184])
            ("gnus-topic-mode-hook" variable nil nil [1186 1293])
            ("gnus-topic-line-format" variable (:default-value "%i[ %(%{%n%}%) -- %A ]%v
") nil [1295 1935])
            ("gnus-topic-indent-level" variable (:default-value 2) nil [1937 2059])
            ("gnus-topic-display-empty-topics" variable (:default-value t) nil [2061 2229])
            ("gnus-topic-active-topology" variable nil nil [2255 2294])
            ("gnus-topic-active-alist" variable nil nil [2295 2331])
            ("gnus-topic-unreads" variable nil nil [2332 2363])
            ("gnus-topology-checked-p" variable nil nil [2365 2460])
            ("gnus-topic-killed-topics" variable nil nil [2462 2499])
            ("gnus-topic-inhibit-change-level" variable nil nil [2500 2544])
            ("gnus-topic-line-format-alist" variable
               (:constant-flag t
                :default-value (\` ((110 name 115) (118 visible 115) (105 indentation 115) (103 number-of-groups 100) (97 (gnus-topic-articles-in-topic entries) 100) (65 total-number-of-articles 100) (108 level 100))))
                nil [2546 2782])
            ("gnus-topic-line-format-spec" variable nil nil [2784 2824])
            ("gnus-group-topic-name" function nil nil [2849 3029])
            ("gnus-group-topic-level" function nil nil [3031 3167])
            ("gnus-group-topic-unread" function nil nil [3169 3323])
            ("gnus-topic-unread" function (:arguments ("topic")) nil [3325 3463])
            ("gnus-group-topic-p" function nil nil [3465 3571])
            ("gnus-topic-visible-p" function nil nil [3573 3713])
            ("gnus-topic-articles-in-topic" function (:arguments ("entries")) nil [3715 3897])
            ("gnus-group-topic" function (:arguments ("group")) nil [3899 4154])
            ("gnus-topic-goto-topic" function (:arguments ("topic")) nil [4156 4311])
            ("gnus-topic-jump-to-topic" function
               (:user-visible-flag t
                :arguments ("topic"))
                nil [4313 4692])
            ("gnus-current-topic" function nil nil [4694 5073])
            ("gnus-current-topics" function (:arguments ("topic")) nil [5075 5396])
            ("gnus-group-active-topic-p" function nil nil [5398 5548])
            ("gnus-topic-find-groups" function (:arguments ("topic" "level" "all" "lowest" "recursive")) nil [5550 7514])
            ("gnus-topic-goto-previous-topic" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [7516 7650])
            ("gnus-topic-goto-next-topic" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [7652 8072])
            ("gnus-topic-previous-topic" function (:arguments ("topic")) nil [8074 8397])
            ("gnus-topic-parent-topic" function (:arguments ("topic" "topology")) nil [8399 8830])
            ("gnus-topic-next-topic" function (:arguments ("topic" "previous")) nil [8832 9193])
            ("gnus-topic-forward-topic" function (:arguments ("num")) nil [9195 9618])
            ("gnus-topic-find-topology" function (:arguments ("topic" "topology" "level" "remove")) nil [9620 10185])
            ("gnus-tmp-topics" variable nil nil [10187 10215])
            ("gnus-topic-list" function (:arguments ("topology")) nil [10216 10492])
            ("gnus-topic-parameters" function (:arguments ("topic")) nil [10520 10683])
            ("gnus-topic-set-parameters" function (:arguments ("topic" "parameters")) nil [10685 11259])
            ("gnus-group-topic-parameters" function (:arguments ("group")) nil [11261 12012])
            ("gnus-topic-hierarchical-parameters" function (:arguments ("topic" "group-params-list")) nil [12014 13207])
            ("gnus-topic-enter-dribble" function nil nil [13240 13363])
            ("gnus-group-prepare-topics" function (:arguments ("level" "predicate" "lowest" "regexp" "list-topic" "topic-level")) nil [13395 15616])
            ("gnus-topic-prepare-topic" function (:arguments ("topicl" "level" "list-level" "predicate" "silent" "lowest" "regexp")) nil [15618 18946])
            ("gnus-topic-remove-topic" function (:arguments ("insert" "total-remove" "_hide" "in-level")) nil [18948 19919])
            ("gnus-topic-insert-topic" function (:arguments ("topic" "level")) nil [19921 20104])
            ("gnus-topic-fold" function (:arguments ("insert" "topic")) nil [20106 20663])
            ("gnus-tmp-header" variable nil nil [20665 20689])
            ("gnus-topic-insert-topic-line" function (:arguments ("name" "visiblep" "shownp" "level" "entries" "unread")) nil [20691 21429])
            ("gnus-topic-update-unreads" function (:arguments ("topic" "unreads")) nil [21431 21621])
            ("gnus-topic-update-topics-containing-group" function (:arguments ("group")) nil [21623 22233])
            ("gnus-topic-update-topic" function nil nil [22235 22699])
            ("gnus-topic-goto-missing-group" function (:arguments ("group")) nil [22701 23431])
            ("gnus-topic-display-missing-topic" function (:arguments ("topic")) nil [23433 24412])
            ("gnus-topic-goto-missing-topic" function (:arguments ("topic")) nil [24414 25019])
            ("gnus-topic-update-topic-line" function (:arguments ("topic-name" "reads")) nil [25021 26261])
            ("gnus-topic-group-indentation" function nil nil [26263 26491])
            ("gnus-add-shutdown" code nil nil [26513 26556])
            ("gnus-topic-close" function nil nil [26558 26713])
            ("gnus-topic-check-topology" function nil nil [26715 28306])
            ("gnus-topic-init-alist" function nil nil [28308 28711])
            ("gnus-topic-clean-alist" function nil nil [28730 29355])
            ("gnus-topic-change-level" function (:arguments ("group" "level" "oldlevel" "previous")) nil [29357 31342])
            ("gnus-topic-goto-next-group" function (:arguments ("group" "props")) nil [31344 32630])
            ("gnus-topic-grok-active" function (:arguments ("force")) nil [32660 33540])
            ("gnus-topic-grok-active-1" function (:arguments ("topology" "groups")) nil [33542 34655])
            ("gnus-topic-mode-map" variable nil nil [34695 34727])
            ("gnus-group-topic-map" variable nil nil [34728 34761])
            ("unless" code nil nil [34763 36602])
            ("gnus-topic-make-menu-bar" function nil nil [36604 37626])
            ("define-minor-mode" code nil nil [37628 39564])
            ("gnus-topic-select-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [39566 40331])
            ("gnus-mouse-pick-topic" function
               (:user-visible-flag t
                :arguments ("e"))
                nil [40333 40493])
            ("gnus-topic-expire-articles" function
               (:user-visible-flag t
                :arguments ("topic"))
                nil [40495 41033])
            ("gnus-topic-catchup-articles" function
               (:user-visible-flag t
                :arguments ("topic"))
                nil [41035 41644])
            ("gnus-topic-read-group" function
               (:user-visible-flag t
                :arguments ("all" "no-article" "group"))
                nil [41646 42491])
            ("gnus-topic-create-topic" function
               (:user-visible-flag t
                :arguments ("topic" "parent" "previous" "full-topic"))
                nil [42493 43505])
            ("gnus-topic-history" variable nil nil [43758 43789])
            ("gnus-topic-move-group" function
               (:user-visible-flag t
                :arguments ("n" "topic" "copyp"))
                nil [43791 44862])
            ("gnus-topic-remove-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [44864 45490])
            ("gnus-topic-copy-group" function
               (:user-visible-flag t
                :arguments ("n" "topic"))
                nil [45492 45728])
            ("gnus-topic-kill-group" function
               (:user-visible-flag t
                :arguments ("n" "discard"))
                nil [45730 46394])
            ("gnus-topic-yank-group" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [46396 47889])
            ("gnus-topic-hide-topic" function
               (:user-visible-flag t
                :arguments ("permanent"))
                nil [47891 48281])
            ("gnus-topic-show-topic" function
               (:user-visible-flag t
                :arguments ("permanent"))
                nil [48283 48799])
            ("gnus-topic-mark-topic" function
               (:user-visible-flag t
                :arguments ("topic" "unmark" "non-recursive"))
                nil [48801 49415])
            ("gnus-topic-unmark-topic" function
               (:user-visible-flag t
                :arguments ("topic" "_dummy" "non-recursive"))
                nil [49417 49831])
            ("gnus-topic-get-new-news-this-topic" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [49833 50293])
            ("gnus-topic-move-matching" function
               (:user-visible-flag t
                :arguments ("regexp" "topic" "copyp"))
                nil [50295 50742])
            ("gnus-topic-copy-matching" function
               (:user-visible-flag t
                :arguments ("regexp" "topic" "_copyp"))
                nil [50744 51151])
            ("gnus-topic-delete" function
               (:user-visible-flag t
                :arguments ("topic"))
                nil [51153 51717])
            ("gnus-topic-rename" function
               (:user-visible-flag t
                :arguments ("old-name" "new-name"))
                nil [51719 52514])
            ("gnus-topic-indent" function
               (:user-visible-flag t
                :arguments ("unindent"))
                nil [52516 53227])
            ("gnus-topic-unindent" function (:user-visible-flag t) nil [53229 53853])
            ("gnus-topic-list-active" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [53855 54301])
            ("gnus-topic-toggle-display-empty-topics" function (:user-visible-flag t) nil [54303 54624])
            ("gnus-topic-edit-parameters" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [54655 55228])
            ("gnus-group-sort-topic" function (:arguments ("func" "reverse")) nil [55230 55635])
            ("gnus-topic-sort-topic" function (:arguments ("topic" "func" "reverse")) nil [55637 56179])
            ("gnus-topic-sort-groups" function
               (:user-visible-flag t
                :arguments ("func" "reverse"))
                nil [56181 56559])
            ("gnus-topic-sort-groups-by-alphabet" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [56561 56799])
            ("gnus-topic-sort-groups-by-unread" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [56801 57035])
            ("gnus-topic-sort-groups-by-level" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [57037 57255])
            ("gnus-topic-sort-groups-by-score" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [57257 57475])
            ("gnus-topic-sort-groups-by-rank" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [57477 57692])
            ("gnus-topic-sort-groups-by-method" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [57694 57930])
            ("gnus-topic-sort-groups-by-server" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [57932 58167])
            ("gnus-topic-sort-topics-1" function (:arguments ("top" "reverse")) nil [58169 58505])
            ("gnus-topic-sort-topics" function
               (:user-visible-flag t
                :arguments ("topic" "reverse"))
                nil [58507 59118])
            ("gnus-topic-move" function
               (:user-visible-flag t
                :arguments ("current" "to"))
                nil [59120 59947])
            ("gnus-subscribe-topics" function (:arguments ("newsgroup")) nil [59949 60689])
            ("gnus-topic" package nil nil [60691 60712]))          
      :file "gnus-topic.el"
      :pointmax 60742
      :fsize 60741
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 966 . 967) (symbol 935 . 952) (open-paren 934 . 935)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [902 915])
            ("gnus" include nil nil [918 933])
            ("gnus-sum" include nil nil [934 953])
            ("nntp" include nil nil [954 969])
            ("gnus-asynchronous" customgroup (:user-visible-flag t) nil [971 1059])
            ("gnus-use-article-prefetch" variable (:default-value 30) nil [1061 1382])
            ("gnus-asynchronous" variable nil nil [1384 1561])
            ("gnus-prefetched-article-deletion-strategy" variable (:default-value (quote (read exit))) nil [1563 1974])
            ("gnus-use-header-prefetch" variable nil nil [1976 2117])
            ("gnus-async-prefetch-article-p" variable (:default-value (quote gnus-async-unread-p)) nil [2119 2426])
            ("gnus-async-post-fetch-function" variable nil nil [2428 2701])
            ("gnus-async-prefetch-article-buffer" variable (:default-value " *Async Prefetch Article*") nil [2728 2799])
            ("gnus-async-article-alist" variable nil nil [2800 2837])
            ("gnus-async-article-semaphore" variable (:default-value (quote (nil))) nil [2838 2882])
            ("gnus-async-fetch-list" variable nil nil [2883 2917])
            ("gnus-async-hashtb" variable nil nil [2918 2948])
            ("gnus-async-current-prefetch-group" variable nil nil [2949 2995])
            ("gnus-async-current-prefetch-article" variable nil nil [2996 3044])
            ("gnus-async-timer" variable nil nil [3045 3074])
            ("gnus-async-prefetch-headers-buffer" variable (:default-value " *Async Prefetch Headers*") nil [3076 3147])
            ("gnus-async-header-prefetched" variable nil nil [3148 3189])
            ("gnus-group-asynchronous-p" function (:arguments ("group")) nil [3215 3392])
            ("gnus-async-get-semaphore" function (:arguments ("semaphore")) nil [3426 3596])
            ("gnus-async-release-semaphore" function (:arguments ("semaphore")) nil [3598 3709])
            ("gnus-async-with-semaphore" function (:arguments ("forms")) nil [3711 3931])
            ("put" code nil nil [3933 3989])
            ("put" code nil nil [3990 4048])
            ("gnus-add-shutdown" code nil nil [4080 4123])
            ("gnus-async-close" function nil nil [4124 4358])
            ("gnus-async-set-buffer" function nil nil [4360 4543])
            ("gnus-async-halt-prefetch" function nil nil [4545 4637])
            ("gnus-async-prefetch-next" function (:arguments ("group" "article" "summary")) nil [4639 5211])
            ("gnus-async-prefetch-article" function (:arguments ("group" "article" "summary" "next")) nil [5213 7336])
            ("gnus-make-async-article-function" function (:arguments ("group" "article" "mark" "summary" "next")) nil [7338 7538])
            ("gnus-async-article-callback" function (:arguments ("arg" "group" "article" "mark" "summary" "next")) nil [7540 8760])
            ("gnus-async-unread-p" function (:arguments ("data")) nil [8762 8881])
            ("gnus-async-request-fetched-article" function (:arguments ("group" "article" "buffer")) nil [8883 9570])
            ("gnus-async-wait-for-article" function (:arguments ("article")) nil [9572 10696])
            ("gnus-async-delete-prefetched-entry" function (:arguments ("entry")) nil [10698 11074])
            ("gnus-async-prefetch-remove-group" function (:arguments ("group")) nil [11076 11484])
            ("gnus-async-prefetched-article-entry" function (:arguments ("group" "article")) nil [11486 12091])
            ("gnus-async-prefetch-headers" function (:arguments ("group")) nil [12122 12833])
            ("gnus-async-retrieve-fetched-headers" function (:arguments ("articles" "group")) nil [12835 13432])
            ("gnus-async" package nil nil [13434 13455]))          
      :file "gnus-async.el"
      :pointmax 13485
      :fsize 13484
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 915 . 916) (symbol 884 . 901) (open-paren 883 . 884)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [925 938])
            ("gnus" include nil nil [941 956])
            ("gnus-sum" include nil nil [957 976])
            ("gnus-win" include nil nil [977 996])
            ("gnus-pick-display-summary" variable nil nil [1026 1147])
            ("gnus-pick-mode-hook" variable nil nil [1149 1269])
            ("gnus-mark-unpicked-articles-as-read" variable nil nil [1271 1419])
            ("gnus-pick-elegant-flow" variable (:default-value t) nil [1421 1611])
            ("gnus-summary-pick-line-format" variable (:default-value "%-5P %U%R%z%I%(%[%4L: %-23,23n%]%) %s
") nil [1613 1880])
            ("gnus-pick-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map " " gnus-pick-next-page "u" gnus-pick-unmark-article-or-thread "." gnus-pick-article-or-thread [down-mouse-2] gnus-pick-mouse-pick-region "" gnus-pick-start-reading) map)) nil [1907 2203])
            ("gnus-pick-make-menu-bar" function nil nil [2205 2888])
            ("define-minor-mode" code nil nil [2890 3988])
            ("gnus-pick-setup-message" function nil nil [3990 4322])
            ("gnus-pick-line-number" variable (:default-value 1) nil [4324 4356])
            ("gnus-pick-line-number" function nil nil [4357 4456])
            ("gnus-pick-start-reading" function
               (:user-visible-flag t
                :arguments ("catch-up"))
                nil [4458 5211])
            ("gnus-pick-goto-article" function (:arguments ("arg")) nil [5213 5593])
            ("gnus-pick-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [5595 5830])
            ("gnus-pick-article-or-thread" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [5832 6281])
            ("gnus-pick-unmark-article-or-thread" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [6283 6708])
            ("gnus-pick-mouse-pick" function (:arguments ("e")) nil [6710 6844])
            ("gnus-pick-mouse-pick-region" function
               (:user-visible-flag t
                :arguments ("start-event"))
                nil [6846 10500])
            ("scroll-in-place" variable nil nil [10502 10526])
            ("gnus-pick-next-page" function (:user-visible-flag t) nil [10528 10771])
            ("gnus-binary-mode-hook" variable nil nil [10803 10882])
            ("gnus-binary-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map "g" gnus-binary-show-article) map)) nil [10884 11020])
            ("gnus-binary-make-menu-bar" function nil nil [11022 11229])
            ("define-minor-mode" code nil nil [11231 11906])
            ("gnus-binary-display-article" function (:arguments ("article" "_all-header")) nil [11908 12165])
            ("gnus-binary-show-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [12167 12373])
            ("gnus-tree-line-format" variable (:default-value "%(%[%3,3n%]%)") nil [12403 12525])
            ("gnus-tree-minimize-window" variable (:default-value t) nil [12527 12758])
            ("gnus-selected-tree-face" variable (:default-value (quote mode-line)) nil [12760 12917])
            ("gnus-tree-brackets" variable (:default-value (quote ((91 . 93) (40 . 41) (123 . 125) (60 . 62)))) nil [12919 13036])
            ("gnus-tree-parent-child-edges" variable (:default-value (quote (45 92 124))) nil [13038 13142])
            ("gnus-tree-mode-line-format" variable (:default-value "Gnus: %%b %S %Z") nil [13144 13297])
            ("gnus-generate-tree-function" variable (:default-value (quote gnus-generate-vertical-tree)) nil [13299 13684])
            ("gnus-tree-mode-hook" variable nil nil [13686 13798])
            ("gnus-tmp-name" variable nil nil [13825 13847])
            ("gnus-tmp-from" variable nil nil [13848 13870])
            ("gnus-tmp-number" variable nil nil [13871 13895])
            ("gnus-tmp-open-bracket" variable nil nil [13896 13926])
            ("gnus-tmp-close-bracket" variable nil nil [13927 13958])
            ("gnus-tmp-subject" variable nil nil [13959 13984])
            ("gnus-tree-line-format-alist" variable (:default-value (\` ((110 gnus-tmp-name 115) (102 gnus-tmp-from 115) (78 gnus-tmp-number 100) (91 gnus-tmp-open-bracket 99) (93 gnus-tmp-close-bracket 99) (115 gnus-tmp-subject 115)))) nil [13986 14203])
            ("gnus-tree-mode-line-format-alist" variable (:default-value gnus-summary-mode-line-format-alist) nil [14205 14282])
            ("gnus-tree-mode-line-format-spec" variable nil nil [14284 14328])
            ("gnus-tree-line-format-spec" variable nil nil [14329 14368])
            ("gnus-tree-node-length" variable nil nil [14370 14404])
            ("gnus-selected-tree-overlay" variable nil nil [14405 14444])
            ("gnus-tree-displayed-thread" variable nil nil [14446 14485])
            ("gnus-tree-inhibit" variable nil nil [14486 14516])
            ("gnus-tree-mode-map" variable (:default-value (let ((map (make-keymap))) (suppress-keymap map) (gnus-define-keys map "" gnus-tree-select-article [mouse-2] gnus-tree-pick-article "" gnus-tree-read-summary-keys "h" gnus-tree-show-summary "	" gnus-info-find-node) (substitute-key-definition (quote undefined) (quote gnus-tree-read-summary-keys) map) map)) nil [14518 14913])
            ("put" code nil nil [14915 14957])
            ("gnus-tree-make-menu-bar" function nil nil [14959 15158])
            ("define-derived-mode" code nil nil [15160 15652])
            ("gnus-tree-read-summary-keys" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [15654 16153])
            ("gnus-tree-show-summary" function (:user-visible-flag t) nil [16155 16461])
            ("gnus-tree-select-article" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [16463 16782])
            ("gnus-tree-pick-article" function
               (:user-visible-flag t
                :arguments ("e"))
                nil [16784 16964])
            ("gnus-tree-article-number" function nil nil [16966 17044])
            ("gnus-tree-article-region" function (:arguments ("article")) nil [17046 17313])
            ("gnus-tree-recenter" function nil nil [17315 18165])
            ("gnus-get-tree-buffer" function nil nil [18167 18403])
            ("gnus-tree-minimize" function nil nil [18405 19277])
            ("gnus-tree-node-insert" function (:arguments ("header" "sparse" "adopted")) nil [19305 21014])
            ("gnus--let-eval" function (:arguments ("bindings" "evalsym" "body")) nil [21016 21792])
            ("gnus-tree-highlight-node" function (:arguments ("article" "beg" "end")) nil [21794 22938])
            ("gnus-tree-indent" function (:arguments ("level")) nil [22940 23042])
            ("gnus-tmp-limit" variable nil nil [23044 23067])
            ("gnus-tmp-sparse" variable nil nil [23068 23092])
            ("gnus-tmp-indent" variable nil nil [23093 23117])
            ("gnus-generate-tree" function (:arguments ("thread")) nil [23119 23731])
            ("gnus-generate-horizontal-tree" function (:arguments ("thread" "level" "dummyp" "adopted")) nil [23733 25056])
            ("gnus-tree-indent-vertical" function nil nil [25058 25250])
            ("gnus-tree-forward-line" function (:arguments ("n")) nil [25252 25409])
            ("gnus-generate-vertical-tree" function (:arguments ("thread" "level" "dummyp" "adopted")) nil [25411 27113])
            ("gnus-possibly-generate-tree" function (:arguments ("article" "force")) nil [27141 27865])
            ("gnus-tree-open" function nil nil [27867 27917])
            ("gnus-tree-close" function nil nil [27919 27983])
            ("gnus-tree-perhaps-minimize" function nil nil [27985 28169])
            ("gnus-highlight-selected-tree" function (:arguments ("article")) nil [28171 29244])
            ("gnus-tree-highlight-article" function (:arguments ("article" "face")) nil [29246 29716])
            ("gnus-salt" package nil nil [29718 29738]))          
      :file "gnus-salt.el"
      :pointmax 29767
      :fsize 29766
      :lastmodtime '(23525 29553 0 0)
      :unmatched-syntax '((close-paren 938 . 939) (symbol 907 . 924) (open-paren 906 . 907)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("wid-edit" include nil nil [885 904])
            ("gnus" include nil nil [905 920])
            ("gnus-agent" include nil nil [921 942])
            ("gnus-score" include nil nil [943 964])
            ("gnus-topic" include nil nil [965 986])
            ("gnus-art" include nil nil [987 1006])
            ("define-derived-mode" code nil nil [1022 2226])
            ("gnus-group-parameters" variable
               (:constant-flag t
                :default-value (quote ((extra-aliases (choice :tag "Extra Aliases" (list :tag "List" (editable-list :inline t (gnus-email-address :tag "Address"))) (gnus-email-address :tag "Address")) "Store messages posted from or to this address in this group.

You must be using gnus-group-split for this to work.  The VALUE of the
nnmail-split-fancy SPLIT generated for this group will match these
addresses.") (split-regexp (regexp :tag "gnus-group-split Regular Expression") "Like gnus-group-split Address, but expects a regular expression.") (split-exclude (list :tag "gnus-group-split Restricts" (editable-list :inline t (regexp :tag "Restrict"))) "Regular expression that cancels gnus-group-split matches.

Each entry is added to the nnmail-split-fancy SPLIT as a separate
RESTRICT clause.") (split-spec (choice :tag "gnus-group-split Overrider" (sexp :tag "Fancy Split") (const :tag "Catch All" catch-all) (const :tag "Ignore" nil)) "Override all other gnus-group-split fields.

In `Fancy Split', you can enter any nnmail-split-fancy SPLIT.  Note
that the name of this group won't be automatically assumed, you have
to add it to the SPLITs yourself.  This means you can use such splits
to split messages to other groups too.

If you select `Catch All', this group will get postings for any
messages not matched in any other group.  It overrides the variable
gnus-group-split-default-catch-all-group.

Selecting `Ignore' forces no SPLIT to be generated for this group,
disabling all other gnus-group-split fields.") (broken-reply-to (const :tag "Broken Reply To" t) "Ignore `Reply-To' headers in this group.

That can be useful if you're reading a mailing list group where the
listserv has inserted `Reply-To' headers that point back to the
listserv itself.  This is broken behavior.  So there!") (to-group (string :tag "To Group") "All posts will be sent to the specified group.") (gcc-self (choice :tag "GCC" :value t (const :tag "To current group" t) (const none) (string :format "%v" :hide-front-space t)) "Specify default value for GCC header.

If this symbol is present in the group parameter list and set to t,
new composed messages will be `Gcc''d to the current group.  If it is
present and set to `none', no `Gcc:' header will be generated, if it
is present and a string, this string will be inserted literally as a
`gcc' header (this symbol takes precedence over any default `Gcc'
rules as described later).") (expiry-wait (choice :tag "Expire Wait" :value never (const never) (const immediate) (number :hide-front-space t :format "%v")) "When to expire.

Overrides any `nnmail-expiry-wait' and `nnmail-expiry-wait-function'
when expiring expirable messages.  The value can either be a number of
days (not necessarily an integer) or the symbols `never' or
`immediate'.") (expiry-target (choice :tag "Expiry Target" :value delete (const delete) (function :format "%v" nnmail-) string) "Where expired messages end up.

Overrides `nnmail-expiry-target'.") (score-file (file :tag "Score File") "Make the specified file into the current score file.
This means that all score commands you issue will end up in this file.") (adapt-file (file :tag "Adapt File") "Make the specified file into the current adaptive file.
All adaptive score entries will be put into this file.") (admin-address (gnus-email-address :tag "Admin Address") "Administration address for a mailing list.

When unsubscribing to a mailing list you should never send the
unsubscription notice to the mailing list itself.  Instead, you'd
send messages to the administrative address.  This parameter allows
you to put the admin address somewhere convenient.") (display (choice :tag "Display" :value default (const all) (integer) (const default) (sexp :tag "Other")) "Which articles to display on entering the group.

`all'
     Display all articles, both read and unread.

`integer'
     Display the last NUMBER articles in the group.  This is the same as
     entering the group with C-u NUMBER.

`default'
     Display the default visible articles, which normally includes
     unread and ticked articles.

`Other'
     Display the articles that satisfy the S-expression. The S-expression
     should be in an array form.") (comment (string :tag "Comment") "An arbitrary comment on the group.") (visible (const :tag "Permanently visible" t) "Always display this group, even when there are no unread articles in it.") (highlight-words (choice :tag "Highlight words" :value nil (repeat (list (regexp :tag "Highlight regexp") (number :tag "Group for entire word" 0) (number :tag "Group for displayed part" 0) (symbol :tag "Face" gnus-emphasis-highlight-words)))) "highlight regexps.
See `gnus-emphasis-alist'.") (posting-style (choice :tag "Posting style" :value nil (repeat (list (choice :tag "Type" :value nil (const signature) (const signature-file) (const organization) (const address) (const x-face-file) (const name) (const body) (symbol) (string :tag "Header")) (string :format "%v")))) "post style.
See `gnus-posting-styles'."))))
                nil [2254 7967])
            ("gnus-extra-topic-parameters" variable
               (:constant-flag t
                :default-value (quote ((subscribe (regexp :tag "Subscribe") "If `gnus-subscribe-newsgroup-method' or
`gnus-subscribe-options-newsgroup-method' is set to
`gnus-subscribe-topics', new groups that matches this regexp will
automatically be subscribed to this topic") (subscribe-level (integer :tag "Subscribe Level" :value 1) "If this topic parameter is set, when new groups are subscribed
automatically under this topic (via the `subscribe' topic parameter)
assign this level to the group, rather than the default level
set in `gnus-level-default-subscribed'"))))
                nil [7969 8808])
            ("gnus-extra-group-parameters" variable
               (:constant-flag t
                :default-value (quote ((uidvalidity (string :tag "IMAP uidvalidity") "Server-assigned value attached to IMAP groups, used to maintain consistency."))))
                nil [8810 9234])
            ("gnus-agent-parameters" variable
               (:constant-flag t
                :default-value (quote ((agent-predicate (sexp :tag "Selection Predicate" :value false) "Predicate used to automatically select articles for downloading." gnus-agent-cat-predicate) (agent-score (choice :tag "Score File" :value nil (const file :tag "Use group's score files") (repeat (list (string :format "%v" :tag "File name")))) "Which score files to use when using score to select articles to fetch.

    nil
         All articles will be scored to zero (0).

    `file'
         The group's score files will be used to score the articles.

    `List'
         A list of score file names." gnus-agent-cat-score-file) (agent-short-article (integer :tag "Max Length of Short Article" :value "") "The SHORT predicate will evaluate to true when the article is
shorter than this length." gnus-agent-cat-length-when-short) (agent-long-article (integer :tag "Min Length of Long Article" :value "") "The LONG predicate will evaluate to true when the article is
longer than this length." gnus-agent-cat-length-when-long) (agent-low-score (integer :tag "Low Score Limit" :value "") "The LOW predicate will evaluate to true when the article scores
lower than this limit." gnus-agent-cat-low-score) (agent-high-score (integer :tag "High Score Limit" :value "") "The HIGH predicate will evaluate to true when the article scores
higher than this limit." gnus-agent-cat-high-score) (agent-days-until-old (integer :tag "Days Until Old" :value "") "The OLD predicate will evaluate to true when the fetched article
has been stored locally for at least this many days." gnus-agent-cat-days-until-old) (agent-enable-expiration (radio :tag "Expire in this Group or Topic" :value nil (const :format "Enable " ENABLE) (const :format "Disable " DISABLE)) "
Enable, or disable, agent expiration in this group or topic." gnus-agent-cat-enable-expiration) (agent-enable-undownloaded-faces (boolean :tag "Enable Agent Faces") "Have the summary buffer use the agent's undownloaded faces.
These faces, when enabled, act as a warning that an article has not
been fetched into either the agent nor the cache.  This is of most use
to users who use the agent as a cache (i.e. they only operate on
articles that have been downloaded).  Leave disabled to display normal
article faces even when the article hasn't been downloaded." gnus-agent-cat-enable-undownloaded-faces))))
                nil [9256 12223])
            ("gnus-custom-params" variable nil nil [12226 12253])
            ("gnus-custom-method" variable nil nil [12254 12281])
            ("gnus-custom-group" variable nil nil [12282 12308])
            ("gnus-custom-topic" variable nil nil [12309 12335])
            ("gnus-group-customize" function
               (:user-visible-flag t
                :arguments ("group" "topic"))
                nil [12337 18838])
            ("gnus-group-customize-done" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [18840 19464])
            ("gnus-score-parameters" variable
               (:constant-flag t
                :default-value (quote ((mark (number :tag "Mark") "The value of this entry should be a number.
Any articles with a score lower than this number will be marked as read.") (expunge (number :tag "Expunge") "The value of this entry should be a number.
Any articles with a score lower than this number will be removed from
the summary buffer.") (mark-and-expunge (number :tag "Mark-and-expunge") "The value of this entry should be a number.
Any articles with a score lower than this number will be marked as
read and removed from the summary buffer.") (thread-mark-and-expunge (number :tag "Thread-mark-and-expunge") "The value of this entry should be a number.
All articles that belong to a thread that has a total score below this
number will be marked as read and removed from the summary buffer.
`gnus-thread-score-function' says how to compute the total score
for a thread.") (files (repeat :inline t :tag "Files" file) "The value of this entry should be any number of file names.
These files are assumed to be score files as well, and will be loaded
the same way this one was.") (exclude-files (repeat :inline t :tag "Exclude-files" file) "The clue of this entry should be any number of files.
These files will not be loaded, even though they would normally be so,
for some reason or other.") (eval (sexp :tag "Eval" :value nil) "The value of this entry will be `eval'uated.
This element will be ignored when handling global score files.") (read-only (boolean :tag "Read-only" :value t) "Read-only score files will not be updated or saved.
Global score files should feature this atom.") (orphan (number :tag "Orphan") "The value of this entry should be a number.
Articles that do not have parents will get this number added to their
scores.  Imagine you follow some high-volume newsgroup, like
`comp.lang.c'.  Most likely you will only follow a few of the threads,
also want to see any new threads.

You can do this with the following two score file entries:

     (orphan -500)
     (mark-and-expunge -100)

When you enter the group the first time, you will only see the new
threads.  You then raise the score of the threads that you find
interesting (with `I T' or `I S'), and ignore (`C y') the rest.
Next time you enter the group, you will see new articles in the
interesting threads, plus any new threads.

I.e.---the orphan score atom is for high-volume groups where there
exist a few interesting threads which can't be found automatically
by ordinary scoring rules.") (adapt (choice :tag "Adapt" (const t) (const ignore) (sexp :format "%v" :hide-front-space t)) "This entry controls the adaptive scoring.
If it is t, the default adaptive scoring rules will be used.  If it
is `ignore', no adaptive scoring will be performed on this group.  If
it is a list, this list will be used as the adaptive scoring rules.
If it isn't present, or is something other than t or `ignore', the
default adaptive scoring rules will be used.  If you want to use
adaptive scoring on most groups, you'd set `gnus-use-adaptive-scoring'
to t, and insert an `(adapt ignore)' in the groups where you do not
want adaptive scoring.  If you only want adaptive scoring in a few
groups, you'd set `gnus-use-adaptive-scoring' to nil, and insert
`(adapt t)' in the score files of the groups where you want it.") (adapt-file (file :tag "Adapt-file") "All adaptive score entries will go to the file named by this entry.
It will also be applied when entering the group.  This atom might
be handy if you want to adapt on several groups at once, using the
same adaptive file for a number of groups.") (local (repeat :tag "Local" (group :value (nil nil) (symbol :tag "Variable") (sexp :tag "Value"))) "The value of this entry should be a list of `(VAR VALUE)' pairs.
Each VAR will be made buffer-local to the current summary buffer,
and set to the value specified.  This is a convenient, if somewhat
strange, way of setting variables in some groups if you don't like
hooks much.") (touched (sexp :format "Touched
") "Internal variable."))))
                nil [19492 23865])
            ("define-widget" code nil nil [23867 24003])
            ("gnus-score-string-convert" function (:arguments ("widget")) nil [24005 26535])
            ("define-widget" code nil nil [26537 26676])
            ("gnus-score-integer-convert" function (:arguments ("widget")) nil [26678 27576])
            ("define-widget" code nil nil [27578 27708])
            ("gnus-score-date-convert" function (:arguments ("widget")) nil [27710 29636])
            ("define-widget" code nil nil [29638 29764])
            ("gnus-score-extra-convert" function (:arguments ("widget")) nil [29766 31474])
            ("gnus-custom-scores" variable nil nil [31476 31503])
            ("gnus-custom-score-alist" variable nil nil [31504 31536])
            ("gnus-score-customize" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [31538 35435])
            ("gnus-score-customize-done" function (:arguments ("ignore")) nil [35437 35739])
            ("category-fields" variable nil nil [35741 35769])
            ("gnus-agent-cat-name" variable nil nil [35770 35798])
            ("gnus-agent-cat-score-file" variable nil nil [35799 35833])
            ("gnus-agent-cat-length-when-short" variable nil nil [35834 35875])
            ("gnus-agent-cat-length-when-long" variable nil nil [35876 35916])
            ("gnus-agent-cat-low-score" variable nil nil [35917 35950])
            ("gnus-agent-cat-high-score" variable nil nil [35951 35985])
            ("gnus-agent-cat-enable-expiration" variable nil nil [35986 36027])
            ("gnus-agent-cat-days-until-old" variable nil nil [36028 36066])
            ("gnus-agent-cat-predicate" variable nil nil [36067 36100])
            ("gnus-agent-cat-groups" variable nil nil [36101 36131])
            ("gnus-agent-cat-enable-undownloaded-faces" variable nil nil [36132 36181])
            ("gnus-trim-whitespace" function (:arguments ("s")) nil [36183 36389])
            ("gnus-agent-cat-prepare-category-field" function (:arguments ("parameter")) nil [36391 37875])
            ("gnus-agent-customize-category" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [37877 42275])
            ("gnus-cus" package nil nil [42291 42310]))          
      :file "gnus-cus.el"
      :pointmax 42338
      :fsize 42337
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 12223 . 12224) (symbol 9237 . 9253) (open-paren 9236 . 9237)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [899 912])
            ("gnus" include nil nil [915 930])
            ("gnus-backlog-buffer" variable (:default-value " *Gnus Backlog*") nil [973 1019])
            ("gnus-backlog-articles" variable nil nil [1020 1054])
            ("gnus-backlog-hashtb" variable nil nil [1055 1087])
            ("gnus-backlog-buffer" function nil nil [1089 1347])
            ("gnus-backlog-setup" function nil nil [1349 1501])
            ("gnus-add-shutdown" code nil nil [1503 1551])
            ("gnus-backlog-shutdown" function (:user-visible-flag t) nil [1553 1791])
            ("gnus-backlog-enter-article" function (:arguments ("group" "number" "buffer")) nil [1793 2769])
            ("gnus-backlog-remove-oldest-article" function nil nil [2771 3301])
            ("gnus-backlog-remove-article" function (:arguments ("group" "number")) nil [3303 4127])
            ("gnus-backlog-request-article" function (:arguments ("group" "number" "buffer")) nil [4129 5101])
            ("gnus-bcklg" package nil nil [5103 5124]))          
      :file "gnus-bcklg.el"
      :pointmax 5154
      :fsize 5153
      :lastmodtime '(23525 29551 0 0)
      :unmatched-syntax '((close-paren 912 . 913) (symbol 881 . 898) (open-paren 880 . 881)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [887 902])
            ("gnus-win" include nil nil [903 922])
            ("gnus-edit-form" customgroup (:user-visible-flag t) nil [951 1025])
            ("gnus-edit-form-mode-hook" variable nil nil [1027 1153])
            ("gnus-edit-form-menu-hook" variable nil nil [1155 1301])
            ("gnus-edit-form-buffer" variable (:default-value "*Gnus edit form*") nil [1327 1376])
            ("gnus-edit-form-done-function" variable nil nil [1377 1418])
            ("gnus-edit-form-mode-map" variable nil nil [1420 1456])
            ("unless" code nil nil [1457 1724])
            ("gnus-edit-form-make-menu-bar" function nil nil [1726 2041])
            ("define-derived-mode" code nil nil [2043 2394])
            ("gnus-edit-form" function (:arguments ("form" "documentation" "exit-func" "layout")) nil [2396 3302])
            ("gnus-edit-form-done" function (:user-visible-flag t) nil [3304 3597])
            ("gnus-edit-form-exit" function (:user-visible-flag t) nil [3599 3786])
            ("gnus-eform" package nil nil [3788 3809]))          
      :file "gnus-eform.el"
      :pointmax 3839
      :fsize 3838
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("sendmail" include nil nil [1004 1023])
            ("message" include nil nil [1024 1042])
            ("gnus" include nil nil [1043 1058])
            ("gnus-msg" include nil nil [1059 1078])
            ("cl" include nil nil [1101 1114])
            ("vm-mode" function (:prototype-flag t) nil [1117 1141])
            ("vm-save-message" function (:prototype-flag t) nil [1142 1174])
            ("gnus-vm-inhibit-window-system" variable nil nil [1176 1313])
            ("unless" code nil nil [1315 1420])
            ("gnus-vm-make-folder" function (:arguments ("buffer")) nil [1422 2129])
            ("gnus-summary-save-article-vm" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [2131 2580])
            ("gnus-summary-save-in-vm" function (:arguments ("folder")) nil [2582 3045])
            ("gnus-vm" package nil nil [3047 3065]))          
      :file "gnus-vm.el"
      :pointmax 3092
      :fsize 3091
      :lastmodtime '(23525 29554 0 0)
      :unmatched-syntax '((close-paren 1114 . 1115) (symbol 1081 . 1098) (open-paren 1080 . 1081)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnoo" include nil nil [7624 7639])
            ("gnus-group" include nil nil [7640 7661])
            ("message" include nil nil [7662 7680])
            ("gnus-util" include nil nil [7681 7701])
            ("cl-lib" include nil nil [7721 7738])
            ("nnir-memo-query" variable nil nil [7766 7830])
            ("nnir-memo-server" variable nil nil [7832 7898])
            ("nnir-artlist" variable nil nil [7900 7961])
            ("nnir-search-history" variable nil nil [7963 8056])
            ("nnir-tmp-buffer" variable
               (:constant-flag t
                :default-value " *nnir*")
                nil [8058 8126])
            ("nnir-imap-search-arguments" variable (:default-value (quote (("whole message" . "TEXT") ("subject" . "SUBJECT") ("to" . "TO") ("from" . "FROM") ("body" . "BODY") ("imap" . "")))) nil [8148 8396])
            ("nnir-imap-search-other" variable (:default-value "HEADER %S") nil [8398 8584])
            ("nnir-imap-search-argument-history" variable nil nil [8586 8683])
            ("nnir-artlist-length" function (:arguments ("artlist")) nil [8732 8836])
            ("nnir-artlist-article" function (:arguments ("artlist" "n")) nil [8838 8995])
            ("nnir-artitem-group" function (:arguments ("artitem")) nil [8997 9096])
            ("nnir-artitem-number" function (:arguments ("artitem")) nil [9098 9199])
            ("nnir-artitem-rsv" function (:arguments ("artitem")) nil [9201 9328])
            ("nnir-article-group" function (:arguments ("article")) nil [9330 9472])
            ("nnir-article-number" function (:arguments ("article")) nil [9474 9619])
            ("nnir-article-rsv" function (:arguments ("article")) nil [9621 9757])
            ("nnir-article-ids" function (:arguments ("article")) nil [9759 9897])
            ("nnir-categorize" function (:arguments ("sequence" "keyfunc" "valuefunc")) nil [9899 10596])
            ("gnus-sum" include nil nil [10617 10636])
            ("nnoo-declare" code nil nil [10638 10657])
            ("nnoo-define-basics" code nil nil [10658 10683])
            ("gnus-declare-backend" code nil nil [10685 10729])
            ("nnir" customgroup (:user-visible-flag t) nil [10766 10856])
            ("nnir-ignored-newsgroups" variable nil nil [10858 11040])
            ("nnir-summary-line-format" variable nil nil [11042 11563])
            ("nnir-retrieve-headers-override-function" variable nil nil [11565 12065])
            ("nnir-imap-default-search-key" variable (:default-value "whole message") nil [12067 12429])
            ("nnir-swish++-configuration-file" variable (:default-value (expand-file-name "~/Mail/swish++.conf")) nil [12431 12584])
            ("nnir-swish++-program" variable (:default-value "search") nil [12586 12699])
            ("nnir-swish++-additional-switches" variable (:default-value (quote nil)) nil [12701 13074])
            ("nnir-swish++-remove-prefix" variable (:default-value (concat (getenv "HOME") "/Mail/")) nil [13076 13442])
            ("make-obsolete-variable" code nil nil [13590 13681])
            ("nnir-swish-e-index-file" variable (:default-value (expand-file-name "~/Mail/index.swish-e")) nil [13682 13960])
            ("nnir-swish-e-index-files" variable (:default-value (list nnir-swish-e-index-file)) nil [13962 14142])
            ("nnir-swish-e-program" variable (:default-value "swish-e") nil [14144 14293])
            ("nnir-swish-e-additional-switches" variable (:default-value (quote nil)) nil [14295 14703])
            ("nnir-swish-e-remove-prefix" variable (:default-value (concat (getenv "HOME") "/Mail/")) nil [14705 15106])
            ("nnir-hyrex-program" variable (:default-value "nnir-search") nil [15171 15288])
            ("nnir-hyrex-additional-switches" variable (:default-value (quote nil)) nil [15290 15700])
            ("nnir-hyrex-index-directory" variable (:default-value (getenv "HOME")) nil [15702 15823])
            ("nnir-hyrex-remove-prefix" variable (:default-value (concat (getenv "HOME") "/Mail/")) nil [15825 16437])
            ("nnir-namazu-program" variable (:default-value "namazu") nil [16491 16602])
            ("nnir-namazu-index-directory" variable (:default-value (expand-file-name "~/Mail/namazu/")) nil [16604 16747])
            ("nnir-namazu-additional-switches" variable (:default-value (quote nil)) nil [16749 17225])
            ("nnir-namazu-remove-prefix" variable (:default-value (concat (getenv "HOME") "/Mail/")) nil [17227 17843])
            ("nnir-notmuch-program" variable (:default-value "notmuch") nil [17845 17977])
            ("nnir-notmuch-additional-switches" variable (:default-value (quote nil)) nil [17979 18370])
            ("nnir-notmuch-remove-prefix" variable (:default-value (concat (getenv "HOME") "/Mail/")) nil [18372 18756])
            ("nnir-engines" variable (:default-value (\` ((imap nnir-run-imap ((criteria "Imap Search in" (\, (mapcar (quote car) nnir-imap-search-arguments)) nil nil nnir-imap-search-argument-history (\, nnir-imap-default-search-key)))) (gmane nnir-run-gmane ((gmane-author . "Gmane Author: "))) (swish++ nnir-run-swish++ ((swish++-group . "Swish++ Group spec (regexp): "))) (swish-e nnir-run-swish-e ((swish-e-group . "Swish-e Group spec (regexp): "))) (namazu nnir-run-namazu nil) (notmuch nnir-run-notmuch nil) (hyrex nnir-run-hyrex ((hyrex-group . "Hyrex Group spec (regexp): "))) (find-grep nnir-run-find-grep ((grep-options . "Grep options: ")))))) nil [18793 20603])
            ("nnir-method-default-engines" variable (:default-value (quote ((nnimap . imap) (nntp . gmane)))) nil [20605 21096])
            ("declare-function" code nil nil [21113 21169])
            ("gnus-group-make-nnir-group" function
               (:user-visible-flag t
                :arguments ("nnir-extra-parms" "specs"))
                nil [21171 22815])
            ("gnus-summary-make-nnir-group" function
               (:user-visible-flag t
                :arguments ("nnir-extra-parms"))
                nil [22817 23170])
            ("deffoo" code nil nil [23211 23544])
            ("deffoo" code nil nil [23546 24572])
            ("deffoo" code nil nil [24574 26367])
            ("deffoo" code nil nil [26369 27907])
            ("deffoo" code nil nil [27909 28746])
            ("deffoo" code nil nil [28748 29653])
            ("deffoo" code nil nil [29655 30618])
            ("deffoo" code nil nil [30620 30870])
            ("deffoo" code nil nil [30872 31614])
            ("deffoo" code nil nil [31617 32875])
            ("deffoo" code nil nil [32878 33405])
            ("nnir-add-result" function (:arguments ("dirnam" "artno" "score" "prefix" "server" "artlist")) nil [33534 33846])
            ("nnmaildir-base-name-to-article-number" function (:prototype-flag t) nil [33848 33909])
            ("nnir-compose-result" function (:arguments ("dirnam" "article" "score" "prefix" "server")) nil [34026 35150])
            ("nnimap-change-group" function (:prototype-flag t) nil [35183 35223])
            ("declare-function" code nil nil [35224 35268])
            ("declare-function" code nil nil [35269 35324])
            ("nnir-run-imap" function (:arguments ("query" "srv" "groups")) nil [35344 37604])
            ("nnir-imap-make-query" function (:arguments ("criteria" "qstring")) nil [37606 38944])
            ("nnir-imap-query-to-imap" function (:arguments ("criteria" "query")) nil [38947 39266])
            ("nnir-imap-expr-to-imap" function (:arguments ("criteria" "expr")) nil [39269 40089])
            ("nnir-imap-parse-query" function (:arguments ("string")) nil [40092 40646])
            ("nnir-imap-next-expr" function (:arguments ("count")) nil [40649 41016])
            ("nnir-imap-next-term" function (:arguments ("count")) nil [41019 41375])
            ("nnir-imap-peek-symbol" function nil nil [41378 41531])
            ("nnir-imap-next-symbol" function (:arguments ("count")) nil [41533 42961])
            ("nnir-imap-delimited-string" function (:arguments ("delimiter")) nil [42963 43437])
            ("nnir-imap-end-of-input" function nil nil [43439 43560])
            ("nnir-run-swish++" function (:arguments ("query" "server" "group")) nil [43699 47201])
            ("nnir-run-swish-e" function (:arguments ("query" "server" "group")) nil [47225 50648])
            ("nnir-run-hyrex" function (:arguments ("query" "server" "group")) nil [50669 53579])
            ("nnir-run-namazu" function (:arguments ("query" "server" "group")) nil [53601 56444])
            ("nnir-run-notmuch" function (:arguments ("query" "server" "group")) nil [56446 59271])
            ("nnir-run-find-grep" function (:arguments ("query" "server" "grouplist")) nil [59273 61877])
            ("declare-function" code nil nil [61879 61951])
            ("declare-function" code nil nil [61952 62021])
            ("nnir-run-gmane" function (:arguments ("query" "srv" "groups")) nil [62042 63677])
            ("gnus-nnir-group-p" function (:arguments ("group")) nil [63695 63906])
            ("nnir-read-parms" function (:arguments ("nnir-search-engine")) nil [63908 64128])
            ("nnir-read-parm" function (:arguments ("parmspec")) nil [64130 64601])
            ("nnir-run-query" function (:arguments ("specs")) nil [64603 65049])
            ("nnir-server-to-search-engine" function (:arguments ("server")) nil [65051 65245])
            ("nnir-read-server-parm" function (:arguments ("key" "server" "not-global")) nil [65247 65709])
            ("nnir-possibly-change-group" function (:arguments ("group" "server")) nil [65711 66028])
            ("nnir-server-opened" function (:arguments ("server")) nil [66030 66186])
            ("nnimap-make-thread-query" function (:prototype-flag t) nil [66188 66233])
            ("declare-function" code nil nil [66234 66302])
            ("nnir-search-thread" function (:arguments ("header")) nil [66304 67325])
            ("nnir-get-active" function (:arguments ("srv")) nil [67327 68535])
            ("declare-function" code nil nil [68575 68694])
            ("nnir-registry-action" function (:arguments ("action" "data-header" "from" "to" "method")) nil [68696 68958])
            ("nnir-mode" function nil nil [68960 69662])
            ("gnus-summary-create-nnir-group" function nil nil [69665 70070])
            ("deffoo" code nil nil [70073 70990])
            ("deffoo" code nil nil [70992 71061])
            ("deffoo" code nil nil [71063 71112])
            ("deffoo" code nil nil [71114 71159])
            ("deffoo" code nil nil [71161 71195])
            ("nnoo-define-skeleton" code nil nil [71197 71224])
            ("nnir" package nil nil [71238 71253]))          
      :file "nnir.el"
      :pointmax 71277
      :fsize 71277
      :lastmodtime '(23525 29556 0 0)
      :unmatched-syntax '((close-paren 7738 . 7739) (symbol 7703 . 7720) (open-paren 7702 . 7703)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [903 916])
            ("gnus" include nil nil [919 934])
            ("gnus-score" include nil nil [935 956])
            ("gnus-util" include nil nil [957 977])
            ("gnus-advanced-headers" variable nil nil [1004 1038])
            ("gnus-advanced-not" variable (:default-value (intern (format "%c" 172))) nil [1096 1149])
            ("gnus-advanced-index" variable
               (:constant-flag t
                :default-value (quote (("number" 0 gnus-advanced-integer) ("subject" 1 gnus-advanced-string) ("from" 2 gnus-advanced-string) ("date" 3 gnus-advanced-date) ("message-id" 4 gnus-advanced-string) ("references" 5 gnus-advanced-string) ("chars" 6 gnus-advanced-integer) ("lines" 7 gnus-advanced-integer) ("xref" 8 gnus-advanced-string) ("head" nil gnus-advanced-body) ("body" nil gnus-advanced-body) ("all" nil gnus-advanced-body))))
                nil [1151 1659])
            ("parse-time-string" function (:prototype-flag t) nil [1661 1703])
            ("gnus-score-advanced" function (:arguments ("rule" "trace")) nil [1705 2596])
            ("gnus-advanced-score-rule" function (:arguments ("rule")) nil [2598 4128])
            ("gnus-advanced-score-article" function (:arguments ("rule")) nil [4130 4553])
            ("gnus-advanced-string" function (:arguments ("index" "match" "type")) nil [4555 5279])
            ("gnus-advanced-integer" function (:arguments ("index" "match" "type")) nil [5281 5488])
            ("gnus-advanced-date" function (:arguments ("index" "match" "type")) nil [5490 5917])
            ("gnus-advanced-body" function (:arguments ("header" "match" "type")) nil [5919 8253])
            ("gnus-logic" package nil nil [8255 8276]))          
      :file "gnus-logic.el"
      :pointmax 8306
      :fsize 8305
      :lastmodtime '(23525 29552 0 0)
      :unmatched-syntax '((close-paren 916 . 917) (symbol 885 . 902) (open-paren 884 . 885))))
  :file "!drive_c!Program Files!Emacs 26.1!share!emacs!26.1!lisp!gnus!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
