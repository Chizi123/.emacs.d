;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-mode" package nil nil [2495 2514])
            ("esh-util" include nil nil [2516 2535])
            ("esh-module" include nil nil [2536 2557])
            ("esh-cmd" include nil nil [2558 2576])
            ("esh-io" include nil nil [2577 2594])
            ("esh-var" include nil nil [2595 2613])
            ("eshell-mode" customgroup (:user-visible-flag t) nil [2615 2746])
            ("eshell-mode-unload-hook" variable nil nil [2769 2901])
            ("eshell-mode-hook" variable nil nil [2903 3027])
            ("eshell-first-time-mode-hook" variable nil nil [3029 3230])
            ("eshell-exit-hook" variable nil nil [3232 3490])
            ("eshell-kill-on-exit" variable (:default-value t) nil [3492 3671])
            ("eshell-input-filter-functions" variable nil nil [3673 3899])
            ("eshell-send-direct-to-subprocesses" variable nil nil [3901 4044])
            ("eshell-expand-input-functions" variable nil nil [4046 4263])
            ("eshell-scroll-to-bottom-on-input" variable nil nil [4265 4745])
            ("eshell-scroll-to-bottom-on-output" variable nil nil [4747 5415])
            ("eshell-scroll-show-maximum-output" variable (:default-value t) nil [5417 5735])
            ("eshell-buffer-maximum-lines" variable (:default-value 1024) nil [5737 6028])
            ("eshell-output-filter-functions" variable (:default-value (quote (eshell-postoutput-scroll-to-bottom eshell-handle-control-codes eshell-handle-ansi-color eshell-watch-for-password-prompt))) nil [6030 6412])
            ("eshell-preoutput-filter-functions" variable nil nil [6414 6693])
            ("eshell-password-prompt-regexp" variable (:default-value (format "\\(%s\\).*:\\s *\\'" (regexp-opt password-word-equivalents))) nil [6695 6965])
            ("eshell-skip-prompt-function" variable nil nil [6967 7136])
            ("define-obsolete-variable-alias" code nil nil [7138 7234])
            ("eshell-status-in-mode-line" variable (:default-value t) nil [7236 7388])
            ("eshell-first-time-p" variable (:default-value t) nil [7390 7485])
            ("eshell-mode" variable nil nil [7640 7664])
            ("eshell-mode-map" variable nil nil [7665 7693])
            ("eshell-command-running-string" variable (:default-value "--") nil [7694 7737])
            ("eshell-command-map" variable nil nil [7738 7769])
            ("eshell-command-prefix" variable nil nil [7770 7804])
            ("eshell-last-input-start" variable nil nil [7805 7841])
            ("eshell-last-input-end" variable nil nil [7842 7876])
            ("eshell-last-output-start" variable nil nil [7877 7914])
            ("eshell-last-output-block-begin" variable nil nil [7915 7958])
            ("eshell-last-output-end" variable nil nil [7959 7994])
            ("eshell-currently-handling-window" variable nil nil [7996 8041])
            ("define-abbrev-table" code nil nil [8043 8093])
            ("eshell-mode-syntax-table" variable (:default-value (let ((st (make-syntax-table)) (i 0)) (while (< i 48) (modify-syntax-entry i "_   " st) (setq i (1+ i))) (setq i (1+ 57)) (while (< i 65) (modify-syntax-entry i "_   " st) (setq i (1+ i))) (setq i (1+ 90)) (while (< i 97) (modify-syntax-entry i "_   " st) (setq i (1+ i))) (setq i (1+ 122)) (while (< i 128) (modify-syntax-entry i "_   " st) (setq i (1+ i))) (modify-syntax-entry 32 "    " st) (modify-syntax-entry 9 "    " st) (modify-syntax-entry 12 "    " st) (modify-syntax-entry 10 ">   " st) (modify-syntax-entry 13 ">   " st) (modify-syntax-entry 96 "'   " st) (modify-syntax-entry 39 "'   " st) (modify-syntax-entry 44 "'   " st) (modify-syntax-entry 46 "_   " st) (modify-syntax-entry 45 "_   " st) (modify-syntax-entry 124 ".   " st) (modify-syntax-entry 35 "'   " st) (modify-syntax-entry 34 "\"    " st) (modify-syntax-entry 92 "/   " st) (modify-syntax-entry 40 "()  " st) (modify-syntax-entry 41 ")(  " st) (modify-syntax-entry 123 "(}  " st) (modify-syntax-entry 125 "){  " st) (modify-syntax-entry 91 "(]  " st) (modify-syntax-entry 93 ")[  " st) (map-char-table (if (featurep (quote xemacs)) (lambda (key _val) (and (characterp key) (>= (char-int key) 256) (/= (char-syntax key) 119) (modify-syntax-entry key "_   " st))) (lambda (key _val) (and (if (consp key) (and (>= (car key) 128) (/= (char-syntax (car key)) 119)) (and (>= key 256) (/= (char-syntax key) 119))) (modify-syntax-entry key "_   " st)))) (standard-syntax-table)) st)) nil [8095 10162])
            ("eshell-kill-buffer-function" function nil nil [10185 10679])
            ("define-derived-mode" code nil nil [10696 16674])
            ("put" code nil nil [16676 16715])
            ("eshell-command-started" function nil nil [16717 16879])
            ("eshell-command-finished" function nil nil [16881 17045])
            ("eshell-toggle-direct-send" function nil nil [17072 17496])
            ("eshell-self-insert-command" function nil nil [17498 17738])
            ("eshell-intercept-commands" function nil nil [17740 18542])
            ("declare-function" code nil nil [18544 18621])
            ("eshell-find-tag" function
               (:user-visible-flag t
                :arguments ("tagname" "next-p" "regexp-p"))
                nil [18623 18998])
            ("eshell-move-argument" function (:arguments ("limit" "func" "property" "arg")) nil [19000 19550])
            ("eshell-forward-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19552 19715])
            ("eshell-backward-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19717 19885])
            ("eshell-repeat-argument" function (:arguments ("arg")) nil [19887 20079])
            ("eshell-bol" function (:user-visible-flag t) nil [20081 20292])
            ("eshell-push-command-mark" function nil nil [20294 20426])
            ("custom-add-option" code nil nil [20428 20498])
            ("eshell-goto-input-start" function nil nil [20500 20708])
            ("custom-add-option" code nil nil [20710 20780])
            ("eshell-interactive-print" function (:arguments ("string")) nil [20782 20909])
            ("eshell-begin-on-new-line" function nil nil [20911 21121])
            ("eshell-reset" function (:arguments ("no-hooks")) nil [21123 21651])
            ("eshell-parse-command-input" function (:arguments ("beg" "end" "args")) nil [21653 22418])
            ("eshell-update-markers" function (:arguments ("pmark")) nil [22420 22662])
            ("eshell-queue-input" function
               (:user-visible-flag t
                :arguments ("use-region"))
                nil [22664 22916])
            ("eshell-send-input" function
               (:user-visible-flag t
                :arguments ("use-region" "queue-p" "no-newline"))
                nil [22918 25895])
            ("eshell-kill-new" function nil nil [25897 26037])
            ("custom-add-option" code nil nil [26039 26106])
            ("eshell-output-filter" function (:arguments ("process" "string")) nil [26108 27779])
            ("eshell-run-output-filters" function nil nil [27781 28039])
            ("eshell-preinput-scroll-to-bottom" function nil nil [28082 29041])
            ("eshell-postoutput-scroll-to-bottom" function nil nil [29084 30422])
            ("eshell-beginning-of-input" function nil nil [30424 30546])
            ("eshell-beginning-of-output" function nil nil [30548 30674])
            ("eshell-end-of-output" function nil nil [30676 30874])
            ("eshell-kill-output" function (:user-visible-flag t) nil [30876 31159])
            ("eshell-show-output" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [31161 31719])
            ("eshell-mark-output" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [31721 32015])
            ("eshell-kill-input" function (:user-visible-flag t) nil [32017 32299])
            ("eshell-show-maximum-output" function
               (:user-visible-flag t
                :arguments ("interactive"))
                nil [32301 32561])
            ("eshell/clear" function
               (:user-visible-flag t
                :arguments ("scrollback"))
                nil [32563 32992])
            ("eshell/clear-scrollback" function nil nil [32994 33134])
            ("eshell-get-old-input" function (:arguments ("use-current-region")) nil [33136 33545])
            ("eshell-copy-old-input" function (:user-visible-flag t) nil [33547 33776])
            ("eshell/exit" function nil nil [33778 33902])
            ("eshell-life-is-too-much" function (:user-visible-flag t) nil [33904 34102])
            ("eshell-truncate-buffer" function (:user-visible-flag t) nil [34104 34849])
            ("custom-add-option" code nil nil [34851 34931])
            ("eshell-send-invisible" function (:user-visible-flag t) nil [34933 35401])
            ("eshell-watch-for-password-prompt" function nil nil [35403 36039])
            ("custom-add-option" code nil nil [36041 36131])
            ("eshell-handle-control-codes" function nil nil [36133 37076])
            ("custom-add-option" code nil nil [37078 37163])
            ("ansi-color-apply-on-region" function (:prototype-flag t) nil [37165 37216])
            ("eshell-handle-ansi-color" function nil nil [37218 37391])
            ("custom-add-option" code nil nil [37393 37475]))          
      :file "esh-mode.el"
      :pointmax 37503
      :fsize 37502
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [885 902])
            ("eshell-util" customgroup (:user-visible-flag t) nil [905 1041])
            ("eshell-stringify-t" variable (:default-value t) nil [1064 1396])
            ("eshell-group-file" variable (:default-value "/etc/group") nil [1398 1577])
            ("eshell-passwd-file" variable (:default-value "/etc/passwd") nil [1579 1762])
            ("eshell-hosts-file" variable (:default-value "/etc/hosts") nil [1764 1921])
            ("eshell-handle-errors" variable (:default-value t) nil [1923 2106])
            ("eshell-private-file-modes" variable (:default-value 384) nil [2108 2264])
            ("eshell-private-directory-modes" variable (:default-value 448) nil [2266 2433])
            ("eshell-tar-regexp" variable (:default-value "\\.t\\(ar\\(\\.\\(gz\\|bz2\\|xz\\|Z\\)\\)?\\|gz\\|a[zZ]\\|z2\\)\\'") nil [2435 2657])
            ("eshell-convert-numeric-arguments" variable (:default-value t) nil [2659 3364])
            ("eshell-number-regexp" variable (:default-value "-?\\([0-9]*\\.\\)?[0-9]+\\(e[-0-9.]+\\)?") nil [3366 3700])
            ("eshell-ange-ls-uids" variable nil nil [3702 4034])
            ("eshell-group-names" variable nil nil [4061 4133])
            ("eshell-group-timestamp" variable nil nil [4135 4219])
            ("eshell-user-names" variable nil nil [4221 4291])
            ("eshell-user-timestamp" variable nil nil [4293 4375])
            ("eshell-host-names" variable nil nil [4377 4459])
            ("eshell-host-timestamp" variable nil nil [4461 4544])
            ("eshell-under-windows-p" function nil nil [4562 4699])
            ("eshell-condition-case" function (:arguments ("tag" "form" "handlers")) nil [4701 5033])
            ("eshell-find-delimiter" function (:arguments ("open" "close" "bound" "reverse-p" "backslash-p")) nil [5035 6611])
            ("eshell-convert" function (:arguments ("string")) nil [6613 7147])
            ("eshell-sublist" function (:arguments ("l" "n" "m")) nil [7149 7463])
            ("eshell-path-env" variable (:default-value (getenv "PATH")) nil [7465 7624])
            ("make-variable-buffer-local" code nil nil [7625 7670])
            ("eshell-parse-colon-path" function (:arguments ("path-env")) nil [7672 7994])
            ("eshell-split-path" function (:arguments ("path")) nil [7996 8713])
            ("eshell-to-flat-string" function (:arguments ("value")) nil [8715 9041])
            ("eshell-for" function (:arguments ("for-var" "for-list" "forms")) nil [9043 9331])
            ("eshell-flatten-list" function (:arguments ("args")) nil [9333 9626])
            ("eshell-uniqify-list" function (:arguments ("l")) nil [9628 9873])
            ("eshell-stringify" function (:arguments ("object")) nil [9875 10275])
            ("eshell-stringify-list" function (:arguments ("args")) nil [10277 10404])
            ("eshell-flatten-and-stringify" function (:arguments ("args")) nil [10406 10585])
            ("eshell-directory-files" function (:arguments ("regexp" "directory")) nil [10587 10791])
            ("eshell-regexp-arg" function (:arguments ("prompt")) nil [10793 11243])
            ("eshell-printable-size" function (:arguments ("filesize" "human-readable" "block-size" "use-colors")) nil [11245 12338])
            ("eshell-winnow-list" function (:arguments ("entries" "exclude" "predicates")) nil [12340 13083])
            ("eshell-redisplay" function nil nil [13085 13440])
            ("eshell-read-passwd-file" function (:arguments ("file")) nil [13442 14046])
            ("eshell-read-passwd" function (:arguments ("file" "result-var" "timestamp-var")) nil [14048 14453])
            ("eshell-read-group-names" function nil nil [14455 14661])
            ("eshell-group-id" function (:arguments ("name")) nil [14663 14782])
            ("eshell-group-name" function (:arguments ("gid")) nil [14784 14909])
            ("eshell-read-user-names" function nil nil [14911 15116])
            ("eshell-user-id" function (:arguments ("name")) nil [15118 15235])
            ("defalias" code nil nil [15237 15282])
            ("eshell-read-hosts-file" function (:arguments ("filename")) nil [15284 15897])
            ("eshell-read-hosts" function (:arguments ("file" "result-var" "timestamp-var")) nil [15899 16302])
            ("eshell-read-host-names" function nil nil [16304 16504])
            ("and" code nil nil [16506 16995])
            ("eshell-copy-environment" function nil nil [16997 17128])
            ("eshell-subgroups" function (:arguments ("groupsym")) nil [17130 17447])
            ("eshell-with-file-modes" function (:arguments ("modes" "forms")) nil [17449 17645])
            ("eshell-with-private-file-modes" function (:arguments ("forms")) nil [17647 17806])
            ("eshell-make-private-directory" function (:arguments ("dir" "parents")) nil [17808 18026])
            ("eshell-substring" function (:arguments ("string" "sublen")) nil [18028 18218])
            ("ange-cache" variable nil nil [18220 18239])
            ("and" code nil nil [18350 19198])
            ("eshell-directory-files-and-attributes" function (:arguments ("dir" "full" "match" "nosort" "id-format")) nil [19200 19698])
            ("eshell-current-ange-uids" function nil nil [19700 20050])
            ("if" code nil nil [20093 20217])
            ("ange-ftp" include nil nil [20240 20265])
            ("tramp-file-name-structure" variable nil nil [20295 20329])
            ("declare-function" code nil nil [20330 20423])
            ("declare-function" code nil nil [20424 20482])
            ("eshell-parse-ange-ls" function (:arguments ("dir")) nil [20484 22541])
            ("eshell-file-attributes" function (:arguments ("file" "id-format")) nil [22543 23524])
            ("defalias" code nil nil [23526 23565])
            ("eshell-processp" function (:arguments ("proc")) nil [23567 23714])
            ("esh-util" package nil nil [25976 25995]))          
      :file "esh-util.el"
      :pointmax 26023
      :fsize 26022
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax '((close-paren 20265 . 20266) (symbol 20220 . 20237) (open-paren 20219 . 20220) (close-paren 902 . 903) (symbol 867 . 884) (open-paren 866 . 867)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-module" package nil nil [882 903])
            ("eshell" include nil nil [905 922])
            ("esh-util" include nil nil [923 942])
            ("eshell-module" customgroup (:user-visible-flag t) nil [944 1199])
            ("load" code nil nil [1499 1533])
            ("eshell-module-unload-hook" variable (:default-value (quote (eshell-unload-extension-modules))) nil [1556 1717])
            ("eshell-modules-list" variable (:default-value (quote (eshell-alias eshell-banner eshell-basic eshell-cmpl eshell-dirs eshell-glob eshell-hist eshell-ls eshell-pred eshell-prompt eshell-script eshell-term eshell-unix))) nil [1719 2620])
            ("eshell-using-module" function (:arguments ("module")) nil [2633 2888])
            ("eshell-unload-extension-modules" function nil nil [2890 3215]))          
      :file "esh-module.el"
      :pointmax 3245
      :fsize 3244
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-util" include nil nil [3447 3466])
            ("unless" code nil nil [3467 3513])
            ("esh-arg" include nil nil [3514 3532])
            ("esh-proc" include nil nil [3533 3552])
            ("esh-ext" include nil nil [3553 3571])
            ("pcomplete" include nil nil [3614 3634])
            ("cl-lib" include nil nil [3594 3611])
            ("eshell-cmd" customgroup (:user-visible-flag t) nil [3638 3899])
            ("eshell-prefer-lisp-functions" variable nil nil [3901 4043])
            ("eshell-lisp-regexp" variable (:default-value "\\([(`]\\|#'\\)") nil [4045 4263])
            ("eshell-pre-command-hook" variable nil nil [4265 4398])
            ("eshell-post-command-hook" variable nil nil [4400 4533])
            ("eshell-prepare-command-hook" variable nil nil [4535 4932])
            ("eshell-named-command-hook" variable nil nil [4934 5866])
            ("eshell-pre-rewrite-command-hook" variable (:default-value (quote (eshell-no-command-conversion eshell-subcommand-arg-values))) nil [5868 6186])
            ("eshell-rewrite-command-hook" variable (:default-value (quote (eshell-rewrite-for-command eshell-rewrite-while-command eshell-rewrite-if-command eshell-rewrite-sexp-command eshell-rewrite-initial-subcommand eshell-rewrite-named-command))) nil [6188 7005])
            ("eshell-post-rewrite-command-function" variable (:default-value (function identity)) nil [7007 7218])
            ("eshell-post-rewrite-command-hook" variable nil nil [7219 7447])
            ("make-obsolete-variable" code nil nil [7448 7575])
            ("eshell-complex-commands" variable (:default-value (quote ("ls"))) nil [7577 8201])
            ("eshell-cmd-load-hook" variable nil nil [8224 8407])
            ("eshell-debug-command" variable nil nil [8409 8814])
            ("eshell-deferrable-commands" variable (:default-value (quote (eshell-named-command eshell-lisp-command eshell-process-identity))) nil [8816 9196])
            ("eshell-subcommand-bindings" variable (:default-value (quote ((eshell-in-subcommand-p t) (default-directory default-directory) (process-environment (eshell-copy-environment))))) nil [9198 9455])
            ("put" code nil nil [9457 9514])
            ("eshell-ensure-newline-p" variable nil nil [9516 9703])
            ("eshell-current-command" variable nil nil [9730 9765])
            ("eshell-command-name" variable nil nil [9766 9798])
            ("eshell-command-arguments" variable nil nil [9799 9836])
            ("eshell-in-pipeline-p" variable nil nil [9837 10015])
            ("eshell-in-subcommand-p" variable nil nil [10016 10051])
            ("eshell-last-arguments" variable nil nil [10052 10086])
            ("eshell-last-command-name" variable nil nil [10087 10124])
            ("eshell-last-async-proc" variable nil nil [10125 10231])
            ("eshell-interactive-process" function nil nil [10249 10373])
            ("eshell-cmd-initialize" function nil nil [10375 11589])
            ("eshell-complete-lisp-symbols" function nil nil [11591 11967])
            ("eshell--sep-terms" variable nil nil [11989 12015])
            ("eshell-parse-command" function (:arguments ("command" "args" "toplevel")) nil [12017 13856])
            ("eshell-debug-command" function (:arguments ("tag" "subform")) nil [13858 14234])
            ("eshell-debug-show-parsed-args" function (:arguments ("terms")) nil [14236 14426])
            ("eshell-no-command-conversion" function (:arguments ("terms")) nil [14428 14637])
            ("eshell-subcommand-arg-values" function (:arguments ("terms")) nil [14639 15035])
            ("eshell-rewrite-sexp-command" function (:arguments ("terms")) nil [15037 15305])
            ("eshell-rewrite-initial-subcommand" function (:arguments ("terms")) nil [15307 15516])
            ("eshell-rewrite-named-command" function (:arguments ("terms")) nil [15518 15845])
            ("eshell-command-body" variable nil nil [15847 15875])
            ("eshell-test-body" variable nil nil [15876 15901])
            ("eshell-invokify-arg" function (:arguments ("arg" "share-output" "silent")) nil [15903 16936])
            ("eshell-last-command-status" variable nil nil [16938 16973])
            ("eshell--local-vars" variable nil nil [17000 17105])
            ("eshell-rewrite-for-command" function (:arguments ("terms")) nil [17107 18229])
            ("eshell-structure-basic-command" function (:arguments ("func" "names" "keyword" "test" "body" "else")) nil [18231 19514])
            ("eshell-rewrite-while-command" function (:arguments ("terms")) nil [19516 20110])
            ("eshell-rewrite-if-command" function (:arguments ("terms")) nil [20112 20862])
            ("eshell-last-command-result" variable nil nil [20864 20899])
            ("eshell-exit-success-p" function nil nil [20928 21080])
            ("eshell--cmd" variable nil nil [21082 21102])
            ("eshell-parse-pipeline" function (:arguments ("terms")) nil [21104 22691])
            ("eshell-parse-subcommand-argument" function nil nil [22693 23260])
            ("eshell-parse-lisp-argument" function nil nil [23262 23760])
            ("eshell-separate-commands" function (:arguments ("terms" "separator" "reversed" "last-terms-sym")) nil [23762 24916])
            ("eshell-do-subjob" function (:arguments ("object")) nil [25624 25847])
            ("eshell-commands" function (:arguments ("object" "silent")) nil [25849 26095])
            ("eshell-trap-errors" function (:arguments ("object")) nil [26097 26790])
            ("eshell-output-handle" variable nil nil [26792 26821])
            ("eshell-error-handle" variable nil nil [26855 26883])
            ("eshell-copy-handles" function (:arguments ("object")) nil [26919 27249])
            ("eshell-protect" function (:arguments ("object")) nil [27251 27436])
            ("eshell-do-pipelines" function (:arguments ("pipeline" "notfirst")) nil [27438 28714])
            ("eshell-do-pipelines-synchronously" function (:arguments ("pipeline")) nil [28716 30333])
            ("defalias" code nil nil [30335 30380])
            ("eshell-execute-pipeline" function (:arguments ("pipeline")) nil [30382 30922])
            ("eshell-as-subcommand" function (:arguments ("command")) nil [30924 31202])
            ("eshell-do-command-to-value" function (:arguments ("object")) nil [31204 31482])
            ("eshell-command-to-value" function (:arguments ("object")) nil [31484 31737])
            ("eshell/eshell-debug" function (:arguments ("args")) nil [32461 33335])
            ("pcomplete/eshell-mode/eshell-debug" function nil nil [33337 33472])
            ("eshell-invoke-directly" function (:arguments ("command")) nil [33474 34004])
            ("eshell-eval-command" function (:arguments ("command" "input")) nil [34006 35160])
            ("eshell-resume-command" function (:arguments ("proc" "status")) nil [35162 35460])
            ("eshell-resume-eval" function nil nil [35462 35950])
            ("eshell-manipulate" function (:arguments ("tag" "commands")) nil [35952 36418])
            ("eshell-do-eval" function (:arguments ("form" "synchronous-p")) nil [36420 42405])
            ("declare-function" code nil nil [42430 42496])
            ("eshell/which" function (:arguments ("command" "names")) nil [42498 43736])
            ("put" code nil nil [43738 43790])
            ("eshell-named-command" function (:arguments ("command" "args")) nil [43792 44391])
            ("defalias" code nil nil [44393 44448])
            ("eshell-find-alias-function" function (:arguments ("name")) nil [44450 45220])
            ("eshell-plain-command" function (:arguments ("command" "args")) nil [45222 45698])
            ("eshell-exec-lisp" function (:arguments ("printer" "errprint" "func-or-form" "args" "form-p")) nil [45700 46679])
            ("eshell-apply*" function (:arguments ("printer" "errprint" "func" "args")) nil [46681 46940])
            ("eshell-funcall*" function (:arguments ("printer" "errprint" "func" "args")) nil [46942 47117])
            ("eshell-eval*" function (:arguments ("printer" "errprint" "form")) nil [47119 47270])
            ("eshell-apply" function (:arguments ("func" "args")) nil [47272 47517])
            ("eshell-funcall" function (:arguments ("func" "args")) nil [47519 47658])
            ("eshell-eval" function (:arguments ("form")) nil [47660 47794])
            ("eshell-applyn" function (:arguments ("func" "args")) nil [47796 48044])
            ("eshell-funcalln" function (:arguments ("func" "args")) nil [48046 48187])
            ("eshell-evaln" function (:arguments ("form")) nil [48189 48326])
            ("eshell-last-output-end" variable nil nil [48328 48359])
            ("eshell-lisp-command" function (:arguments ("object" "args")) nil [48394 49581])
            ("defalias" code nil nil [49583 49636])
            ("esh-cmd" package nil nil [49638 49656]))          
      :file "esh-cmd.el"
      :pointmax 49683
      :fsize 49682
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax '((close-paren 3634 . 3635) (symbol 3574 . 3591) (open-paren 3573 . 3574)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-io" package nil nil [2402 2419])
            ("esh-arg" include nil nil [2421 2439])
            ("esh-util" include nil nil [2440 2459])
            ("cl-lib" include nil nil [2482 2499])
            ("eshell-io" customgroup (:user-visible-flag t) nil [2502 2726])
            ("eshell-io-load-hook" variable nil nil [2749 2922])
            ("eshell-number-of-handles" variable (:default-value 3) nil [2924 3272])
            ("eshell-output-handle" variable (:default-value 1) nil [3274 3390])
            ("eshell-error-handle" variable (:default-value 2) nil [3392 3506])
            ("eshell-print-queue-size" variable (:default-value 5) nil [3508 3759])
            ("eshell-virtual-targets" variable (:default-value (quote (("/dev/eshell" eshell-interactive-print nil) ("/dev/kill" (lambda (mode) (if (eq mode (quote overwrite)) (kill-new "")) (quote eshell-kill-append)) t) ("/dev/clip" (lambda (mode) (if (eq mode (quote overwrite)) (let ((select-enable-clipboard t)) (kill-new ""))) (quote eshell-clipboard-append)) t)))) nil [3761 5032])
            ("put" code nil nil [5034 5087])
            ("eshell-current-handles" variable nil nil [5114 5149])
            ("eshell-last-command-status" variable nil nil [5151 5247])
            ("eshell-last-command-result" variable nil nil [5249 5349])
            ("eshell-output-file-buffer" variable nil nil [5351 5449])
            ("eshell-print-count" variable nil nil [5451 5478])
            ("eshell-current-redirections" variable nil nil [5479 5515])
            ("eshell-io-initialize" function nil nil [5533 5941])
            ("eshell-parse-redirection" function nil nil [5943 6610])
            ("eshell-strip-redirections" function (:arguments ("terms")) nil [6612 7209])
            ("eshell--apply-redirections" function (:arguments ("cmd")) nil [7211 7422])
            ("eshell-create-handles" function (:arguments ("stdout" "output-mode" "stderr" "error-mode")) nil [7424 8127])
            ("eshell-protect-handles" function (:arguments ("handles")) nil [8129 8419])
            ("eshell-close-target" function (:arguments ("target" "status")) nil [8421 9650])
            ("eshell-close-handles" function (:arguments ("exit-code" "result" "handles")) nil [9652 10743])
            ("eshell-kill-append" function (:arguments ("string")) nil [10745 10897])
            ("eshell-clipboard-append" function (:arguments ("string")) nil [10899 11093])
            ("eshell-get-target" function (:arguments ("target" "mode")) nil [11095 12455])
            ("grep-null-device" variable nil nil [12457 12482])
            ("eshell-set-output-handle" function (:arguments ("index" "mode" "target")) nil [12484 13293])
            ("eshell-interactive-output-p" function nil nil [13295 13564])
            ("eshell-print-queue" variable nil nil [13566 13597])
            ("eshell-print-queue-count" variable (:default-value -1) nil [13598 13634])
            ("eshell-print" function (:arguments ("object")) nil [13636 13770])
            ("eshell-flush" function (:arguments ("reset-p")) nil [13772 14174])
            ("eshell-init-print-buffer" function nil nil [14176 14275])
            ("eshell-buffered-print" function (:arguments ("strings")) nil [14277 14714])
            ("eshell-error" function (:arguments ("object")) nil [14716 14848])
            ("eshell-errorn" function (:arguments ("object")) nil [14850 14999])
            ("eshell-printn" function (:arguments ("object")) nil [15001 15151])
            ("eshell-output-filter" function (:prototype-flag t) nil [15153 15196])
            ("eshell-output-object-to-target" function (:arguments ("object" "target")) nil [15198 16471])
            ("eshell-output-object" function (:arguments ("object" "handle-index" "handles")) nil [16473 16901]))          
      :file "esh-io.el"
      :pointmax 16927
      :fsize 16926
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax '((close-paren 2499 . 2500) (symbol 2462 . 2479) (open-paren 2461 . 2462)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-var" package nil nil [3427 3445])
            ("esh-util" include nil nil [3447 3466])
            ("esh-cmd" include nil nil [3467 3485])
            ("esh-opt" include nil nil [3486 3504])
            ("pcomplete" include nil nil [3506 3526])
            ("env" include nil nil [3527 3541])
            ("ring" include nil nil [3542 3557])
            ("eshell-var" customgroup (:user-visible-flag t) nil [3559 3887])
            ("eshell-var-load-hook" variable nil nil [3910 4092])
            ("eshell-prefer-lisp-variables" variable nil nil [4094 4240])
            ("eshell-complete-export-definition" variable (:default-value t) nil [4242 4399])
            ("eshell-modify-global-environment" variable nil nil [4401 4554])
            ("eshell-variable-name-regexp" variable (:default-value "[A-Za-z0-9_-]+") nil [4556 4893])
            ("eshell-variable-aliases-list" variable (:default-value (quote (("COLUMNS" (lambda (indices) (window-width)) t) ("LINES" (lambda (indices) (window-height)) t) ("_" (lambda (indices) (if (not indices) (car (last eshell-last-arguments)) (eshell-apply-indices eshell-last-arguments indices)))) ("?" eshell-last-command-status) ("$" eshell-last-command-result) ("0" eshell-command-name) ("1" (lambda (indices) (nth 0 eshell-command-arguments))) ("2" (lambda (indices) (nth 1 eshell-command-arguments))) ("3" (lambda (indices) (nth 2 eshell-command-arguments))) ("4" (lambda (indices) (nth 3 eshell-command-arguments))) ("5" (lambda (indices) (nth 4 eshell-command-arguments))) ("6" (lambda (indices) (nth 5 eshell-command-arguments))) ("7" (lambda (indices) (nth 6 eshell-command-arguments))) ("8" (lambda (indices) (nth 7 eshell-command-arguments))) ("9" (lambda (indices) (nth 8 eshell-command-arguments))) ("*" (lambda (indices) (if (not indices) eshell-command-arguments (eshell-apply-indices eshell-command-arguments indices))))))) nil [4895 6936])
            ("put" code nil nil [6938 6997])
            ("eshell-var-initialize" function nil nil [7015 8042])
            ("eshell-handle-local-variables" function nil nil [8044 9722])
            ("eshell-interpolate-variable" function nil nil [9724 10016])
            ("eshell/define" function (:arguments ("var-alias" "definition")) nil [10018 10698])
            ("eshell/export" function (:arguments ("sets")) nil [10700 11008])
            ("pcomplete/eshell-mode/export" function nil nil [11010 11219])
            ("eshell/unset" function (:arguments ("args")) nil [11221 11388])
            ("pcomplete/eshell-mode/unset" function nil nil [11390 11523])
            ("eshell/setq" function (:arguments ("args")) nil [11525 11767])
            ("pcomplete/eshell-mode/setq" function nil nil [11769 11969])
            ("eshell/env" function (:arguments ("args")) nil [11971 12347])
            ("eshell-insert-envvar" function
               (:user-visible-flag t
                :arguments ("envvar-name"))
                nil [12349 12567])
            ("eshell-envvar-names" function (:arguments ("environment")) nil [12569 12809])
            ("eshell-environment-variables" function nil nil [12811 13289])
            ("eshell-parse-variable" function nil nil [13291 13977])
            ("eshell-parse-variable-ref" function nil nil [13979 16745])
            ("eshell-glob-function" variable nil nil [16747 16776])
            ("eshell-parse-indices" function nil nil [16778 17186])
            ("eshell-get-variable" function (:arguments ("name" "indices")) nil [17188 17839])
            ("eshell-apply-indices" function (:arguments ("value" "indices")) nil [17841 19432])
            ("eshell-index-value" function (:arguments ("value" "index")) nil [19434 20118])
            ("eshell-complete-variable-reference" function nil nil [20152 20517])
            ("eshell-variables-list" function nil nil [20519 21191])
            ("eshell-complete-variable-assignment" function nil nil [21193 21639]))          
      :file "esh-var.el"
      :pointmax 21666
      :fsize 21665
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-arg" package nil nil [1054 1072])
            ("esh-mode" include nil nil [1074 1093])
            ("eshell-arg" customgroup (:user-visible-flag t) nil [1095 1328])
            ("eshell-parse-argument-hook" variable (:default-value (list (quote eshell-parse-special-reference) (function (lambda nil (when (and (not eshell-current-argument) (not eshell-current-quoted) (looking-at eshell-number-regexp) (eshell-arg-delimiter (match-end 0))) (goto-char (match-end 0)) (let ((str (match-string 0))) (if (> (length str) 0) (add-text-properties 0 (length str) (quote (number t)) str)) str)))) (function (lambda nil (unless eshell-inside-quote-regexp (setq eshell-inside-quote-regexp (format "[^%s]+" (apply (quote string) eshell-special-chars-inside-quoting)))) (unless eshell-outside-quote-regexp (setq eshell-outside-quote-regexp (format "[^%s]+" (apply (quote string) eshell-special-chars-outside-quoting)))) (when (looking-at (if eshell-current-quoted eshell-inside-quote-regexp eshell-outside-quote-regexp)) (goto-char (match-end 0)) (let ((str (match-string 0))) (if str (set-text-properties 0 (length str) nil str)) str)))) (function (lambda nil (let (comment-p) (when (or (looking-at "[ 	]+") (and (not eshell-current-argument) (looking-at "#\\([^<'].*\\|$\\)") (setq comment-p t))) (if comment-p (add-text-properties (match-beginning 0) (match-end 0) (quote (comment t)))) (goto-char (match-end 0)) (eshell-finish-arg))))) (quote eshell-parse-backslash) (quote eshell-parse-literal-quote) (quote eshell-parse-double-quote) (quote eshell-parse-delimiter))) nil [1330 3818])
            ("eshell-arg-load-hook" variable nil nil [3852 4035])
            ("eshell-delimiter-argument-list" variable (:default-value (quote (59 38 124 62 32 9 10))) nil [4037 4218])
            ("eshell-special-chars-inside-quoting" variable (:default-value (quote (92 34))) nil [4220 4388])
            ("eshell-special-chars-outside-quoting" variable (:default-value (append eshell-delimiter-argument-list (quote (35 33 92 34 39)))) nil [4390 4682])
            ("eshell-current-argument" variable nil nil [4709 4745])
            ("eshell-current-modifiers" variable nil nil [4746 4783])
            ("eshell-arg-listified" variable nil nil [4784 4817])
            ("eshell-nested-argument" variable nil nil [4818 4853])
            ("eshell-current-quoted" variable nil nil [4854 4888])
            ("eshell-inside-quote-regexp" variable nil nil [4889 4928])
            ("eshell-outside-quote-regexp" variable nil nil [4929 4969])
            ("eshell-arg-initialize" function nil nil [4987 5259])
            ("eshell-insert-buffer-name" function
               (:user-visible-flag t
                :arguments ("buffer-name"))
                nil [5261 5452])
            ("eshell-escape-arg" function (:arguments ("string")) nil [5454 5643])
            ("eshell-resolve-current-argument" function nil nil [5645 6403])
            ("eshell-finish-arg" function (:arguments ("argument")) nil [6405 6591])
            ("eshell-arg-delimiter" function (:arguments ("pos")) nil [6593 6859])
            ("eshell-quote-argument" function (:arguments ("string")) nil [6861 7205])
            ("eshell-parse-arguments" function (:arguments ("beg" "end")) nil [7228 8407])
            ("eshell-parse-argument" function nil nil [8409 9527])
            ("eshell-operator" function (:arguments ("_args")) nil [9529 9691])
            ("eshell-looking-at-backslash-return" function (:arguments ("pos")) nil [9693 9944])
            ("eshell-quote-backslash" function (:arguments ("string" "index")) nil [9946 10536])
            ("eshell-parse-backslash" function nil nil [10538 11651])
            ("eshell-parse-literal-quote" function nil nil [11653 12116])
            ("eshell-parse-double-quote" function nil nil [12118 12631])
            ("eshell-parse-special-reference" function nil nil [12633 13775])
            ("eshell-parse-delimiter" function nil nil [13777 14484]))          
      :file "esh-arg.el"
      :pointmax 14511
      :fsize 14510
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-proc" package nil nil [867 886])
            ("esh-cmd" include nil nil [888 906])
            ("eshell-proc" customgroup (:user-visible-flag t) nil [908 1119])
            ("eshell-proc-load-hook" variable nil nil [1142 1323])
            ("eshell-process-wait-seconds" variable nil nil [1325 1475])
            ("eshell-process-wait-milliseconds" variable (:default-value 50) nil [1477 1638])
            ("eshell-done-messages-in-minibuffer" variable (:default-value t) nil [1640 1796])
            ("eshell-delete-exited-processes" variable (:default-value t) nil [1798 2626])
            ("eshell-reset-signals" variable (:default-value "^\\(interrupt\\|killed\\|quit\\|stopped\\)") nil [2628 2822])
            ("eshell-exec-hook" variable nil nil [2824 3263])
            ("eshell-kill-hook" variable nil nil [3265 3757])
            ("eshell-current-subjob-p" variable nil nil [3784 3820])
            ("eshell-process-list" variable nil nil [3822 3904])
            ("eshell-kill-process-function" function (:arguments ("proc" "status")) nil [3922 4403])
            ("eshell-proc-initialize" function nil nil [4405 5102])
            ("eshell-reset-after-proc" function (:arguments ("status")) nil [5104 5390])
            ("eshell-wait-for-process" function (:arguments ("procs")) nil [5392 5821])
            ("defalias" code nil nil [5823 5871])
            ("eshell/jobs" function (:arguments ("args")) nil [5873 6021])
            ("eshell/kill" function (:arguments ("args")) nil [6023 7219])
            ("eshell-read-process-name" function (:arguments ("prompt")) nil [7221 7512])
            ("eshell-insert-process" function
               (:user-visible-flag t
                :arguments ("process"))
                nil [7514 7771])
            ("eshell-record-process-object" function (:arguments ("object")) nil [7773 8163])
            ("eshell-remove-process-entry" function (:arguments ("entry")) nil [8165 8517])
            ("eshell-scratch-buffer" variable (:default-value " *eshell-scratch*") nil [8519 8623])
            ("eshell-last-sync-output-start" variable nil nil [8624 8801])
            ("eshell-needs-pipe" variable (:default-value (quote ("bc"))) nil [8803 9112])
            ("eshell-needs-pipe-p" function (:arguments ("command")) nil [9114 9645])
            ("eshell-gather-process-output" function (:arguments ("command" "args")) nil [9647 13431])
            ("eshell-insertion-filter" function (:arguments ("proc" "string")) nil [13433 14107])
            ("eshell-sentinel" function (:arguments ("proc" "string")) nil [14109 15676])
            ("eshell-process-interact" function (:arguments ("func" "all" "query")) nil [15678 16663])
            ("eshell-kill-process-wait-time" variable (:default-value 5) nil [16665 16820])
            ("eshell-kill-process-signals" variable (:default-value (quote (SIGINT SIGQUIT SIGKILL))) nil [16822 17233])
            ("eshell-kill-processes-on-exit" variable nil nil [17235 18143])
            ("eshell-round-robin-kill" function (:arguments ("query")) nil [18145 18640])
            ("eshell-query-kill-processes" function nil nil [18642 19298])
            ("eshell-interrupt-process" function (:user-visible-flag t) nil [19300 19483])
            ("eshell-kill-process" function (:user-visible-flag t) nil [19485 19650])
            ("eshell-quit-process" function (:user-visible-flag t) nil [19652 19828])
            ("eshell-send-eof-to-process" function (:user-visible-flag t) nil [20371 20527]))          
      :file "esh-proc.el"
      :pointmax 20555
      :fsize 20554
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("esh-ext" package nil nil [1223 1241])
            ("esh-util" include nil nil [1243 1262])
            ("esh-cmd" include nil nil [1325 1343])
            ("esh-io" include nil nil [1305 1322])
            ("cl-lib" include nil nil [1285 1302])
            ("esh-arg" include nil nil [1345 1363])
            ("esh-opt" include nil nil [1364 1382])
            ("esh-proc" include nil nil [1383 1402])
            ("eshell-ext" customgroup (:user-visible-flag t) nil [1404 1595])
            ("eshell-ext-load-hook" variable nil nil [1618 1795])
            ("eshell-binary-suffixes" variable (:default-value exec-suffixes) nil [1797 1956])
            ("eshell-force-execution" variable (:default-value (not (null (memq system-type (quote (windows-nt ms-dos)))))) nil [1958 2573])
            ("eshell-search-path" function (:arguments ("name")) nil [2575 3249])
            ("declare-function" code nil nil [3400 3454])
            ("eshell-windows-shell-file" variable (:default-value (if (eshell-under-windows-p) (if (string-match "\\(cmdproxy\\|sh\\)\\.\\(com\\|exe\\)" shell-file-name) (or (eshell-search-path "cmd.exe") (eshell-search-path "command.com")) shell-file-name))) nil [3456 3918])
            ("eshell-parse-command" function (:prototype-flag t) nil [3920 3962])
            ("eshell-invoke-batch-file" function (:arguments ("args")) nil [3964 4336])
            ("eshell-interpreter-alist" variable (:default-value (if (eshell-under-windows-p) (quote (("\\.\\(bat\\|cmd\\)\\'" . eshell-invoke-batch-file))))) nil [4338 5417])
            ("eshell-alternate-command-hook" variable nil nil [5419 5985])
            ("eshell-command-interpreter-max-length" variable (:default-value 256) nil [5987 6147])
            ("eshell-explicit-command-char" variable (:default-value 42) nil [6149 6384])
            ("eshell-ext-initialize" function nil nil [6402 6556])
            ("eshell-explicit-command" function (:arguments ("command" "args")) nil [6558 7051])
            ("eshell-close-handles" function (:prototype-flag t) nil [7053 7094])
            ("eshell-remote-command" function (:arguments ("command" "args")) nil [7096 8067])
            ("eshell-external-command" function (:arguments ("command" "args")) nil [8069 8781])
            ("eshell/addpath" function (:arguments ("args")) nil [8783 9453])
            ("put" code nil nil [9455 9509])
            ("eshell-script-interpreter" function (:arguments ("file")) nil [9511 10075])
            ("eshell-find-interpreter" function (:arguments ("file" "args" "no-examine-p")) nil [10077 12235]))          
      :file "esh-ext.el"
      :pointmax 12262
      :fsize 12261
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax '((close-paren 1343 . 1344) (symbol 1265 . 1282) (open-paren 1264 . 1265)))
    (semanticdb-table "semanticdb-table"
      :file "esh-opt.el"
      :fsize 10032
      :lastmodtime '(23525 29550 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [7787 7804])
            ("esh-util" include nil nil [7806 7825])
            ("esh-mode" include nil nil [7826 7845])
            ("eshell" customgroup (:user-visible-flag t) nil [7847 8162])
            ("eshell-buffer-name" variable nil nil [8255 8282])
            ("eshell-add-to-window-buffer-names" function nil nil [8284 8483])
            ("eshell-remove-from-window-buffer-names" function nil nil [8485 8721])
            ("eshell-load-hook" variable nil nil [8723 8830])
            ("eshell-unload-hook" variable (:default-value (quote (eshell-unload-all-modules))) nil [8832 8974])
            ("eshell-buffer-name" variable (:default-value "*eshell*") nil [8976 9092])
            ("eshell-directory-name" variable (:default-value (locate-user-emacs-file "eshell/" ".eshell/")) nil [9094 9272])
            ("eshell" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [9478 10438])
            ("eshell-return-exits-minibuffer" function nil nil [10440 10864])
            ("eshell-non-interactive-p" variable nil nil [10866 11100])
            ("declare-function" code nil nil [11102 11166])
            ("eshell-command" function
               (:user-visible-flag t
                :arguments ("command" "arg"))
                nil [11183 13863])
            ("eshell-command-result" function (:arguments ("command" "status-var")) nil [13880 14765])
            ("define-obsolete-function-alias" code nil nil [15006 15082])
            ("eshell-unload-all-modules" function nil nil [15095 16083])
            ("run-hooks" code nil nil [16085 16114])
            ("eshell" package nil nil [16116 16133]))          
      :file "eshell.el"
      :pointmax 16159
      :fsize 16158
      :lastmodtime '(23525 29550 0 0)
      :unmatched-syntax '((close-paren 7804 . 7805) (symbol 7767 . 7784) (open-paren 7766 . 7767)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("eshell" include nil nil [3767 3784])
            ("progn" code nil nil [3801 4004])
            ("eshell-aliases-file" variable (:default-value (expand-file-name "alias" eshell-directory-name)) nil [4006 4459])
            ("eshell-bad-command-tolerance" variable (:default-value 3) nil [4461 4683])
            ("eshell-alias-load-hook" variable nil nil [4685 4870])
            ("eshell-command-aliases-list" variable nil nil [4872 5380])
            ("put" code nil nil [5382 5440])
            ("eshell-failed-commands-alist" variable nil nil [5442 5522])
            ("eshell-alias-initialize" function nil nil [5524 5945])
            ("eshell-command-aliased-p" function (:arguments ("name")) nil [5947 6029])
            ("eshell/alias" function (:arguments ("alias" "definition")) nil [6031 6882])
            ("pcomplete-stub" variable nil nil [6884 6907])
            ("pcomplete-here" function (:prototype-flag t) nil [6908 6946])
            ("pcomplete/eshell-mode/alias" function nil nil [6948 7101])
            ("eshell-read-aliases-list" function nil nil [7103 7690])
            ("eshell-write-aliases-list" function nil nil [7692 7999])
            ("eshell-lookup-alias" function (:arguments ("name")) nil [8001 8151])
            ("eshell-prevent-alias-expansion" variable nil nil [8153 8196])
            ("eshell-maybe-replace-by-alias" function (:arguments ("command" "_args")) nil [8198 8832])
            ("eshell-alias-completions" function (:arguments ("name")) nil [8834 9170])
            ("eshell-fix-bad-commands" function (:arguments ("name")) nil [9172 10118])
            ("em-alias" package nil nil [10120 10139]))          
      :file "em-alias.el"
      :pointmax 10240
      :fsize 10239
      :lastmodtime '(23525 29548 0 0)
      :unmatched-syntax nil))
  :file "!drive_c!Program Files!Emacs 26.1!share!emacs!26.1!lisp!eshell!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
